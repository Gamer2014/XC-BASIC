------- FILE invaders.asm LEVEL 1 PASS 3
      1 U4af7					      PROCESSOR	6502
      2 U4af7 ????
      3 U4af7 ????				      INCDIR	"/home/neils/Workspace/XC-BASIC/examples/invaders/."
      4  4a65 ????				      SEG	UPSTART
      5  0801					      ORG	$0801
      6  0801		       0b 08		      DC.W	next_line
      7  0803		       e2 07		      DC.W	2018
      8  0805		       9e		      HEX	9e
      9  0806					      IF	prg_start
     10  0806		       32 38 38 34	      DC.B	[prg_start]d
     11  080a					      ENDIF
     12  080a		       00		      HEX	00
     13  080b				   next_line
     14  080b		       00 00		      HEX	00 00
     15  080d							;------------	  --------
 Memory information:
     16  080d					      ECHO	"Memory information:"
 ===================
     17  080d					      ECHO	"==================="
 BASIC loader: $801 - $80c
     18  080d					      ECHO	"BASIC loader: $801 -", *-1
     19  080d				   library_start
     20  080d
     21  080d					      PROCESSOR	6502
   2373  0985					      LIST	ON
   2374  0985
   2375  0985
   2905  0985					      LIST	ON
   2906  0985
   3214  0ade					      LIST	ON
   3215  0ade
   3216  0ade					      PROCESSOR	6502
   3217  0ade
   3218  0ade							; Fills memory area
   3219  0ade							;
   3220  0ade							; derived from Practical Memory Move Routines
   3221  0ade							; by Bruce Clark
   3222  0ade							;
   3223  0ade							; R0: destination address
   3224  0ade							; A: fill byte
   3225  0ade							; R2: number of bytes to copy
   3226  0ade
   3227  0ade				   mem_memset SUBROUTINE
   3228  0ade		       00 fb	   .dst       EQU	R0
   3229  0ade		       00 fd	   .siz       EQU	R2
   3230  0ade		       a0 00		      ldy	#0
   3231  0ae0		       a6 fe		      ldx	.siz+1
   3232  0ae2		       f0 0a		      beq	.md2
   3233  0ae4				   .md1
   3234  0ae4		       91 fb		      sta	(.dst),Y
   3235  0ae6		       c8		      iny
   3236  0ae7		       d0 fb		      bne	.md1
   3237  0ae9		       e6 fc		      inc	.dst+1
   3238  0aeb		       ca		      dex
   3239  0aec		       d0 f6		      bne	.md1
   3240  0aee		       a6 fd	   .md2       ldx	.siz
   3241  0af0		       f0 06		      beq	.md4
   3242  0af2				   .md3
   3243  0af2		       91 fb		      sta	(.dst),Y
   3244  0af4		       c8		      iny
   3245  0af5		       ca		      dex
   3246  0af6		       d0 fa		      bne	.md3
   3247  0af8		       60	   .md4       rts
   3248  0af9
   3249  0af9					      MAC	memset
   3250  0af9					      IF	!FPULL
   3251  0af9					      pla
   3252  0af9					      sta	R1
   3253  0af9					      pla
   3254  0af9					      sta	R0
   3255  0af9					      ELSE
   3256  0af9					      sta	R0
   3257  0af9					      sty	R1
   3258  0af9					      ENDIF
   3259  0af9					      pla
   3260  0af9					      sta	R3
   3261  0af9					      pla
   3262  0af9					      sta	R2
   3263  0af9					      pla
   3264  0af9					      jsr	mem_memset
   3265  0af9					      ENDM
   3266  0af9
   3267  0af9							; Copies memory area downwards
   3268  0af9							; from Practical Memory Move Routines
   3269  0af9							; by Bruce Clark
   3270  0af9							;
   3271  0af9							; R0: source address
   3272  0af9							; R2: destination address
   3273  0af9							; R4: number of bytes to copy
   3274  0af9							;
   3275  0af9							; overlapping safe downwards only
   3276  0af9
   3277  0af9				   mem_memcpy SUBROUTINE
   3278  0af9		       00 fb	   .src       EQU	R0
   3279  0af9		       00 fd	   .dst       EQU	R2
   3280  0af9		       00 3f	   .siz       EQU	R4
   3281  0af9		       a0 00		      ldy	#0
   3282  0afb		       a6 40		      ldx	.siz+1
   3283  0afd		       f0 0e		      beq	.md2
   3284  0aff		       b1 fb	   .md1       lda	(.src),Y
   3285  0b01		       91 fd		      sta	(.dst),Y
   3286  0b03		       c8		      iny
   3287  0b04		       d0 f9		      bne	.md1
   3288  0b06		       e6 fc		      inc	.src+1
   3289  0b08		       e6 fe		      inc	.dst+1
   3290  0b0a		       ca		      dex
   3291  0b0b		       d0 f2		      bne	.md1
   3292  0b0d		       a6 3f	   .md2       ldx	.siz
   3293  0b0f		       f0 08		      beq	.md4
   3294  0b11		       b1 fb	   .md3       lda	(.src),Y
   3295  0b13		       91 fd		      sta	(.dst),Y
   3296  0b15		       c8		      iny
   3297  0b16		       ca		      dex
   3298  0b17		       d0 f8		      bne	.md3
   3299  0b19		       60	   .md4       rts
   3300  0b1a
   3301  0b1a					      MAC	memcpy
   3302  0b1a					      IF	!FPULL
   3303  0b1a					      pla
   3304  0b1a					      sta	R1
   3305  0b1a					      pla
   3306  0b1a					      sta	R0
   3307  0b1a					      ELSE
   3308  0b1a					      sta	R0
   3309  0b1a					      sty	R1
   3310  0b1a					      ENDIF
   3311  0b1a					      pla
   3312  0b1a					      sta	R3
   3313  0b1a					      pla
   3314  0b1a					      sta	R2
   3315  0b1a					      pla
   3316  0b1a					      sta	R5
   3317  0b1a					      pla
   3318  0b1a					      sta	R4
   3319  0b1a					      jsr	mem_memcpy
   3320  0b1a					      ENDM
   3321  0b1a
   3322  0b1a							; Copies memory area upwards
   3323  0b1a							;
   3324  0b1a							; from Practical Memory Move Routines
   3325  0b1a							; by Bruce Clark
   3326  0b1a							;
   3327  0b1a							; FROM = source start address
   3328  0b1a							; TO = destination start address
   3329  0b1a							; SIZE = number of bytes to move
   3330  0b1a
   3331  0b1a				   mem_memshift SUBROUTINE
   3332  0b1a		       00 fb	   .FROM      EQU	R0
   3333  0b1a		       00 fd	   .TO	      EQU	R2
   3334  0b1a		       00 3f	   .SIZE      EQU	R4
   3335  0b1a
   3336  0b1a		       a6 40		      ldx	.SIZE+1
   3337  0b1c		       18		      clc		; start at the final pages of FROM and TO
   3338  0b1d		       8a		      txa
   3339  0b1e		       65 fc		      adc	.FROM+1
   3340  0b20		       85 fc		      sta	.FROM+1
   3341  0b22		       18		      clc
   3342  0b23		       8a		      txa
   3343  0b24		       65 fe		      adc	.TO+1
   3344  0b26		       85 fe		      sta	.TO+1
   3345  0b28		       e8		      inx
   3346  0b29		       a4 3f		      ldy	.SIZE
   3347  0b2b		       f0 0e		      beq	.mu3
   3348  0b2d		       88		      dey
   3349  0b2e		       f0 07		      beq	.mu2
   3350  0b30				   .mu1
   3351  0b30		       b1 fb		      lda	(.FROM),y
   3352  0b32		       91 fd		      sta	(.TO),y
   3353  0b34		       88		      dey
   3354  0b35		       d0 f9		      bne	.mu1
   3355  0b37				   .mu2
   3356  0b37		       b1 fb		      lda	(.FROM),y
   3357  0b39		       91 fd		      sta	(.TO),Y
   3358  0b3b				   .mu3
   3359  0b3b		       88		      dey
   3360  0b3c		       c6 fc		      dec	.FROM+1
   3361  0b3e		       c6 fe		      dec	.TO+1
   3362  0b40		       ca		      dex
   3363  0b41		       d0 ed		      bne	.mu1
   3364  0b43		       60		      rts
   3365  0b44
   3366  0b44					      MAC	memshift
   3367  0b44					      IF	!FPULL
   3368  0b44					      pla
   3369  0b44					      sta	R1
   3370  0b44					      pla
   3371  0b44					      sta	R0
   3372  0b44					      ELSE
   3373  0b44					      sta	R0
   3374  0b44					      sty	R1
   3375  0b44					      ENDIF
   3376  0b44					      pla
   3377  0b44					      sta	R3
   3378  0b44					      pla
   3379  0b44					      sta	R2
   3380  0b44					      pla
   3381  0b44					      sta	R5
   3382  0b44					      pla
   3383  0b44					      sta	R4
   3384  0b44					      jsr	mem_memshift
   3385  0b44					      ENDM
   3386  0b44
   3387  0b44
 Library     : $80d - $b43
   3388  0b44					      ECHO	"Library     :",library_start,"-", *-1
   3389  0b44				   prg_start
   3390  0b44				   FPUSH      SET	0
   3391  0b44				   FPULL      SET	0
      0  0b44					      init_program
      1  0b44		       ba		      tsx
      2  0b45		       8e 85 09 	      stx	RESERVED_STACK_POINTER
      0  0b48					      seed_rnd
      1  0b48		       a5 a1		      lda	$a1
      2  0b4a		       8d dc 0a 	      sta	random
      3  0b4d		       a5 a2		      lda	$a2
      4  0b4f		       8d dd 0a 	      sta	random+1
      0  0b52					      basicout
      1  0b52		       a5 01		      lda	$01
      2  0b54		       29 fe		      and	#%11111110
      3  0b56		       85 01		      sta	$01
   3393  0b56				   FPUSH      SET	1
      0  0b58					      pbyte	#0
      1  0b58		       a9 00		      lda	#0
      2  0b5a				  -	      IF	!FPUSH
      3  0b5a				  -	      pha
      4  0b5a					      ENDIF
   3395  0b5a				   FPULL      SET	1
   3396  0b5a				   FPUSH      SET	0
      0  0b5a					      plb2var	_scroll
      1  0b5a				  -	      IF	!FPULL
      2  0b5a				  -	      pla
      3  0b5a					      ENDIF
      4  0b5a		       8d ae 4a 	      sta	_scroll
   3398  0b5a				   FPULL      SET	0
   3399  0b5a				   FPUSH      SET	1
      0  0b5d					      pbyte	#8
      1  0b5d		       a9 08		      lda	#8
      2  0b5f				  -	      IF	!FPUSH
      3  0b5f				  -	      pha
      4  0b5f					      ENDIF
   3401  0b5f				   FPULL      SET	1
   3402  0b5f				   FPUSH      SET	0
      0  0b5f					      plb2var	_enemy_posx
      1  0b5f				  -	      IF	!FPULL
      2  0b5f				  -	      pla
      3  0b5f					      ENDIF
      4  0b5f		       8d af 4a 	      sta	_enemy_posx
   3404  0b5f				   FPULL      SET	0
   3405  0b5f				   FPUSH      SET	1
      0  0b62					      pbyte	#0
      1  0b62		       a9 00		      lda	#0
      2  0b64				  -	      IF	!FPUSH
      3  0b64				  -	      pha
      4  0b64					      ENDIF
   3407  0b64				   FPULL      SET	1
   3408  0b64				   FPUSH      SET	0
      0  0b64					      plb2var	_enemy_posy
      1  0b64				  -	      IF	!FPULL
      2  0b64				  -	      pla
      3  0b64					      ENDIF
      4  0b64		       8d b0 4a 	      sta	_enemy_posy
   3410  0b64				   FPULL      SET	0
   3411  0b64				   FPUSH      SET	1
      0  0b67					      pbyte	#13
      1  0b67		       a9 0d		      lda	#13
      2  0b69				  -	      IF	!FPUSH
      3  0b69				  -	      pha
      4  0b69					      ENDIF
   3413  0b69				   FPULL      SET	1
   3414  0b69				   FPUSH      SET	0
      0  0b69					      plb2var	_bottom_row
      1  0b69				  -	      IF	!FPULL
      2  0b69				  -	      pla
      3  0b69					      ENDIF
      4  0b69		       8d b1 4a 	      sta	_bottom_row
   3416  0b69				   FPULL      SET	0
   3417  0b69				   FPUSH      SET	1
      0  0b6c					      pbyte	#1
      1  0b6c		       a9 01		      lda	#1
      2  0b6e				  -	      IF	!FPUSH
      3  0b6e				  -	      pha
      4  0b6e					      ENDIF
   3419  0b6e				   FPULL      SET	1
   3420  0b6e				   FPUSH      SET	0
      0  0b6e					      plb2var	_enemy_dir
      1  0b6e				  -	      IF	!FPULL
      2  0b6e				  -	      pla
      3  0b6e					      ENDIF
      4  0b6e		       8d b2 4a 	      sta	_enemy_dir
   3422  0b6e				   FPULL      SET	0
      0  0b71					      pbyte	#176
      1  0b71		       a9 b0		      lda	#176
      2  0b73					      IF	!FPUSH
      3  0b73		       48		      pha
      4  0b74					      ENDIF
      0  0b74					      btow
      1  0b74		       a9 00		      lda	#$00
      2  0b76		       48		      pha
      0  0b77					      plw2var	_ship_pos
      1  0b77					      IF	!FPULL
      2  0b77		       68		      pla
      3  0b78		       8d b4 4a 	      sta	_ship_pos+1
      4  0b7b		       68		      pla
      5  0b7c		       8d b3 4a 	      sta	_ship_pos
      6  0b7f				  -	      ELSE
      7  0b7f				  -	      sta	_ship_pos
      8  0b7f				  -	      sty	_ship_pos+1
      9  0b7f					      ENDIF
   3426  0b7f				   FPUSH      SET	1
      0  0b7f					      pbyte	#0
      1  0b7f		       a9 00		      lda	#0
      2  0b81				  -	      IF	!FPUSH
      3  0b81				  -	      pha
      4  0b81					      ENDIF
   3428  0b81				   FPULL      SET	1
   3429  0b81				   FPUSH      SET	0
      0  0b81					      plb2var	_bullet_on
      1  0b81				  -	      IF	!FPULL
      2  0b81				  -	      pla
      3  0b81					      ENDIF
      4  0b81		       8d b5 4a 	      sta	_bullet_on
   3431  0b81				   FPULL      SET	0
      0  0b84					      pbyte	#0
      1  0b84		       a9 00		      lda	#0
      2  0b86					      IF	!FPUSH
      3  0b86		       48		      pha
      4  0b87					      ENDIF
      0  0b87					      btow
      1  0b87		       a9 00		      lda	#$00
      2  0b89		       48		      pha
      0  0b8a					      plw2var	_bullet_posx
      1  0b8a					      IF	!FPULL
      2  0b8a		       68		      pla
      3  0b8b		       8d b7 4a 	      sta	_bullet_posx+1
      4  0b8e		       68		      pla
      5  0b8f		       8d b6 4a 	      sta	_bullet_posx
      6  0b92				  -	      ELSE
      7  0b92				  -	      sta	_bullet_posx
      8  0b92				  -	      sty	_bullet_posx+1
      9  0b92					      ENDIF
   3435  0b92				   FPUSH      SET	1
      0  0b92					      pbyte	#0
      1  0b92		       a9 00		      lda	#0
      2  0b94				  -	      IF	!FPUSH
      3  0b94				  -	      pha
      4  0b94					      ENDIF
   3437  0b94				   FPULL      SET	1
   3438  0b94				   FPUSH      SET	0
      0  0b94					      plb2var	_bullet_posy
      1  0b94				  -	      IF	!FPULL
      2  0b94				  -	      pla
      3  0b94					      ENDIF
      4  0b94		       8d b8 4a 	      sta	_bullet_posy
   3440  0b94				   FPULL      SET	0
      0  0b97					      pbyte	#0
      1  0b97		       a9 00		      lda	#0
      2  0b99					      IF	!FPUSH
      3  0b99		       48		      pha
      4  0b9a					      ENDIF
      0  0b9a					      btow
      1  0b9a		       a9 00		      lda	#$00
      2  0b9c		       48		      pha
      0  0b9d					      plw2var	_last_killed_enemy
      1  0b9d					      IF	!FPULL
      2  0b9d		       68		      pla
      3  0b9e		       8d ba 4a 	      sta	_last_killed_enemy+1
      4  0ba1		       68		      pla
      5  0ba2		       8d b9 4a 	      sta	_last_killed_enemy
      6  0ba5				  -	      ELSE
      7  0ba5				  -	      sta	_last_killed_enemy
      8  0ba5				  -	      sty	_last_killed_enemy+1
      9  0ba5					      ENDIF
      0  0ba5					      pbyte	#0
      1  0ba5		       a9 00		      lda	#0
      2  0ba7					      IF	!FPUSH
      3  0ba7		       48		      pha
      4  0ba8					      ENDIF
      0  0ba8					      btow
      1  0ba8		       a9 00		      lda	#$00
      2  0baa		       48		      pha
      0  0bab					      plw2var	_score
      1  0bab					      IF	!FPULL
      2  0bab		       68		      pla
      3  0bac		       8d bc 4a 	      sta	_score+1
      4  0baf		       68		      pla
      5  0bb0		       8d bb 4a 	      sta	_score
      6  0bb3				  -	      ELSE
      7  0bb3				  -	      sta	_score
      8  0bb3				  -	      sty	_score+1
      9  0bb3					      ENDIF
   3447  0bb3				   FPUSH      SET	1
      0  0bb3					      pbyte	#3
      1  0bb3		       a9 03		      lda	#3
      2  0bb5				  -	      IF	!FPUSH
      3  0bb5				  -	      pha
      4  0bb5					      ENDIF
   3449  0bb5				   FPULL      SET	1
   3450  0bb5				   FPUSH      SET	0
      0  0bb5					      plb2var	_lives
      1  0bb5				  -	      IF	!FPULL
      2  0bb5				  -	      pla
      3  0bb5					      ENDIF
      4  0bb5		       8d bd 4a 	      sta	_lives
   3452  0bb5				   FPULL      SET	0
   3453  0bb5				   FPUSH      SET	1
      0  0bb8					      pbyte	#20
      1  0bb8		       a9 14		      lda	#20
      2  0bba				  -	      IF	!FPUSH
      3  0bba				  -	      pha
      4  0bba					      ENDIF
   3455  0bba				   FPULL      SET	1
   3456  0bba				   FPUSH      SET	0
      0  0bba					      plb2var	_speed
      1  0bba				  -	      IF	!FPULL
      2  0bba				  -	      pla
      3  0bba					      ENDIF
      4  0bba		       8d be 4a 	      sta	_speed
   3458  0bba				   FPULL      SET	0
   3459  0bba				   FPUSH      SET	1
      0  0bbd					      pbyte	#20
      1  0bbd		       a9 14		      lda	#20
      2  0bbf				  -	      IF	!FPUSH
      3  0bbf				  -	      pha
      4  0bbf					      ENDIF
   3461  0bbf				   FPULL      SET	1
   3462  0bbf				   FPUSH      SET	0
      0  0bbf					      plb2var	_game_speed
      1  0bbf				  -	      IF	!FPULL
      2  0bbf				  -	      pla
      3  0bbf					      ENDIF
      4  0bbf		       8d bf 4a 	      sta	_game_speed
   3464  0bbf				   FPULL      SET	0
   3465  0bbf				   FPUSH      SET	1
      0  0bc2					      pbyte	#60
      1  0bc2		       a9 3c		      lda	#60
      2  0bc4				  -	      IF	!FPUSH
      3  0bc4				  -	      pha
      4  0bc4					      ENDIF
   3467  0bc4				   FPULL      SET	1
   3468  0bc4				   FPUSH      SET	0
      0  0bc4					      plb2var	_enemies_alive
      1  0bc4				  -	      IF	!FPULL
      2  0bc4				  -	      pla
      3  0bc4					      ENDIF
      4  0bc4		       8d c0 4a 	      sta	_enemies_alive
   3470  0bc4				   FPULL      SET	0
   3471  0bc4				   FPUSH      SET	1
      0  0bc7					      pbyte	#210
      1  0bc7		       a9 d2		      lda	#210
      2  0bc9				  -	      IF	!FPUSH
      3  0bc9				  -	      pha
      4  0bc9					      ENDIF
   3473  0bc9				   FPULL      SET	1
   3474  0bc9				   FPUSH      SET	0
      0  0bc9					      plb2var	_scroll_bottom_limit
      1  0bc9				  -	      IF	!FPULL
      2  0bc9				  -	      pla
      3  0bc9					      ENDIF
      4  0bc9		       8d c1 4a 	      sta	_scroll_bottom_limit
   3476  0bc9				   FPULL      SET	0
   3477  0bc9				   FPUSH      SET	1
      0  0bcc					      pword	#340
      1  0bcc				  -	      IF	!FPUSH
      2  0bcc				  -	      lda	#<#340
      3  0bcc				  -	      pha
      4  0bcc				  -	      lda	#>#340
      5  0bcc				  -	      pha
      6  0bcc					      ELSE
      7  0bcc		       a9 54		      lda	#<#340
      8  0bce		       a0 01		      ldy	#>#340
      9  0bd0					      ENDIF
   3479  0bd0				   FPULL      SET	1
   3480  0bd0				   FPUSH      SET	0
      0  0bd0					      plw2var	_enemy_map_length
      1  0bd0				  -	      IF	!FPULL
      2  0bd0				  -	      pla
      3  0bd0				  -	      sta	_enemy_map_length+1
      4  0bd0				  -	      pla
      5  0bd0				  -	      sta	_enemy_map_length
      6  0bd0					      ELSE
      7  0bd0		       8d c2 4a 	      sta	_enemy_map_length
      8  0bd3		       8c c3 4a 	      sty	_enemy_map_length+1
      9  0bd6					      ENDIF
   3482  0bd6				   FPULL      SET	0
      0  0bd6					      pbyte	#0
      1  0bd6		       a9 00		      lda	#0
      2  0bd8					      IF	!FPUSH
      3  0bd8		       48		      pha
      4  0bd9					      ENDIF
      0  0bd9					      btow
      1  0bd9		       a9 00		      lda	#$00
      2  0bdb		       48		      pha
      0  0bdc					      plw2var	_spos
      1  0bdc					      IF	!FPULL
      2  0bdc		       68		      pla
      3  0bdd		       8d c5 4a 	      sta	_spos+1
      4  0be0		       68		      pla
      5  0be1		       8d c4 4a 	      sta	_spos
      6  0be4				  -	      ELSE
      7  0be4				  -	      sta	_spos
      8  0be4				  -	      sty	_spos+1
      9  0be4					      ENDIF
   3486  0be4				   FPUSH      SET	1
      0  0be4					      pbyte	#0
      1  0be4		       a9 00		      lda	#0
      2  0be6				  -	      IF	!FPUSH
      3  0be6				  -	      pha
      4  0be6					      ENDIF
   3488  0be6				   FPULL      SET	1
   3489  0be6				   FPUSH      SET	0
      0  0be6					      plb2var	_ufo_on
      1  0be6				  -	      IF	!FPULL
      2  0be6				  -	      pla
      3  0be6					      ENDIF
      4  0be6		       8d c6 4a 	      sta	_ufo_on
   3491  0be6				   FPULL      SET	0
   3492  0be6				   FPUSH      SET	1
      0  0be9					      pword	#370
      1  0be9				  -	      IF	!FPUSH
      2  0be9				  -	      lda	#<#370
      3  0be9				  -	      pha
      4  0be9				  -	      lda	#>#370
      5  0be9				  -	      pha
      6  0be9					      ELSE
      7  0be9		       a9 72		      lda	#<#370
      8  0beb		       a0 01		      ldy	#>#370
      9  0bed					      ENDIF
   3494  0bed				   FPULL      SET	1
   3495  0bed				   FPUSH      SET	0
      0  0bed					      plw2var	_ufo_pos
      1  0bed				  -	      IF	!FPULL
      2  0bed				  -	      pla
      3  0bed				  -	      sta	_ufo_pos+1
      4  0bed				  -	      pla
      5  0bed				  -	      sta	_ufo_pos
      6  0bed					      ELSE
      7  0bed		       8d c7 4a 	      sta	_ufo_pos
      8  0bf0		       8c c8 4a 	      sty	_ufo_pos+1
      9  0bf3					      ENDIF
   3497  0bf3				   FPULL      SET	0
   3498  0bf3				   FPUSH      SET	1
      0  0bf3					      pbyte	#0
      1  0bf3		       a9 00		      lda	#0
      2  0bf5				  -	      IF	!FPUSH
      3  0bf5				  -	      pha
      4  0bf5					      ENDIF
   3500  0bf5				   FPULL      SET	1
   3501  0bf5				   FPUSH      SET	0
      0  0bf5					      plb2var	_ufo_hit
      1  0bf5				  -	      IF	!FPULL
      2  0bf5				  -	      pla
      3  0bf5					      ENDIF
      4  0bf5		       8d c9 4a 	      sta	_ufo_hit
   3503  0bf5				   FPULL      SET	0
      0  0bf8					      pbyte	#0
      1  0bf8		       a9 00		      lda	#0
      2  0bfa					      IF	!FPUSH
      3  0bfa		       48		      pha
      4  0bfb					      ENDIF
      0  0bfb					      btow
      1  0bfb		       a9 00		      lda	#$00
      2  0bfd		       48		      pha
      0  0bfe					      plw2var	_framecount_ufo
      1  0bfe					      IF	!FPULL
      2  0bfe		       68		      pla
      3  0bff		       8d cb 4a 	      sta	_framecount_ufo+1
      4  0c02		       68		      pla
      5  0c03		       8d ca 4a 	      sta	_framecount_ufo
      6  0c06				  -	      ELSE
      7  0c06				  -	      sta	_framecount_ufo
      8  0c06				  -	      sty	_framecount_ufo+1
      9  0c06					      ENDIF
   3507  0c06		       4c 69 40 	      jmp	_Lmain
   3508  0c09		       4c d3 0d 	      jmp	_Pcls_end
   3509  0c0c				   _Pcls
      0  0c0c					      pbyte	#32
      1  0c0c		       a9 20		      lda	#32
      2  0c0e					      IF	!FPUSH
      3  0c0e		       48		      pha
      4  0c0f					      ENDIF
      0  0c0f					      pword	#1000
      1  0c0f					      IF	!FPUSH
      2  0c0f		       a9 e8		      lda	#<#1000
      3  0c11		       48		      pha
      4  0c12		       a9 03		      lda	#>#1000
      5  0c14		       48		      pha
      6  0c15				  -	      ELSE
      7  0c15				  -	      lda	#<#1000
      8  0c15				  -	      ldy	#>#1000
      9  0c15					      ENDIF
      0  0c15					      pword	#1024
      1  0c15					      IF	!FPUSH
      2  0c15		       a9 00		      lda	#<#1024
      3  0c17		       48		      pha
      4  0c18		       a9 04		      lda	#>#1024
      5  0c1a		       48		      pha
      6  0c1b				  -	      ELSE
      7  0c1b				  -	      lda	#<#1024
      8  0c1b				  -	      ldy	#>#1024
      9  0c1b					      ENDIF
      0  0c1b					      memset
      1  0c1b					      IF	!FPULL
      2  0c1b		       68		      pla
      3  0c1c		       85 fc		      sta	R1
      4  0c1e		       68		      pla
      5  0c1f		       85 fb		      sta	R0
      6  0c21				  -	      ELSE
      7  0c21				  -	      sta	R0
      8  0c21				  -	      sty	R1
      9  0c21					      ENDIF
     10  0c21		       68		      pla
     11  0c22		       85 fe		      sta	R3
     12  0c24		       68		      pla
     13  0c25		       85 fd		      sta	R2
     14  0c27		       68		      pla
     15  0c28		       20 de 0a 	      jsr	mem_memset
      0  0c2b					      pbyte	#13
      1  0c2b		       a9 0d		      lda	#13
      2  0c2d					      IF	!FPUSH
      3  0c2d		       48		      pha
      4  0c2e					      ENDIF
      0  0c2e					      pbyte	#40
      1  0c2e		       a9 28		      lda	#40
      2  0c30					      IF	!FPUSH
      3  0c30		       48		      pha
      4  0c31					      ENDIF
      0  0c31					      btow
      1  0c31		       a9 00		      lda	#$00
      2  0c33		       48		      pha
      0  0c34					      pword	#55296
      1  0c34					      IF	!FPUSH
      2  0c34		       a9 00		      lda	#<#55296
      3  0c36		       48		      pha
      4  0c37		       a9 d8		      lda	#>#55296
      5  0c39		       48		      pha
      6  0c3a				  -	      ELSE
      7  0c3a				  -	      lda	#<#55296
      8  0c3a				  -	      ldy	#>#55296
      9  0c3a					      ENDIF
      0  0c3a					      memset
      1  0c3a					      IF	!FPULL
      2  0c3a		       68		      pla
      3  0c3b		       85 fc		      sta	R1
      4  0c3d		       68		      pla
      5  0c3e		       85 fb		      sta	R0
      6  0c40				  -	      ELSE
      7  0c40				  -	      sta	R0
      8  0c40				  -	      sty	R1
      9  0c40					      ENDIF
     10  0c40		       68		      pla
     11  0c41		       85 fe		      sta	R3
     12  0c43		       68		      pla
     13  0c44		       85 fd		      sta	R2
     14  0c46		       68		      pla
     15  0c47		       20 de 0a 	      jsr	mem_memset
      0  0c4a					      pbyte	#10
      1  0c4a		       a9 0a		      lda	#10
      2  0c4c					      IF	!FPUSH
      3  0c4c		       48		      pha
      4  0c4d					      ENDIF
      0  0c4d					      pbyte	#40
      1  0c4d		       a9 28		      lda	#40
      2  0c4f					      IF	!FPUSH
      3  0c4f		       48		      pha
      4  0c50					      ENDIF
      0  0c50					      btow
      1  0c50		       a9 00		      lda	#$00
      2  0c52		       48		      pha
      0  0c53					      pword	#55296
      1  0c53					      IF	!FPUSH
      2  0c53		       a9 00		      lda	#<#55296
      3  0c55		       48		      pha
      4  0c56		       a9 d8		      lda	#>#55296
      5  0c58		       48		      pha
      6  0c59				  -	      ELSE
      7  0c59				  -	      lda	#<#55296
      8  0c59				  -	      ldy	#>#55296
      9  0c59					      ENDIF
      0  0c59					      pbyte	#80
      1  0c59		       a9 50		      lda	#80
      2  0c5b					      IF	!FPUSH
      3  0c5b		       48		      pha
      4  0c5c					      ENDIF
      0  0c5c					      btow
      1  0c5c		       a9 00		      lda	#$00
      2  0c5e		       48		      pha
      0  0c5f					      addw
      1  0c5f		       ba		      tsx
      2  0c60		       bd 02 01 	      lda.wx	stack+2
      3  0c63		       18		      clc
      4  0c64		       7d 04 01 	      adc.wx	stack+4
      5  0c67		       9d 04 01 	      sta.wx	stack+4
      6  0c6a		       68		      pla
      7  0c6b		       7d 03 01 	      adc.wx	stack+3
      8  0c6e		       9d 03 01 	      sta.wx	stack+3
      9  0c71		       68		      pla
      0  0c72					      memset
      1  0c72					      IF	!FPULL
      2  0c72		       68		      pla
      3  0c73		       85 fc		      sta	R1
      4  0c75		       68		      pla
      5  0c76		       85 fb		      sta	R0
      6  0c78				  -	      ELSE
      7  0c78				  -	      sta	R0
      8  0c78				  -	      sty	R1
      9  0c78					      ENDIF
     10  0c78		       68		      pla
     11  0c79		       85 fe		      sta	R3
     12  0c7b		       68		      pla
     13  0c7c		       85 fd		      sta	R2
     14  0c7e		       68		      pla
     15  0c7f		       20 de 0a 	      jsr	mem_memset
      0  0c82					      pbyte	#7
      1  0c82		       a9 07		      lda	#7
      2  0c84					      IF	!FPUSH
      3  0c84		       48		      pha
      4  0c85					      ENDIF
      0  0c85					      pbyte	#80
      1  0c85		       a9 50		      lda	#80
      2  0c87					      IF	!FPUSH
      3  0c87		       48		      pha
      4  0c88					      ENDIF
      0  0c88					      btow
      1  0c88		       a9 00		      lda	#$00
      2  0c8a		       48		      pha
      0  0c8b					      pword	#55296
      1  0c8b					      IF	!FPUSH
      2  0c8b		       a9 00		      lda	#<#55296
      3  0c8d		       48		      pha
      4  0c8e		       a9 d8		      lda	#>#55296
      5  0c90		       48		      pha
      6  0c91				  -	      ELSE
      7  0c91				  -	      lda	#<#55296
      8  0c91				  -	      ldy	#>#55296
      9  0c91					      ENDIF
      0  0c91					      pbyte	#200
      1  0c91		       a9 c8		      lda	#200
      2  0c93					      IF	!FPUSH
      3  0c93		       48		      pha
      4  0c94					      ENDIF
      0  0c94					      btow
      1  0c94		       a9 00		      lda	#$00
      2  0c96		       48		      pha
      0  0c97					      addw
      1  0c97		       ba		      tsx
      2  0c98		       bd 02 01 	      lda.wx	stack+2
      3  0c9b		       18		      clc
      4  0c9c		       7d 04 01 	      adc.wx	stack+4
      5  0c9f		       9d 04 01 	      sta.wx	stack+4
      6  0ca2		       68		      pla
      7  0ca3		       7d 03 01 	      adc.wx	stack+3
      8  0ca6		       9d 03 01 	      sta.wx	stack+3
      9  0ca9		       68		      pla
      0  0caa					      memset
      1  0caa					      IF	!FPULL
      2  0caa		       68		      pla
      3  0cab		       85 fc		      sta	R1
      4  0cad		       68		      pla
      5  0cae		       85 fb		      sta	R0
      6  0cb0				  -	      ELSE
      7  0cb0				  -	      sta	R0
      8  0cb0				  -	      sty	R1
      9  0cb0					      ENDIF
     10  0cb0		       68		      pla
     11  0cb1		       85 fe		      sta	R3
     12  0cb3		       68		      pla
     13  0cb4		       85 fd		      sta	R2
     14  0cb6		       68		      pla
     15  0cb7		       20 de 0a 	      jsr	mem_memset
      0  0cba					      pbyte	#8
      1  0cba		       a9 08		      lda	#8
      2  0cbc					      IF	!FPUSH
      3  0cbc		       48		      pha
      4  0cbd					      ENDIF
      0  0cbd					      pbyte	#80
      1  0cbd		       a9 50		      lda	#80
      2  0cbf					      IF	!FPUSH
      3  0cbf		       48		      pha
      4  0cc0					      ENDIF
      0  0cc0					      btow
      1  0cc0		       a9 00		      lda	#$00
      2  0cc2		       48		      pha
      0  0cc3					      pword	#55296
      1  0cc3					      IF	!FPUSH
      2  0cc3		       a9 00		      lda	#<#55296
      3  0cc5		       48		      pha
      4  0cc6		       a9 d8		      lda	#>#55296
      5  0cc8		       48		      pha
      6  0cc9				  -	      ELSE
      7  0cc9				  -	      lda	#<#55296
      8  0cc9				  -	      ldy	#>#55296
      9  0cc9					      ENDIF
      0  0cc9					      pword	#280
      1  0cc9					      IF	!FPUSH
      2  0cc9		       a9 18		      lda	#<#280
      3  0ccb		       48		      pha
      4  0ccc		       a9 01		      lda	#>#280
      5  0cce		       48		      pha
      6  0ccf				  -	      ELSE
      7  0ccf				  -	      lda	#<#280
      8  0ccf				  -	      ldy	#>#280
      9  0ccf					      ENDIF
      0  0ccf					      addw
      1  0ccf		       ba		      tsx
      2  0cd0		       bd 02 01 	      lda.wx	stack+2
      3  0cd3		       18		      clc
      4  0cd4		       7d 04 01 	      adc.wx	stack+4
      5  0cd7		       9d 04 01 	      sta.wx	stack+4
      6  0cda		       68		      pla
      7  0cdb		       7d 03 01 	      adc.wx	stack+3
      8  0cde		       9d 03 01 	      sta.wx	stack+3
      9  0ce1		       68		      pla
      0  0ce2					      memset
      1  0ce2					      IF	!FPULL
      2  0ce2		       68		      pla
      3  0ce3		       85 fc		      sta	R1
      4  0ce5		       68		      pla
      5  0ce6		       85 fb		      sta	R0
      6  0ce8				  -	      ELSE
      7  0ce8				  -	      sta	R0
      8  0ce8				  -	      sty	R1
      9  0ce8					      ENDIF
     10  0ce8		       68		      pla
     11  0ce9		       85 fe		      sta	R3
     12  0ceb		       68		      pla
     13  0cec		       85 fd		      sta	R2
     14  0cee		       68		      pla
     15  0cef		       20 de 0a 	      jsr	mem_memset
      0  0cf2					      pbyte	#10
      1  0cf2		       a9 0a		      lda	#10
      2  0cf4					      IF	!FPUSH
      3  0cf4		       48		      pha
      4  0cf5					      ENDIF
      0  0cf5					      pbyte	#80
      1  0cf5		       a9 50		      lda	#80
      2  0cf7					      IF	!FPUSH
      3  0cf7		       48		      pha
      4  0cf8					      ENDIF
      0  0cf8					      btow
      1  0cf8		       a9 00		      lda	#$00
      2  0cfa		       48		      pha
      0  0cfb					      pword	#55296
      1  0cfb					      IF	!FPUSH
      2  0cfb		       a9 00		      lda	#<#55296
      3  0cfd		       48		      pha
      4  0cfe		       a9 d8		      lda	#>#55296
      5  0d00		       48		      pha
      6  0d01				  -	      ELSE
      7  0d01				  -	      lda	#<#55296
      8  0d01				  -	      ldy	#>#55296
      9  0d01					      ENDIF
      0  0d01					      pword	#360
      1  0d01					      IF	!FPUSH
      2  0d01		       a9 68		      lda	#<#360
      3  0d03		       48		      pha
      4  0d04		       a9 01		      lda	#>#360
      5  0d06		       48		      pha
      6  0d07				  -	      ELSE
      7  0d07				  -	      lda	#<#360
      8  0d07				  -	      ldy	#>#360
      9  0d07					      ENDIF
      0  0d07					      addw
      1  0d07		       ba		      tsx
      2  0d08		       bd 02 01 	      lda.wx	stack+2
      3  0d0b		       18		      clc
      4  0d0c		       7d 04 01 	      adc.wx	stack+4
      5  0d0f		       9d 04 01 	      sta.wx	stack+4
      6  0d12		       68		      pla
      7  0d13		       7d 03 01 	      adc.wx	stack+3
      8  0d16		       9d 03 01 	      sta.wx	stack+3
      9  0d19		       68		      pla
      0  0d1a					      memset
      1  0d1a					      IF	!FPULL
      2  0d1a		       68		      pla
      3  0d1b		       85 fc		      sta	R1
      4  0d1d		       68		      pla
      5  0d1e		       85 fb		      sta	R0
      6  0d20				  -	      ELSE
      7  0d20				  -	      sta	R0
      8  0d20				  -	      sty	R1
      9  0d20					      ENDIF
     10  0d20		       68		      pla
     11  0d21		       85 fe		      sta	R3
     12  0d23		       68		      pla
     13  0d24		       85 fd		      sta	R2
     14  0d26		       68		      pla
     15  0d27		       20 de 0a 	      jsr	mem_memset
      0  0d2a					      pbyte	#13
      1  0d2a		       a9 0d		      lda	#13
      2  0d2c					      IF	!FPUSH
      3  0d2c		       48		      pha
      4  0d2d					      ENDIF
      0  0d2d					      pbyte	#80
      1  0d2d		       a9 50		      lda	#80
      2  0d2f					      IF	!FPUSH
      3  0d2f		       48		      pha
      4  0d30					      ENDIF
      0  0d30					      btow
      1  0d30		       a9 00		      lda	#$00
      2  0d32		       48		      pha
      0  0d33					      pword	#55296
      1  0d33					      IF	!FPUSH
      2  0d33		       a9 00		      lda	#<#55296
      3  0d35		       48		      pha
      4  0d36		       a9 d8		      lda	#>#55296
      5  0d38		       48		      pha
      6  0d39				  -	      ELSE
      7  0d39				  -	      lda	#<#55296
      8  0d39				  -	      ldy	#>#55296
      9  0d39					      ENDIF
      0  0d39					      pword	#440
      1  0d39					      IF	!FPUSH
      2  0d39		       a9 b8		      lda	#<#440
      3  0d3b		       48		      pha
      4  0d3c		       a9 01		      lda	#>#440
      5  0d3e		       48		      pha
      6  0d3f				  -	      ELSE
      7  0d3f				  -	      lda	#<#440
      8  0d3f				  -	      ldy	#>#440
      9  0d3f					      ENDIF
      0  0d3f					      addw
      1  0d3f		       ba		      tsx
      2  0d40		       bd 02 01 	      lda.wx	stack+2
      3  0d43		       18		      clc
      4  0d44		       7d 04 01 	      adc.wx	stack+4
      5  0d47		       9d 04 01 	      sta.wx	stack+4
      6  0d4a		       68		      pla
      7  0d4b		       7d 03 01 	      adc.wx	stack+3
      8  0d4e		       9d 03 01 	      sta.wx	stack+3
      9  0d51		       68		      pla
      0  0d52					      memset
      1  0d52					      IF	!FPULL
      2  0d52		       68		      pla
      3  0d53		       85 fc		      sta	R1
      4  0d55		       68		      pla
      5  0d56		       85 fb		      sta	R0
      6  0d58				  -	      ELSE
      7  0d58				  -	      sta	R0
      8  0d58				  -	      sty	R1
      9  0d58					      ENDIF
     10  0d58		       68		      pla
     11  0d59		       85 fe		      sta	R3
     12  0d5b		       68		      pla
     13  0d5c		       85 fd		      sta	R2
     14  0d5e		       68		      pla
     15  0d5f		       20 de 0a 	      jsr	mem_memset
      0  0d62					      pbyte	#14
      1  0d62		       a9 0e		      lda	#14
      2  0d64					      IF	!FPUSH
      3  0d64		       48		      pha
      4  0d65					      ENDIF
      0  0d65					      pbyte	#80
      1  0d65		       a9 50		      lda	#80
      2  0d67					      IF	!FPUSH
      3  0d67		       48		      pha
      4  0d68					      ENDIF
      0  0d68					      btow
      1  0d68		       a9 00		      lda	#$00
      2  0d6a		       48		      pha
      0  0d6b					      pword	#55296
      1  0d6b					      IF	!FPUSH
      2  0d6b		       a9 00		      lda	#<#55296
      3  0d6d		       48		      pha
      4  0d6e		       a9 d8		      lda	#>#55296
      5  0d70		       48		      pha
      6  0d71				  -	      ELSE
      7  0d71				  -	      lda	#<#55296
      8  0d71				  -	      ldy	#>#55296
      9  0d71					      ENDIF
      0  0d71					      pword	#520
      1  0d71					      IF	!FPUSH
      2  0d71		       a9 08		      lda	#<#520
      3  0d73		       48		      pha
      4  0d74		       a9 02		      lda	#>#520
      5  0d76		       48		      pha
      6  0d77				  -	      ELSE
      7  0d77				  -	      lda	#<#520
      8  0d77				  -	      ldy	#>#520
      9  0d77					      ENDIF
      0  0d77					      addw
      1  0d77		       ba		      tsx
      2  0d78		       bd 02 01 	      lda.wx	stack+2
      3  0d7b		       18		      clc
      4  0d7c		       7d 04 01 	      adc.wx	stack+4
      5  0d7f		       9d 04 01 	      sta.wx	stack+4
      6  0d82		       68		      pla
      7  0d83		       7d 03 01 	      adc.wx	stack+3
      8  0d86		       9d 03 01 	      sta.wx	stack+3
      9  0d89		       68		      pla
      0  0d8a					      memset
      1  0d8a					      IF	!FPULL
      2  0d8a		       68		      pla
      3  0d8b		       85 fc		      sta	R1
      4  0d8d		       68		      pla
      5  0d8e		       85 fb		      sta	R0
      6  0d90				  -	      ELSE
      7  0d90				  -	      sta	R0
      8  0d90				  -	      sty	R1
      9  0d90					      ENDIF
     10  0d90		       68		      pla
     11  0d91		       85 fe		      sta	R3
     12  0d93		       68		      pla
     13  0d94		       85 fd		      sta	R2
     14  0d96		       68		      pla
     15  0d97		       20 de 0a 	      jsr	mem_memset
      0  0d9a					      pbyte	#6
      1  0d9a		       a9 06		      lda	#6
      2  0d9c					      IF	!FPUSH
      3  0d9c		       48		      pha
      4  0d9d					      ENDIF
      0  0d9d					      pword	#400
      1  0d9d					      IF	!FPUSH
      2  0d9d		       a9 90		      lda	#<#400
      3  0d9f		       48		      pha
      4  0da0		       a9 01		      lda	#>#400
      5  0da2		       48		      pha
      6  0da3				  -	      ELSE
      7  0da3				  -	      lda	#<#400
      8  0da3				  -	      ldy	#>#400
      9  0da3					      ENDIF
      0  0da3					      pword	#55296
      1  0da3					      IF	!FPUSH
      2  0da3		       a9 00		      lda	#<#55296
      3  0da5		       48		      pha
      4  0da6		       a9 d8		      lda	#>#55296
      5  0da8		       48		      pha
      6  0da9				  -	      ELSE
      7  0da9				  -	      lda	#<#55296
      8  0da9				  -	      ldy	#>#55296
      9  0da9					      ENDIF
      0  0da9					      pword	#600
      1  0da9					      IF	!FPUSH
      2  0da9		       a9 58		      lda	#<#600
      3  0dab		       48		      pha
      4  0dac		       a9 02		      lda	#>#600
      5  0dae		       48		      pha
      6  0daf				  -	      ELSE
      7  0daf				  -	      lda	#<#600
      8  0daf				  -	      ldy	#>#600
      9  0daf					      ENDIF
      0  0daf					      addw
      1  0daf		       ba		      tsx
      2  0db0		       bd 02 01 	      lda.wx	stack+2
      3  0db3		       18		      clc
      4  0db4		       7d 04 01 	      adc.wx	stack+4
      5  0db7		       9d 04 01 	      sta.wx	stack+4
      6  0dba		       68		      pla
      7  0dbb		       7d 03 01 	      adc.wx	stack+3
      8  0dbe		       9d 03 01 	      sta.wx	stack+3
      9  0dc1		       68		      pla
      0  0dc2					      memset
      1  0dc2					      IF	!FPULL
      2  0dc2		       68		      pla
      3  0dc3		       85 fc		      sta	R1
      4  0dc5		       68		      pla
      5  0dc6		       85 fb		      sta	R0
      6  0dc8				  -	      ELSE
      7  0dc8				  -	      sta	R0
      8  0dc8				  -	      sty	R1
      9  0dc8					      ENDIF
     10  0dc8		       68		      pla
     11  0dc9		       85 fe		      sta	R3
     12  0dcb		       68		      pla
     13  0dcc		       85 fd		      sta	R2
     14  0dce		       68		      pla
     15  0dcf		       20 de 0a 	      jsr	mem_memset
   3569  0dd2		       60		      rts
   3570  0dd3				   _Pcls_end
   3571  0dd3		       4c dd 0e 	      jmp	_Pload_level_end
   3572  0dd6
   3573  0dd6
   3574  0dd6
   3575  0dd6
   3576  0dd6
   3577  0dd6
   3578  0dd6
   3579  0dd6				   _Pload_level
   3580  0dd6				   FPUSH      SET	1
      0  0dd6					      pbyte	#0
      1  0dd6		       a9 00		      lda	#0
      2  0dd8				  -	      IF	!FPUSH
      3  0dd8				  -	      pha
      4  0dd8					      ENDIF
   3582  0dd8				   FPULL      SET	1
   3583  0dd8				   FPUSH      SET	0
      0  0dd8					      plb2var	_load_level.i
      1  0dd8				  -	      IF	!FPULL
      2  0dd8				  -	      pla
      3  0dd8					      ENDIF
      4  0dd8		       8d cc 4a 	      sta	_load_level.i
   3585  0dd8				   FPULL      SET	0
      0  0ddb					      pbyte	#4
      1  0ddb		       a9 04		      lda	#4
      2  0ddd					      IF	!FPUSH
      3  0ddd		       48		      pha
      4  0dde					      ENDIF
      0  0dde					      for
      1  0dde
      2  0dde
      3  0dde				   .addr
      4  0dde		       a9 de		      lda	#<.addr
      5  0de0		       48		      pha
      6  0de1		       a9 0d		      lda	#>.addr
      7  0de3		       48		      pha
   3588  0de3				   FPUSH      SET	1
      0  0de4					      pbyte	#0
      1  0de4		       a9 00		      lda	#0
      2  0de6				  -	      IF	!FPUSH
      3  0de6				  -	      pha
      4  0de6					      ENDIF
   3590  0de6				   FPULL      SET	1
   3591  0de6				   FPUSH      SET	0
      0  0de6					      plb2var	_load_level.j
      1  0de6				  -	      IF	!FPULL
      2  0de6				  -	      pla
      3  0de6					      ENDIF
      4  0de6		       8d cd 4a 	      sta	_load_level.j
   3593  0de6				   FPULL      SET	0
      0  0de9					      pbyte	#11
      1  0de9		       a9 0b		      lda	#11
      2  0deb					      IF	!FPUSH
      3  0deb		       48		      pha
      4  0dec					      ENDIF
      0  0dec					      for
      1  0dec
      2  0dec
      3  0dec				   .addr
      4  0dec		       a9 ec		      lda	#<.addr
      5  0dee		       48		      pha
      6  0def		       a9 0d		      lda	#>.addr
      7  0df1		       48		      pha
      0  0df2					      opt_pbyte_pbarray_fast	_load_level.i, _map1
      1  0df2
      2  0df2
      3  0df2
      4  0df2		       ae cc 4a 	      ldx	_load_level.i
      5  0df5		       bd 71 47 	      lda	_map1,x
      6  0df8					      IF	!FPUSH
      7  0df8		       48		      pha
      8  0df9					      ENDIF
      0  0df9					      pbvar	_load_level.i
      0  0df9					      pbyte	_load_level.i
      1  0df9		       ad cc 4a 	      lda	_load_level.i
      2  0dfc					      IF	!FPUSH
      3  0dfc		       48		      pha
      4  0dfd					      ENDIF
   3598  0dfd				   FPUSH      SET	1
      0  0dfd					      pbyte	#12
      1  0dfd		       a9 0c		      lda	#12
      2  0dff				  -	      IF	!FPUSH
      3  0dff				  -	      pha
      4  0dff					      ENDIF
   3600  0dff				   FPULL      SET	1
   3601  0dff				   FPUSH      SET	0
      0  0dff					      mulb
      1  0dff				  -	      IF	!FPULL
      2  0dff				  -	      pla
      3  0dff					      ENDIF
      4  0dff		       85 fc		      sta	R1
      5  0e01		       68		      pla
      6  0e02		       85 fd		      sta	R2
      7  0e04		       a9 00		      lda	#$00
      8  0e06		       f0 05		      beq	.enterLoop
      9  0e08				   .doAdd
     10  0e08		       18		      clc
     11  0e09		       65 fc		      adc	R1
     12  0e0b				   .loop
     13  0e0b		       06 fc		      asl	R1
     14  0e0d				   .enterLoop
     15  0e0d		       46 fd		      lsr	R2
     16  0e0f		       b0 f7		      bcs	.doAdd
     17  0e11		       d0 f8		      bne	.loop
     18  0e13				   .end
     19  0e13					      IF	!FPUSH
     20  0e13		       48		      pha
     21  0e14					      ENDIF
   3603  0e14				   FPULL      SET	0
   3604  0e14				   FPUSH      SET	1
      0  0e14					      pbvar	_load_level.j
      0  0e14					      pbyte	_load_level.j
      1  0e14		       ad cd 4a 	      lda	_load_level.j
      2  0e17				  -	      IF	!FPUSH
      3  0e17				  -	      pha
      4  0e17					      ENDIF
   3606  0e17				   FPULL      SET	1
      0  0e17					      addb
      1  0e17				  -	      IF	!FPULL
      2  0e17				  -	      pla
      3  0e17					      ENDIF
      4  0e17		       85 fb		      sta	R0
      5  0e19		       68		      pla
      6  0e1a		       18		      clc
      7  0e1b		       65 fb		      adc	R0
      8  0e1d				  -	      IF	!FPUSH
      9  0e1d				  -	      pha
     10  0e1d					      ENDIF
   3608  0e1d				   FPUSH      SET	0
      0  0e1d					      plbarray_fast	_enemy_map
      1  0e1d				  -	      IF	!FPULL
      2  0e1d				  -	      pla
      3  0e1d					      ENDIF
      4  0e1d		       aa		      tax
      5  0e1e		       68		      pla
      6  0e1f		       9d 66 4a 	      sta	_enemy_map,x
      0  0e22					      nextb	_load_level.j
      1  0e22
      2  0e22		       ee cd 4a 	      inc	_load_level.j
      3  0e25
      4  0e25		       f0 15		      beq	.end
      5  0e27				   .skip
      6  0e27
      7  0e27		       68		      pla
      8  0e28		       8d 3b 0e 	      sta	.selfmod_code+2
      9  0e2b		       68		      pla
     10  0e2c		       8d 3a 0e 	      sta	.selfmod_code+1
     11  0e2f
     12  0e2f		       68		      pla
     13  0e30		       cd cd 4a 	      cmp	_load_level.j
     14  0e33		       b0 03		      bcs	.jump_back
     15  0e35		       4c 3c 0e 	      jmp	.end
     16  0e38				   .jump_back
     17  0e38
     18  0e38		       48		      pha
     19  0e39				   .selfmod_code
     20  0e39		       4c 00 00 	      jmp	$0000
     21  0e3c				   .end
      0  0e3c					      nextb	_load_level.i
      1  0e3c
      2  0e3c		       ee cc 4a 	      inc	_load_level.i
      3  0e3f
      4  0e3f		       f0 15		      beq	.end
      5  0e41				   .skip
      6  0e41
      7  0e41		       68		      pla
      8  0e42		       8d 55 0e 	      sta	.selfmod_code+2
      9  0e45		       68		      pla
     10  0e46		       8d 54 0e 	      sta	.selfmod_code+1
     11  0e49
     12  0e49		       68		      pla
     13  0e4a		       cd cc 4a 	      cmp	_load_level.i
     14  0e4d		       b0 03		      bcs	.jump_back
     15  0e4f		       4c 56 0e 	      jmp	.end
     16  0e52				   .jump_back
     17  0e52
     18  0e52		       48		      pha
     19  0e53				   .selfmod_code
     20  0e53		       4c 00 00 	      jmp	$0000
     21  0e56				   .end
      0  0e56					      opt_pbyte_pbyte_plbarray_fast	#0, #0, _enemy_bullet_on
      1  0e56
      2  0e56
      3  0e56
      4  0e56		       a9 00		      lda	#0
      5  0e58		       a2 00		      ldx	#0
      6  0e5a		       9d a2 4a 	      sta	_enemy_bullet_on,x
      0  0e5d					      opt_pbyte_pbyte_plbarray_fast	#0, #1, _enemy_bullet_on
      1  0e5d
      2  0e5d
      3  0e5d
      4  0e5d		       a9 00		      lda	#0
      5  0e5f		       a2 01		      ldx	#1
      6  0e61		       9d a2 4a 	      sta	_enemy_bullet_on,x
      0  0e64					      opt_pbyte_pbyte_plbarray_fast	#0, #2, _enemy_bullet_on
      1  0e64
      2  0e64
      3  0e64
      4  0e64		       a9 00		      lda	#0
      5  0e66		       a2 02		      ldx	#2
      6  0e68		       9d a2 4a 	      sta	_enemy_bullet_on,x
   3615  0e68				   FPULL      SET	0
   3616  0e68				   FPUSH      SET	1
      0  0e6b					      pbyte	#13
      1  0e6b		       a9 0d		      lda	#13
      2  0e6d				  -	      IF	!FPUSH
      3  0e6d				  -	      pha
      4  0e6d					      ENDIF
   3618  0e6d				   FPULL      SET	1
   3619  0e6d				   FPUSH      SET	0
      0  0e6d					      plb2var	_bottom_row
      1  0e6d				  -	      IF	!FPULL
      2  0e6d				  -	      pla
      3  0e6d					      ENDIF
      4  0e6d		       8d b1 4a 	      sta	_bottom_row
   3621  0e6d				   FPULL      SET	0
   3622  0e6d				   FPUSH      SET	1
      0  0e70					      pbyte	#210
      1  0e70		       a9 d2		      lda	#210
      2  0e72				  -	      IF	!FPUSH
      3  0e72				  -	      pha
      4  0e72					      ENDIF
   3624  0e72				   FPULL      SET	1
   3625  0e72				   FPUSH      SET	0
      0  0e72					      plb2var	_scroll_bottom_limit
      1  0e72				  -	      IF	!FPULL
      2  0e72				  -	      pla
      3  0e72					      ENDIF
      4  0e72		       8d c1 4a 	      sta	_scroll_bottom_limit
   3627  0e72				   FPULL      SET	0
   3628  0e72				   FPUSH      SET	1
      0  0e75					      pbyte	#8
      1  0e75		       a9 08		      lda	#8
      2  0e77				  -	      IF	!FPUSH
      3  0e77				  -	      pha
      4  0e77					      ENDIF
   3630  0e77				   FPULL      SET	1
   3631  0e77				   FPUSH      SET	0
      0  0e77					      plb2var	_enemy_posx
      1  0e77				  -	      IF	!FPULL
      2  0e77				  -	      pla
      3  0e77					      ENDIF
      4  0e77		       8d af 4a 	      sta	_enemy_posx
   3633  0e77				   FPULL      SET	0
   3634  0e77				   FPUSH      SET	1
      0  0e7a					      pbyte	#0
      1  0e7a		       a9 00		      lda	#0
      2  0e7c				  -	      IF	!FPUSH
      3  0e7c				  -	      pha
      4  0e7c					      ENDIF
   3636  0e7c				   FPULL      SET	1
   3637  0e7c				   FPUSH      SET	0
      0  0e7c					      plb2var	_enemy_posy
      1  0e7c				  -	      IF	!FPULL
      2  0e7c				  -	      pla
      3  0e7c					      ENDIF
      4  0e7c		       8d b0 4a 	      sta	_enemy_posy
   3639  0e7c				   FPULL      SET	0
      0  0e7f					      pword	#1224
      1  0e7f					      IF	!FPUSH
      2  0e7f		       a9 c8		      lda	#<#1224
      3  0e81		       48		      pha
      4  0e82		       a9 04		      lda	#>#1224
      5  0e84		       48		      pha
      6  0e85				  -	      ELSE
      7  0e85				  -	      lda	#<#1224
      8  0e85				  -	      ldy	#>#1224
      9  0e85					      ENDIF
      0  0e85					      pbvar	_enemy_posy
      0  0e85					      pbyte	_enemy_posy
      1  0e85		       ad b0 4a 	      lda	_enemy_posy
      2  0e88					      IF	!FPUSH
      3  0e88		       48		      pha
      4  0e89					      ENDIF
      0  0e89					      btow
      1  0e89		       a9 00		      lda	#$00
      2  0e8b		       48		      pha
      0  0e8c					      pbyte	#40
      1  0e8c		       a9 28		      lda	#40
      2  0e8e					      IF	!FPUSH
      3  0e8e		       48		      pha
      4  0e8f					      ENDIF
      0  0e8f					      btow
      1  0e8f		       a9 00		      lda	#$00
      2  0e91		       48		      pha
      0  0e92					      mulw
      1  0e92					      IF	!FPULL
      2  0e92		       68		      pla
      3  0e93		       85 fc		      sta	R1
      4  0e95		       68		      pla
      5  0e96		       85 fb		      sta	R0
      6  0e98				  -	      ELSE
      7  0e98				  -	      sta	R0
      8  0e98				  -	      sty	R1
      9  0e98					      ENDIF
     10  0e98		       68		      pla
     11  0e99		       85 fe		      sta	R3
     12  0e9b		       68		      pla
     13  0e9c		       85 fd		      sta	R2
     14  0e9e		       20 0d 08 	      jsr	NUCL_SMUL16
     15  0ea1					      IF	!FPUSH
     16  0ea1		       a5 fb		      lda	R0
     17  0ea3		       48		      pha
     18  0ea4		       a5 fc		      lda	R1
     19  0ea6		       48		      pha
     20  0ea7				  -	      ELSE
     21  0ea7				  -	      lda	R0
     22  0ea7				  -	      ldy	R1
     23  0ea7					      ENDIF
      0  0ea7					      addw
      1  0ea7		       ba		      tsx
      2  0ea8		       bd 02 01 	      lda.wx	stack+2
      3  0eab		       18		      clc
      4  0eac		       7d 04 01 	      adc.wx	stack+4
      5  0eaf		       9d 04 01 	      sta.wx	stack+4
      6  0eb2		       68		      pla
      7  0eb3		       7d 03 01 	      adc.wx	stack+3
      8  0eb6		       9d 03 01 	      sta.wx	stack+3
      9  0eb9		       68		      pla
      0  0eba					      pbvar	_enemy_posx
      0  0eba					      pbyte	_enemy_posx
      1  0eba		       ad af 4a 	      lda	_enemy_posx
      2  0ebd					      IF	!FPUSH
      3  0ebd		       48		      pha
      4  0ebe					      ENDIF
      0  0ebe					      btow
      1  0ebe		       a9 00		      lda	#$00
      2  0ec0		       48		      pha
      0  0ec1					      addw
      1  0ec1		       ba		      tsx
      2  0ec2		       bd 02 01 	      lda.wx	stack+2
      3  0ec5		       18		      clc
      4  0ec6		       7d 04 01 	      adc.wx	stack+4
      5  0ec9		       9d 04 01 	      sta.wx	stack+4
      6  0ecc		       68		      pla
      7  0ecd		       7d 03 01 	      adc.wx	stack+3
      8  0ed0		       9d 03 01 	      sta.wx	stack+3
      9  0ed3		       68		      pla
      0  0ed4					      plw2var	_spos
      1  0ed4					      IF	!FPULL
      2  0ed4		       68		      pla
      3  0ed5		       8d c5 4a 	      sta	_spos+1
      4  0ed8		       68		      pla
      5  0ed9		       8d c4 4a 	      sta	_spos
      6  0edc				  -	      ELSE
      7  0edc				  -	      sta	_spos
      8  0edc				  -	      sty	_spos+1
      9  0edc					      ENDIF
   3651  0edc		       60		      rts
   3652  0edd				   _Pload_level_end
   3653  0edd		       4c 24 10 	      jmp	_Pdraw_enemies_end
   3654  0ee0
   3655  0ee0
   3656  0ee0
   3657  0ee0
   3658  0ee0
   3659  0ee0
   3660  0ee0
   3661  0ee0				   _Pdraw_enemies
      0  0ee0					      pword	#1224
      1  0ee0					      IF	!FPUSH
      2  0ee0		       a9 c8		      lda	#<#1224
      3  0ee2		       48		      pha
      4  0ee3		       a9 04		      lda	#>#1224
      5  0ee5		       48		      pha
      6  0ee6				  -	      ELSE
      7  0ee6				  -	      lda	#<#1224
      8  0ee6				  -	      ldy	#>#1224
      9  0ee6					      ENDIF
      0  0ee6					      pbvar	_draw_enemies.line_no
      0  0ee6					      pbyte	_draw_enemies.line_no
      1  0ee6		       ad ce 4a 	      lda	_draw_enemies.line_no
      2  0ee9					      IF	!FPUSH
      3  0ee9		       48		      pha
      4  0eea					      ENDIF
      0  0eea					      btow
      1  0eea		       a9 00		      lda	#$00
      2  0eec		       48		      pha
      0  0eed					      pbyte	#40
      1  0eed		       a9 28		      lda	#40
      2  0eef					      IF	!FPUSH
      3  0eef		       48		      pha
      4  0ef0					      ENDIF
      0  0ef0					      btow
      1  0ef0		       a9 00		      lda	#$00
      2  0ef2		       48		      pha
      0  0ef3					      mulw
      1  0ef3					      IF	!FPULL
      2  0ef3		       68		      pla
      3  0ef4		       85 fc		      sta	R1
      4  0ef6		       68		      pla
      5  0ef7		       85 fb		      sta	R0
      6  0ef9				  -	      ELSE
      7  0ef9				  -	      sta	R0
      8  0ef9				  -	      sty	R1
      9  0ef9					      ENDIF
     10  0ef9		       68		      pla
     11  0efa		       85 fe		      sta	R3
     12  0efc		       68		      pla
     13  0efd		       85 fd		      sta	R2
     14  0eff		       20 0d 08 	      jsr	NUCL_SMUL16
     15  0f02					      IF	!FPUSH
     16  0f02		       a5 fb		      lda	R0
     17  0f04		       48		      pha
     18  0f05		       a5 fc		      lda	R1
     19  0f07		       48		      pha
     20  0f08				  -	      ELSE
     21  0f08				  -	      lda	R0
     22  0f08				  -	      ldy	R1
     23  0f08					      ENDIF
      0  0f08					      addw
      1  0f08		       ba		      tsx
      2  0f09		       bd 02 01 	      lda.wx	stack+2
      3  0f0c		       18		      clc
      4  0f0d		       7d 04 01 	      adc.wx	stack+4
      5  0f10		       9d 04 01 	      sta.wx	stack+4
      6  0f13		       68		      pla
      7  0f14		       7d 03 01 	      adc.wx	stack+3
      8  0f17		       9d 03 01 	      sta.wx	stack+3
      9  0f1a		       68		      pla
      0  0f1b					      pbvar	_draw_enemies.offset
      0  0f1b					      pbyte	_draw_enemies.offset
      1  0f1b		       ad cf 4a 	      lda	_draw_enemies.offset
      2  0f1e					      IF	!FPUSH
      3  0f1e		       48		      pha
      4  0f1f					      ENDIF
      0  0f1f					      btow
      1  0f1f		       a9 00		      lda	#$00
      2  0f21		       48		      pha
      0  0f22					      addw
      1  0f22		       ba		      tsx
      2  0f23		       bd 02 01 	      lda.wx	stack+2
      3  0f26		       18		      clc
      4  0f27		       7d 04 01 	      adc.wx	stack+4
      5  0f2a		       9d 04 01 	      sta.wx	stack+4
      6  0f2d		       68		      pla
      7  0f2e		       7d 03 01 	      adc.wx	stack+3
      8  0f31		       9d 03 01 	      sta.wx	stack+3
      9  0f34		       68		      pla
      0  0f35					      plw2var	_draw_enemies.pos
      1  0f35					      IF	!FPULL
      2  0f35		       68		      pla
      3  0f36		       8d d1 4a 	      sta	_draw_enemies.pos+1
      4  0f39		       68		      pla
      5  0f3a		       8d d0 4a 	      sta	_draw_enemies.pos
      6  0f3d				  -	      ELSE
      7  0f3d				  -	      sta	_draw_enemies.pos
      8  0f3d				  -	      sty	_draw_enemies.pos+1
      9  0f3d					      ENDIF
   3673  0f3d				   FPUSH      SET	1
      0  0f3d					      pbyte	#0
      1  0f3d		       a9 00		      lda	#0
      2  0f3f				  -	      IF	!FPUSH
      3  0f3f				  -	      pha
      4  0f3f					      ENDIF
   3675  0f3f				   FPULL      SET	1
   3676  0f3f				   FPUSH      SET	0
      0  0f3f					      plb2var	_draw_enemies.map_offset
      1  0f3f				  -	      IF	!FPULL
      2  0f3f				  -	      pla
      3  0f3f					      ENDIF
      4  0f3f		       8d d2 4a 	      sta	_draw_enemies.map_offset
   3678  0f3f				   FPULL      SET	0
   3679  0f3f				   FPUSH      SET	1
      0  0f42					      pbyte	#0
      1  0f42		       a9 00		      lda	#0
      2  0f44				  -	      IF	!FPUSH
      3  0f44				  -	      pha
      4  0f44					      ENDIF
   3681  0f44				   FPULL      SET	1
   3682  0f44				   FPUSH      SET	0
      0  0f44					      plb2var	_draw_enemies.y
      1  0f44				  -	      IF	!FPULL
      2  0f44				  -	      pla
      3  0f44					      ENDIF
      4  0f44		       8d d3 4a 	      sta	_draw_enemies.y
   3684  0f44				   FPULL      SET	0
      0  0f47					      pbyte	#4
      1  0f47		       a9 04		      lda	#4
      2  0f49					      IF	!FPUSH
      3  0f49		       48		      pha
      4  0f4a					      ENDIF
      0  0f4a					      for
      1  0f4a
      2  0f4a
      3  0f4a				   .addr
      4  0f4a		       a9 4a		      lda	#<.addr
      5  0f4c		       48		      pha
      6  0f4d		       a9 0f		      lda	#>.addr
      7  0f4f		       48		      pha
      0  0f50					      pbyte	#32
      1  0f50		       a9 20		      lda	#32
      2  0f52					      IF	!FPUSH
      3  0f52		       48		      pha
      4  0f53					      ENDIF
   3688  0f53				   FPUSH      SET	1
      0  0f53					      opt_pwvar_pword_sub	_draw_enemies.pos, #1
      1  0f53
      2  0f53
      3  0f53
      4  0f53		       ad d0 4a 	      lda	_draw_enemies.pos
      5  0f56		       38		      sec
      6  0f57		       e9 01		      sbc	<#1
      7  0f59				  -	      IF	!FPUSH
      8  0f59				  -	      pha
      9  0f59					      ELSE
     10  0f59		       aa		      tax
     11  0f5a					      ENDIF
     12  0f5a		       ad d1 4a 	      lda	_draw_enemies.pos+1
     13  0f5d		       e9 00		      sbc	>#1
     14  0f5f				  -	      IF	!FPUSH
     15  0f5f				  -	      pha
     16  0f5f					      ELSE
     17  0f5f		       a8		      tay
     18  0f60		       8a		      txa
     19  0f61					      ENDIF
   3690  0f61				   FPULL      SET	1
   3691  0f61				   FPUSH      SET	0
      0  0f61					      pokeb
      1  0f61				  -	      IF	!FPULL
      2  0f61				  -	      pla
      3  0f61				  -	      sta	.selfmod_code+2
      4  0f61				  -	      pla
      5  0f61				  -	      sta	.selfmod_code+1
      6  0f61					      ELSE
      7  0f61		       8d 69 0f 	      sta	.selfmod_code+1
      8  0f64		       8c 6a 0f 	      sty	.selfmod_code+2
      9  0f67					      ENDIF
     10  0f67		       68		      pla
     11  0f68				   .selfmod_code
     12  0f68		       8d 00 00 	      sta.w	$0000
   3693  0f68				   FPULL      SET	0
   3694  0f68				   FPUSH      SET	1
      0  0f6b					      pbyte	#0
      1  0f6b		       a9 00		      lda	#0
      2  0f6d				  -	      IF	!FPUSH
      3  0f6d				  -	      pha
      4  0f6d					      ENDIF
   3696  0f6d				   FPULL      SET	1
   3697  0f6d				   FPUSH      SET	0
      0  0f6d					      plb2var	_draw_enemies.x
      1  0f6d				  -	      IF	!FPULL
      2  0f6d				  -	      pla
      3  0f6d					      ENDIF
      4  0f6d		       8d d4 4a 	      sta	_draw_enemies.x
   3699  0f6d				   FPULL      SET	0
      0  0f70					      pbyte	#11
      1  0f70		       a9 0b		      lda	#11
      2  0f72					      IF	!FPUSH
      3  0f72		       48		      pha
      4  0f73					      ENDIF
      0  0f73					      for
      1  0f73
      2  0f73
      3  0f73				   .addr
      4  0f73		       a9 73		      lda	#<.addr
      5  0f75		       48		      pha
      6  0f76		       a9 0f		      lda	#>.addr
      7  0f78		       48		      pha
   3702  0f78				   FPUSH      SET	1
      0  0f79					      opt_pbyte_pbarray_fast	_draw_enemies.map_offset, _enemy_map
      1  0f79
      2  0f79
      3  0f79
      4  0f79		       ae d2 4a 	      ldx	_draw_enemies.map_offset
      5  0f7c		       bd 66 4a 	      lda	_enemy_map,x
      6  0f7f				  -	      IF	!FPUSH
      7  0f7f				  -	      pha
      8  0f7f					      ENDIF
   3704  0f7f				   FPULL      SET	1
   3705  0f7f				   FPUSH      SET	0
      0  0f7f					      plb2var	_draw_enemies.shape
      1  0f7f				  -	      IF	!FPULL
      2  0f7f				  -	      pla
      3  0f7f					      ENDIF
      4  0f7f		       8d d5 4a 	      sta	_draw_enemies.shape
   3707  0f7f				   FPULL      SET	0
      0  0f82					      pbvar	_draw_enemies.shape
      0  0f82					      pbyte	_draw_enemies.shape
      1  0f82		       ad d5 4a 	      lda	_draw_enemies.shape
      2  0f85					      IF	!FPUSH
      3  0f85		       48		      pha
      4  0f86					      ENDIF
   3709  0f86				   FPUSH      SET	1
      0  0f86					      pwvar	_draw_enemies.pos
      1  0f86				  -	      IF	!FPUSH
      2  0f86				  -	      lda	_draw_enemies.pos
      3  0f86				  -	      pha
      4  0f86				  -	      lda	_draw_enemies.pos+1
      5  0f86				  -	      pha
      6  0f86					      ELSE
      7  0f86		       ad d0 4a 	      lda	_draw_enemies.pos
      8  0f89		       ac d1 4a 	      ldy	_draw_enemies.pos+1
      9  0f8c					      ENDIF
   3711  0f8c				   FPULL      SET	1
   3712  0f8c				   FPUSH      SET	0
      0  0f8c					      pokeb
      1  0f8c				  -	      IF	!FPULL
      2  0f8c				  -	      pla
      3  0f8c				  -	      sta	.selfmod_code+2
      4  0f8c				  -	      pla
      5  0f8c				  -	      sta	.selfmod_code+1
      6  0f8c					      ELSE
      7  0f8c		       8d 94 0f 	      sta	.selfmod_code+1
      8  0f8f		       8c 95 0f 	      sty	.selfmod_code+2
      9  0f92					      ENDIF
     10  0f92		       68		      pla
     11  0f93				   .selfmod_code
     12  0f93		       8d 00 00 	      sta.w	$0000
      0  0f96					      incw	_draw_enemies.pos
      1  0f96		       ee d0 4a 	      inc	_draw_enemies.pos
      2  0f99		       d0 03		      bne	.skip
      3  0f9b		       ee d1 4a 	      inc	_draw_enemies.pos+1
      4  0f9e				   .skip
      0  0f9e					      incb	_draw_enemies.shape
      1  0f9e		       ee d5 4a 	      inc	_draw_enemies.shape
   3716  0f9e				   FPULL      SET	0
      0  0fa1					      pbvar	_draw_enemies.shape
      0  0fa1					      pbyte	_draw_enemies.shape
      1  0fa1		       ad d5 4a 	      lda	_draw_enemies.shape
      2  0fa4					      IF	!FPUSH
      3  0fa4		       48		      pha
      4  0fa5					      ENDIF
   3718  0fa5				   FPUSH      SET	1
      0  0fa5					      pwvar	_draw_enemies.pos
      1  0fa5				  -	      IF	!FPUSH
      2  0fa5				  -	      lda	_draw_enemies.pos
      3  0fa5				  -	      pha
      4  0fa5				  -	      lda	_draw_enemies.pos+1
      5  0fa5				  -	      pha
      6  0fa5					      ELSE
      7  0fa5		       ad d0 4a 	      lda	_draw_enemies.pos
      8  0fa8		       ac d1 4a 	      ldy	_draw_enemies.pos+1
      9  0fab					      ENDIF
   3720  0fab				   FPULL      SET	1
   3721  0fab				   FPUSH      SET	0
      0  0fab					      pokeb
      1  0fab				  -	      IF	!FPULL
      2  0fab				  -	      pla
      3  0fab				  -	      sta	.selfmod_code+2
      4  0fab				  -	      pla
      5  0fab				  -	      sta	.selfmod_code+1
      6  0fab					      ELSE
      7  0fab		       8d b3 0f 	      sta	.selfmod_code+1
      8  0fae		       8c b4 0f 	      sty	.selfmod_code+2
      9  0fb1					      ENDIF
     10  0fb1		       68		      pla
     11  0fb2				   .selfmod_code
     12  0fb2		       8d 00 00 	      sta.w	$0000
      0  0fb5					      incw	_draw_enemies.pos
      1  0fb5		       ee d0 4a 	      inc	_draw_enemies.pos
      2  0fb8		       d0 03		      bne	.skip
      3  0fba		       ee d1 4a 	      inc	_draw_enemies.pos+1
      4  0fbd				   .skip
      0  0fbd					      incb	_draw_enemies.map_offset
      1  0fbd		       ee d2 4a 	      inc	_draw_enemies.map_offset
      0  0fc0					      nextb	_draw_enemies.x
      1  0fc0
      2  0fc0		       ee d4 4a 	      inc	_draw_enemies.x
      3  0fc3
      4  0fc3		       f0 15		      beq	.end
      5  0fc5				   .skip
      6  0fc5
      7  0fc5		       68		      pla
      8  0fc6		       8d d9 0f 	      sta	.selfmod_code+2
      9  0fc9		       68		      pla
     10  0fca		       8d d8 0f 	      sta	.selfmod_code+1
     11  0fcd
     12  0fcd		       68		      pla
     13  0fce		       cd d4 4a 	      cmp	_draw_enemies.x
     14  0fd1		       b0 03		      bcs	.jump_back
     15  0fd3		       4c da 0f 	      jmp	.end
     16  0fd6				   .jump_back
     17  0fd6
     18  0fd6		       48		      pha
     19  0fd7				   .selfmod_code
     20  0fd7		       4c 00 00 	      jmp	$0000
     21  0fda				   .end
   3726  0fda				   FPULL      SET	0
      0  0fda					      pbyte	#32
      1  0fda		       a9 20		      lda	#32
      2  0fdc					      IF	!FPUSH
      3  0fdc		       48		      pha
      4  0fdd					      ENDIF
   3728  0fdd				   FPUSH      SET	1
      0  0fdd					      opt_pwvar_pword_add	_draw_enemies.pos, #1
      1  0fdd
      2  0fdd
      3  0fdd
      4  0fdd		       ad d0 4a 	      lda	_draw_enemies.pos
      5  0fe0		       18		      clc
      6  0fe1		       69 01		      adc	<#1
      7  0fe3				  -	      IF	!FPUSH
      8  0fe3				  -	      pha
      9  0fe3					      ELSE
     10  0fe3		       aa		      tax
     11  0fe4					      ENDIF
     12  0fe4		       ad d1 4a 	      lda	_draw_enemies.pos+1
     13  0fe7		       69 00		      adc	>#1
     14  0fe9				  -	      IF	!FPUSH
     15  0fe9				  -	      pha
     16  0fe9					      ELSE
     17  0fe9		       a8		      tay
     18  0fea		       8a		      txa
     19  0feb					      ENDIF
   3730  0feb				   FPULL      SET	1
   3731  0feb				   FPUSH      SET	0
      0  0feb					      pokeb
      1  0feb				  -	      IF	!FPULL
      2  0feb				  -	      pla
      3  0feb				  -	      sta	.selfmod_code+2
      4  0feb				  -	      pla
      5  0feb				  -	      sta	.selfmod_code+1
      6  0feb					      ELSE
      7  0feb		       8d f3 0f 	      sta	.selfmod_code+1
      8  0fee		       8c f4 0f 	      sty	.selfmod_code+2
      9  0ff1					      ENDIF
     10  0ff1		       68		      pla
     11  0ff2				   .selfmod_code
     12  0ff2		       8d 00 00 	      sta.w	$0000
   3733  0ff2				   FPULL      SET	0
   3734  0ff2				   FPUSH      SET	1
      0  0ff5					      opt_pwvar_pword_add	_draw_enemies.pos, #56
      1  0ff5
      2  0ff5
      3  0ff5
      4  0ff5		       ad d0 4a 	      lda	_draw_enemies.pos
      5  0ff8		       18		      clc
      6  0ff9		       69 38		      adc	<#56
      7  0ffb				  -	      IF	!FPUSH
      8  0ffb				  -	      pha
      9  0ffb					      ELSE
     10  0ffb		       aa		      tax
     11  0ffc					      ENDIF
     12  0ffc		       ad d1 4a 	      lda	_draw_enemies.pos+1
     13  0fff		       69 00		      adc	>#56
     14  1001				  -	      IF	!FPUSH
     15  1001				  -	      pha
     16  1001					      ELSE
     17  1001		       a8		      tay
     18  1002		       8a		      txa
     19  1003					      ENDIF
   3736  1003				   FPULL      SET	1
   3737  1003				   FPUSH      SET	0
      0  1003					      plw2var	_draw_enemies.pos
      1  1003				  -	      IF	!FPULL
      2  1003				  -	      pla
      3  1003				  -	      sta	_draw_enemies.pos+1
      4  1003				  -	      pla
      5  1003				  -	      sta	_draw_enemies.pos
      6  1003					      ELSE
      7  1003		       8d d0 4a 	      sta	_draw_enemies.pos
      8  1006		       8c d1 4a 	      sty	_draw_enemies.pos+1
      9  1009					      ENDIF
      0  1009					      nextb	_draw_enemies.y
      1  1009
      2  1009		       ee d3 4a 	      inc	_draw_enemies.y
      3  100c
      4  100c		       f0 15		      beq	.end
      5  100e				   .skip
      6  100e
      7  100e		       68		      pla
      8  100f		       8d 22 10 	      sta	.selfmod_code+2
      9  1012		       68		      pla
     10  1013		       8d 21 10 	      sta	.selfmod_code+1
     11  1016
     12  1016		       68		      pla
     13  1017		       cd d3 4a 	      cmp	_draw_enemies.y
     14  101a		       b0 03		      bcs	.jump_back
     15  101c		       4c 23 10 	      jmp	.end
     16  101f				   .jump_back
     17  101f
     18  101f		       48		      pha
     19  1020				   .selfmod_code
     20  1020		       4c 00 00 	      jmp	$0000
     21  1023				   .end
   3740  1023		       60		      rts
   3741  1024
   3742  1024
   3743  1024
   3744  1024
   3745  1024				   _Pdraw_enemies_end
   3746  1024		       4c 4c 10 	      jmp	_Pruin_shields_end
   3747  1027
   3748  1027
   3749  1027
   3750  1027
   3751  1027
   3752  1027
   3753  1027
   3754  1027				   _Pruin_shields
   3755  1027				   FPULL      SET	0
      0  1027					      pbyte	#32
      1  1027		       a9 20		      lda	#32
      2  1029					      IF	!FPUSH
      3  1029		       48		      pha
      4  102a					      ENDIF
      0  102a					      pbyte	#120
      1  102a		       a9 78		      lda	#120
      2  102c					      IF	!FPUSH
      3  102c		       48		      pha
      4  102d					      ENDIF
      0  102d					      btow
      1  102d		       a9 00		      lda	#$00
      2  102f		       48		      pha
      0  1030					      pword	#1824
      1  1030					      IF	!FPUSH
      2  1030		       a9 20		      lda	#<#1824
      3  1032		       48		      pha
      4  1033		       a9 07		      lda	#>#1824
      5  1035		       48		      pha
      6  1036				  -	      ELSE
      7  1036				  -	      lda	#<#1824
      8  1036				  -	      ldy	#>#1824
      9  1036					      ENDIF
      0  1036					      memset
      1  1036					      IF	!FPULL
      2  1036		       68		      pla
      3  1037		       85 fc		      sta	R1
      4  1039		       68		      pla
      5  103a		       85 fb		      sta	R0
      6  103c				  -	      ELSE
      7  103c				  -	      sta	R0
      8  103c				  -	      sty	R1
      9  103c					      ENDIF
     10  103c		       68		      pla
     11  103d		       85 fe		      sta	R3
     12  103f		       68		      pla
     13  1040		       85 fd		      sta	R2
     14  1042		       68		      pla
     15  1043		       20 de 0a 	      jsr	mem_memset
   3761  1043				   FPUSH      SET	1
      0  1046					      pbyte	#250
      1  1046		       a9 fa		      lda	#250
      2  1048				  -	      IF	!FPUSH
      3  1048				  -	      pha
      4  1048					      ENDIF
   3763  1048				   FPULL      SET	1
   3764  1048				   FPUSH      SET	0
      0  1048					      plb2var	_scroll_bottom_limit
      1  1048				  -	      IF	!FPULL
      2  1048				  -	      pla
      3  1048					      ENDIF
      4  1048		       8d c1 4a 	      sta	_scroll_bottom_limit
   3766  104b		       60		      rts
   3767  104c				   _Pruin_shields_end
   3768  104c		       4c 51 14 	      jmp	_Pdraw_scene_end
   3769  104f
   3770  104f
   3771  104f
   3772  104f
   3773  104f
   3774  104f
   3775  104f
   3776  104f				   _Pdraw_scene
   3777  104f		       20 0c 0c 	      jsr	_Pcls
      0  1052					      paddr	_S1
      0  1052					      pword	_S1
      1  1052					      IF	!FPUSH
      2  1052		       a9 bd		      lda	#<_S1
      3  1054		       48		      pha
      4  1055		       a9 49		      lda	#>_S1
      5  1057		       48		      pha
      6  1058				  -	      ELSE
      7  1058				  -	      lda	#<_S1
      8  1058				  -	      ldy	#>_S1
      9  1058					      ENDIF
   3779  1058				   FPULL      SET	0
      0  1058					      pbyte	#0
      1  1058		       a9 00		      lda	#0
      2  105a					      IF	!FPUSH
      3  105a		       48		      pha
      4  105b					      ENDIF
      0  105b					      btow
      1  105b		       a9 00		      lda	#$00
      2  105d		       48		      pha
   3782  105d				   FPUSH      SET	1
      0  105e					      pword	#40
      1  105e				  -	      IF	!FPUSH
      2  105e				  -	      lda	#<#40
      3  105e				  -	      pha
      4  105e				  -	      lda	#>#40
      5  105e				  -	      pha
      6  105e					      ELSE
      7  105e		       a9 28		      lda	#<#40
      8  1060		       a0 00		      ldy	#>#40
      9  1062					      ENDIF
   3784  1062				   FPULL      SET	1
   3785  1062				   FPUSH      SET	0
      0  1062					      mulw
      1  1062				  -	      IF	!FPULL
      2  1062				  -	      pla
      3  1062				  -	      sta	R1
      4  1062				  -	      pla
      5  1062				  -	      sta	R0
      6  1062					      ELSE
      7  1062		       85 fb		      sta	R0
      8  1064		       84 fc		      sty	R1
      9  1066					      ENDIF
     10  1066		       68		      pla
     11  1067		       85 fe		      sta	R3
     12  1069		       68		      pla
     13  106a		       85 fd		      sta	R2
     14  106c		       20 0d 08 	      jsr	NUCL_SMUL16
     15  106f					      IF	!FPUSH
     16  106f		       a5 fb		      lda	R0
     17  1071		       48		      pha
     18  1072		       a5 fc		      lda	R1
     19  1074		       48		      pha
     20  1075				  -	      ELSE
     21  1075				  -	      lda	R0
     22  1075				  -	      ldy	R1
     23  1075					      ENDIF
   3787  1075				   FPULL      SET	0
      0  1075					      pbyte	#0
      1  1075		       a9 00		      lda	#0
      2  1077					      IF	!FPUSH
      3  1077		       48		      pha
      4  1078					      ENDIF
      0  1078					      btow
      1  1078		       a9 00		      lda	#$00
      2  107a		       48		      pha
      0  107b					      addw
      1  107b		       ba		      tsx
      2  107c		       bd 02 01 	      lda.wx	stack+2
      3  107f		       18		      clc
      4  1080		       7d 04 01 	      adc.wx	stack+4
      5  1083		       9d 04 01 	      sta.wx	stack+4
      6  1086		       68		      pla
      7  1087		       7d 03 01 	      adc.wx	stack+3
      8  108a		       9d 03 01 	      sta.wx	stack+3
      9  108d		       68		      pla
      0  108e					      pword	#1024
      1  108e					      IF	!FPUSH
      2  108e		       a9 00		      lda	#<#1024
      3  1090		       48		      pha
      4  1091		       a9 04		      lda	#>#1024
      5  1093		       48		      pha
      6  1094				  -	      ELSE
      7  1094				  -	      lda	#<#1024
      8  1094				  -	      ldy	#>#1024
      9  1094					      ENDIF
      0  1094					      addw
      1  1094		       ba		      tsx
      2  1095		       bd 02 01 	      lda.wx	stack+2
      3  1098		       18		      clc
      4  1099		       7d 04 01 	      adc.wx	stack+4
      5  109c		       9d 04 01 	      sta.wx	stack+4
      6  109f		       68		      pla
      7  10a0		       7d 03 01 	      adc.wx	stack+3
      8  10a3		       9d 03 01 	      sta.wx	stack+3
      9  10a6		       68		      pla
      0  10a7					      textat
      1  10a7					      IF	!FPULL
      2  10a7		       68		      pla
      3  10a8		       85 fe		      sta	R3
      4  10aa		       68		      pla
      5  10ab		       85 fd		      sta	R2
      6  10ad				  -	      ELSE
      7  10ad				  -	      sta	R2
      8  10ad				  -	      sty	R3
      9  10ad					      ENDIF
     10  10ad		       68		      pla
     11  10ae		       85 fc		      sta	R1
     12  10b0		       68		      pla
     13  10b1		       85 fb		      sta	R0
     14  10b3		       a0 00		      ldy	#$00
     15  10b5				   .loop
     16  10b5		       b1 fb		      lda	(R0),y
     17  10b7		       f0 06		      beq	.end
     18  10b9		       91 fd		      sta	(R2),y
     19  10bb		       c8		      iny
     20  10bc		       4c b5 10 	      jmp	.loop
     21  10bf				   .end
      0  10bf					      pbyte	#0
      1  10bf		       a9 00		      lda	#0
      2  10c1					      IF	!FPUSH
      3  10c1		       48		      pha
      4  10c2					      ENDIF
      0  10c2					      btow
      1  10c2		       a9 00		      lda	#$00
      2  10c4		       48		      pha
   3796  10c4				   FPUSH      SET	1
      0  10c5					      pword	#40
      1  10c5				  -	      IF	!FPUSH
      2  10c5				  -	      lda	#<#40
      3  10c5				  -	      pha
      4  10c5				  -	      lda	#>#40
      5  10c5				  -	      pha
      6  10c5					      ELSE
      7  10c5		       a9 28		      lda	#<#40
      8  10c7		       a0 00		      ldy	#>#40
      9  10c9					      ENDIF
   3798  10c9				   FPULL      SET	1
   3799  10c9				   FPUSH      SET	0
      0  10c9					      mulw
      1  10c9				  -	      IF	!FPULL
      2  10c9				  -	      pla
      3  10c9				  -	      sta	R1
      4  10c9				  -	      pla
      5  10c9				  -	      sta	R0
      6  10c9					      ELSE
      7  10c9		       85 fb		      sta	R0
      8  10cb		       84 fc		      sty	R1
      9  10cd					      ENDIF
     10  10cd		       68		      pla
     11  10ce		       85 fe		      sta	R3
     12  10d0		       68		      pla
     13  10d1		       85 fd		      sta	R2
     14  10d3		       20 0d 08 	      jsr	NUCL_SMUL16
     15  10d6					      IF	!FPUSH
     16  10d6		       a5 fb		      lda	R0
     17  10d8		       48		      pha
     18  10d9		       a5 fc		      lda	R1
     19  10db		       48		      pha
     20  10dc				  -	      ELSE
     21  10dc				  -	      lda	R0
     22  10dc				  -	      ldy	R1
     23  10dc					      ENDIF
   3801  10dc				   FPULL      SET	0
      0  10dc					      pbyte	#6
      1  10dc		       a9 06		      lda	#6
      2  10de					      IF	!FPUSH
      3  10de		       48		      pha
      4  10df					      ENDIF
      0  10df					      btow
      1  10df		       a9 00		      lda	#$00
      2  10e1		       48		      pha
      0  10e2					      addw
      1  10e2		       ba		      tsx
      2  10e3		       bd 02 01 	      lda.wx	stack+2
      3  10e6		       18		      clc
      4  10e7		       7d 04 01 	      adc.wx	stack+4
      5  10ea		       9d 04 01 	      sta.wx	stack+4
      6  10ed		       68		      pla
      7  10ee		       7d 03 01 	      adc.wx	stack+3
      8  10f1		       9d 03 01 	      sta.wx	stack+3
      9  10f4		       68		      pla
      0  10f5					      pword	#1024
      1  10f5					      IF	!FPUSH
      2  10f5		       a9 00		      lda	#<#1024
      3  10f7		       48		      pha
      4  10f8		       a9 04		      lda	#>#1024
      5  10fa		       48		      pha
      6  10fb				  -	      ELSE
      7  10fb				  -	      lda	#<#1024
      8  10fb				  -	      ldy	#>#1024
      9  10fb					      ENDIF
      0  10fb					      addw
      1  10fb		       ba		      tsx
      2  10fc		       bd 02 01 	      lda.wx	stack+2
      3  10ff		       18		      clc
      4  1100		       7d 04 01 	      adc.wx	stack+4
      5  1103		       9d 04 01 	      sta.wx	stack+4
      6  1106		       68		      pla
      7  1107		       7d 03 01 	      adc.wx	stack+3
      8  110a		       9d 03 01 	      sta.wx	stack+3
      9  110d		       68		      pla
   3807  110d				   FPUSH      SET	1
      0  110e					      pwvar	_score
      1  110e				  -	      IF	!FPUSH
      2  110e				  -	      lda	_score
      3  110e				  -	      pha
      4  110e				  -	      lda	_score+1
      5  110e				  -	      pha
      6  110e					      ELSE
      7  110e		       ad bb 4a 	      lda	_score
      8  1111		       ac bc 4a 	      ldy	_score+1
      9  1114					      ENDIF
   3809  1114
   3810  1114				   FPULL      SET	1
   3811  1114				   FPUSH      SET	0
      0  1114					      wat
      1  1114				  -	      IF	!FPULL
      2  1114				  -	      pla
      3  1114				  -	      sta	R3
      4  1114				  -	      pla
      5  1114				  -	      sta	R2
      6  1114					      ELSE
      7  1114		       85 fd		      sta	R2
      8  1116		       84 fe		      sty	R3
      9  1118					      ENDIF
     10  1118		       68		      pla
     11  1119		       85 46		      sta	RB
     12  111b		       68		      pla
     13  111c		       85 45		      sta	RA
     14  111e		       20 1f 0a 	      jsr	STDLIB_OUTPUT_WORD
      0  1121					      paddr	_S2
      0  1121					      pword	_S2
      1  1121					      IF	!FPUSH
      2  1121		       a9 c3		      lda	#<_S2
      3  1123		       48		      pha
      4  1124		       a9 49		      lda	#>_S2
      5  1126		       48		      pha
      6  1127				  -	      ELSE
      7  1127				  -	      lda	#<_S2
      8  1127				  -	      ldy	#>_S2
      9  1127					      ENDIF
   3814  1127				   FPULL      SET	0
      0  1127					      pbyte	#0
      1  1127		       a9 00		      lda	#0
      2  1129					      IF	!FPUSH
      3  1129		       48		      pha
      4  112a					      ENDIF
      0  112a					      btow
      1  112a		       a9 00		      lda	#$00
      2  112c		       48		      pha
   3817  112c				   FPUSH      SET	1
      0  112d					      pword	#40
      1  112d				  -	      IF	!FPUSH
      2  112d				  -	      lda	#<#40
      3  112d				  -	      pha
      4  112d				  -	      lda	#>#40
      5  112d				  -	      pha
      6  112d					      ELSE
      7  112d		       a9 28		      lda	#<#40
      8  112f		       a0 00		      ldy	#>#40
      9  1131					      ENDIF
   3819  1131				   FPULL      SET	1
   3820  1131				   FPUSH      SET	0
      0  1131					      mulw
      1  1131				  -	      IF	!FPULL
      2  1131				  -	      pla
      3  1131				  -	      sta	R1
      4  1131				  -	      pla
      5  1131				  -	      sta	R0
      6  1131					      ELSE
      7  1131		       85 fb		      sta	R0
      8  1133		       84 fc		      sty	R1
      9  1135					      ENDIF
     10  1135		       68		      pla
     11  1136		       85 fe		      sta	R3
     12  1138		       68		      pla
     13  1139		       85 fd		      sta	R2
     14  113b		       20 0d 08 	      jsr	NUCL_SMUL16
     15  113e					      IF	!FPUSH
     16  113e		       a5 fb		      lda	R0
     17  1140		       48		      pha
     18  1141		       a5 fc		      lda	R1
     19  1143		       48		      pha
     20  1144				  -	      ELSE
     21  1144				  -	      lda	R0
     22  1144				  -	      ldy	R1
     23  1144					      ENDIF
   3822  1144				   FPULL      SET	0
      0  1144					      pbyte	#14
      1  1144		       a9 0e		      lda	#14
      2  1146					      IF	!FPUSH
      3  1146		       48		      pha
      4  1147					      ENDIF
      0  1147					      btow
      1  1147		       a9 00		      lda	#$00
      2  1149		       48		      pha
      0  114a					      addw
      1  114a		       ba		      tsx
      2  114b		       bd 02 01 	      lda.wx	stack+2
      3  114e		       18		      clc
      4  114f		       7d 04 01 	      adc.wx	stack+4
      5  1152		       9d 04 01 	      sta.wx	stack+4
      6  1155		       68		      pla
      7  1156		       7d 03 01 	      adc.wx	stack+3
      8  1159		       9d 03 01 	      sta.wx	stack+3
      9  115c		       68		      pla
      0  115d					      pword	#1024
      1  115d					      IF	!FPUSH
      2  115d		       a9 00		      lda	#<#1024
      3  115f		       48		      pha
      4  1160		       a9 04		      lda	#>#1024
      5  1162		       48		      pha
      6  1163				  -	      ELSE
      7  1163				  -	      lda	#<#1024
      8  1163				  -	      ldy	#>#1024
      9  1163					      ENDIF
      0  1163					      addw
      1  1163		       ba		      tsx
      2  1164		       bd 02 01 	      lda.wx	stack+2
      3  1167		       18		      clc
      4  1168		       7d 04 01 	      adc.wx	stack+4
      5  116b		       9d 04 01 	      sta.wx	stack+4
      6  116e		       68		      pla
      7  116f		       7d 03 01 	      adc.wx	stack+3
      8  1172		       9d 03 01 	      sta.wx	stack+3
      9  1175		       68		      pla
      0  1176					      textat
      1  1176					      IF	!FPULL
      2  1176		       68		      pla
      3  1177		       85 fe		      sta	R3
      4  1179		       68		      pla
      5  117a		       85 fd		      sta	R2
      6  117c				  -	      ELSE
      7  117c				  -	      sta	R2
      8  117c				  -	      sty	R3
      9  117c					      ENDIF
     10  117c		       68		      pla
     11  117d		       85 fc		      sta	R1
     12  117f		       68		      pla
     13  1180		       85 fb		      sta	R0
     14  1182		       a0 00		      ldy	#$00
     15  1184				   .loop
     16  1184		       b1 fb		      lda	(R0),y
     17  1186		       f0 06		      beq	.end
     18  1188		       91 fd		      sta	(R2),y
     19  118a		       c8		      iny
     20  118b		       4c 84 11 	      jmp	.loop
     21  118e				   .end
      0  118e					      paddr	_S3
      0  118e					      pword	_S3
      1  118e					      IF	!FPUSH
      2  118e		       a9 d0		      lda	#<_S3
      3  1190		       48		      pha
      4  1191		       a9 49		      lda	#>_S3
      5  1193		       48		      pha
      6  1194				  -	      ELSE
      7  1194				  -	      lda	#<_S3
      8  1194				  -	      ldy	#>_S3
      9  1194					      ENDIF
      0  1194					      pbyte	#0
      1  1194		       a9 00		      lda	#0
      2  1196					      IF	!FPUSH
      3  1196		       48		      pha
      4  1197					      ENDIF
      0  1197					      btow
      1  1197		       a9 00		      lda	#$00
      2  1199		       48		      pha
   3832  1199				   FPUSH      SET	1
      0  119a					      pword	#40
      1  119a				  -	      IF	!FPUSH
      2  119a				  -	      lda	#<#40
      3  119a				  -	      pha
      4  119a				  -	      lda	#>#40
      5  119a				  -	      pha
      6  119a					      ELSE
      7  119a		       a9 28		      lda	#<#40
      8  119c		       a0 00		      ldy	#>#40
      9  119e					      ENDIF
   3834  119e				   FPULL      SET	1
   3835  119e				   FPUSH      SET	0
      0  119e					      mulw
      1  119e				  -	      IF	!FPULL
      2  119e				  -	      pla
      3  119e				  -	      sta	R1
      4  119e				  -	      pla
      5  119e				  -	      sta	R0
      6  119e					      ELSE
      7  119e		       85 fb		      sta	R0
      8  11a0		       84 fc		      sty	R1
      9  11a2					      ENDIF
     10  11a2		       68		      pla
     11  11a3		       85 fe		      sta	R3
     12  11a5		       68		      pla
     13  11a6		       85 fd		      sta	R2
     14  11a8		       20 0d 08 	      jsr	NUCL_SMUL16
     15  11ab					      IF	!FPUSH
     16  11ab		       a5 fb		      lda	R0
     17  11ad		       48		      pha
     18  11ae		       a5 fc		      lda	R1
     19  11b0		       48		      pha
     20  11b1				  -	      ELSE
     21  11b1				  -	      lda	R0
     22  11b1				  -	      ldy	R1
     23  11b1					      ENDIF
   3837  11b1				   FPULL      SET	0
      0  11b1					      pbyte	#33
      1  11b1		       a9 21		      lda	#33
      2  11b3					      IF	!FPUSH
      3  11b3		       48		      pha
      4  11b4					      ENDIF
      0  11b4					      btow
      1  11b4		       a9 00		      lda	#$00
      2  11b6		       48		      pha
      0  11b7					      addw
      1  11b7		       ba		      tsx
      2  11b8		       bd 02 01 	      lda.wx	stack+2
      3  11bb		       18		      clc
      4  11bc		       7d 04 01 	      adc.wx	stack+4
      5  11bf		       9d 04 01 	      sta.wx	stack+4
      6  11c2		       68		      pla
      7  11c3		       7d 03 01 	      adc.wx	stack+3
      8  11c6		       9d 03 01 	      sta.wx	stack+3
      9  11c9		       68		      pla
      0  11ca					      pword	#1024
      1  11ca					      IF	!FPUSH
      2  11ca		       a9 00		      lda	#<#1024
      3  11cc		       48		      pha
      4  11cd		       a9 04		      lda	#>#1024
      5  11cf		       48		      pha
      6  11d0				  -	      ELSE
      7  11d0				  -	      lda	#<#1024
      8  11d0				  -	      ldy	#>#1024
      9  11d0					      ENDIF
      0  11d0					      addw
      1  11d0		       ba		      tsx
      2  11d1		       bd 02 01 	      lda.wx	stack+2
      3  11d4		       18		      clc
      4  11d5		       7d 04 01 	      adc.wx	stack+4
      5  11d8		       9d 04 01 	      sta.wx	stack+4
      6  11db		       68		      pla
      7  11dc		       7d 03 01 	      adc.wx	stack+3
      8  11df		       9d 03 01 	      sta.wx	stack+3
      9  11e2		       68		      pla
      0  11e3					      textat
      1  11e3					      IF	!FPULL
      2  11e3		       68		      pla
      3  11e4		       85 fe		      sta	R3
      4  11e6		       68		      pla
      5  11e7		       85 fd		      sta	R2
      6  11e9				  -	      ELSE
      7  11e9				  -	      sta	R2
      8  11e9				  -	      sty	R3
      9  11e9					      ENDIF
     10  11e9		       68		      pla
     11  11ea		       85 fc		      sta	R1
     12  11ec		       68		      pla
     13  11ed		       85 fb		      sta	R0
     14  11ef		       a0 00		      ldy	#$00
     15  11f1				   .loop
     16  11f1		       b1 fb		      lda	(R0),y
     17  11f3		       f0 06		      beq	.end
     18  11f5		       91 fd		      sta	(R2),y
     19  11f7		       c8		      iny
     20  11f8		       4c f1 11 	      jmp	.loop
     21  11fb				   .end
      0  11fb					      pbyte	#0
      1  11fb		       a9 00		      lda	#0
      2  11fd					      IF	!FPUSH
      3  11fd		       48		      pha
      4  11fe					      ENDIF
      0  11fe					      btow
      1  11fe		       a9 00		      lda	#$00
      2  1200		       48		      pha
   3846  1200				   FPUSH      SET	1
      0  1201					      pword	#40
      1  1201				  -	      IF	!FPUSH
      2  1201				  -	      lda	#<#40
      3  1201				  -	      pha
      4  1201				  -	      lda	#>#40
      5  1201				  -	      pha
      6  1201					      ELSE
      7  1201		       a9 28		      lda	#<#40
      8  1203		       a0 00		      ldy	#>#40
      9  1205					      ENDIF
   3848  1205				   FPULL      SET	1
   3849  1205				   FPUSH      SET	0
      0  1205					      mulw
      1  1205				  -	      IF	!FPULL
      2  1205				  -	      pla
      3  1205				  -	      sta	R1
      4  1205				  -	      pla
      5  1205				  -	      sta	R0
      6  1205					      ELSE
      7  1205		       85 fb		      sta	R0
      8  1207		       84 fc		      sty	R1
      9  1209					      ENDIF
     10  1209		       68		      pla
     11  120a		       85 fe		      sta	R3
     12  120c		       68		      pla
     13  120d		       85 fd		      sta	R2
     14  120f		       20 0d 08 	      jsr	NUCL_SMUL16
     15  1212					      IF	!FPUSH
     16  1212		       a5 fb		      lda	R0
     17  1214		       48		      pha
     18  1215		       a5 fc		      lda	R1
     19  1217		       48		      pha
     20  1218				  -	      ELSE
     21  1218				  -	      lda	R0
     22  1218				  -	      ldy	R1
     23  1218					      ENDIF
   3851  1218				   FPULL      SET	0
      0  1218					      pbyte	#38
      1  1218		       a9 26		      lda	#38
      2  121a					      IF	!FPUSH
      3  121a		       48		      pha
      4  121b					      ENDIF
      0  121b					      btow
      1  121b		       a9 00		      lda	#$00
      2  121d		       48		      pha
      0  121e					      addw
      1  121e		       ba		      tsx
      2  121f		       bd 02 01 	      lda.wx	stack+2
      3  1222		       18		      clc
      4  1223		       7d 04 01 	      adc.wx	stack+4
      5  1226		       9d 04 01 	      sta.wx	stack+4
      6  1229		       68		      pla
      7  122a		       7d 03 01 	      adc.wx	stack+3
      8  122d		       9d 03 01 	      sta.wx	stack+3
      9  1230		       68		      pla
      0  1231					      pword	#1024
      1  1231					      IF	!FPUSH
      2  1231		       a9 00		      lda	#<#1024
      3  1233		       48		      pha
      4  1234		       a9 04		      lda	#>#1024
      5  1236		       48		      pha
      6  1237				  -	      ELSE
      7  1237				  -	      lda	#<#1024
      8  1237				  -	      ldy	#>#1024
      9  1237					      ENDIF
      0  1237					      addw
      1  1237		       ba		      tsx
      2  1238		       bd 02 01 	      lda.wx	stack+2
      3  123b		       18		      clc
      4  123c		       7d 04 01 	      adc.wx	stack+4
      5  123f		       9d 04 01 	      sta.wx	stack+4
      6  1242		       68		      pla
      7  1243		       7d 03 01 	      adc.wx	stack+3
      8  1246		       9d 03 01 	      sta.wx	stack+3
      9  1249		       68		      pla
   3857  1249				   FPUSH      SET	1
      0  124a					      pbvar	_lives
      0  124a					      pbyte	_lives
      1  124a		       ad bd 4a 	      lda	_lives
      2  124d				  -	      IF	!FPUSH
      3  124d				  -	      pha
      4  124d					      ENDIF
   3859  124d
   3860  124d				   FPULL      SET	1
   3861  124d				   FPUSH      SET	0
      0  124d					      bat
      1  124d				  -	      IF	!FPULL
      2  124d				  -	      pla
      3  124d					      ENDIF
      4  124d		       aa		      tax
      5  124e		       68		      pla
      6  124f		       85 46		      sta	RB
      7  1251		       68		      pla
      8  1252		       85 45		      sta	RA
      9  1254		       8a		      txa
     10  1255		       20 6d 0a 	      jsr	STDLIB_OUTPUT_BYTE
   3863  1255				   FPULL      SET	0
      0  1258					      pbyte	#5
      1  1258		       a9 05		      lda	#5
      2  125a					      IF	!FPUSH
      3  125a		       48		      pha
      4  125b					      ENDIF
      0  125b					      btow
      1  125b		       a9 00		      lda	#$00
      2  125d		       48		      pha
      0  125e					      pword	#1830
      1  125e					      IF	!FPUSH
      2  125e		       a9 26		      lda	#<#1830
      3  1260		       48		      pha
      4  1261		       a9 07		      lda	#>#1830
      5  1263		       48		      pha
      6  1264				  -	      ELSE
      7  1264				  -	      lda	#<#1830
      8  1264				  -	      ldy	#>#1830
      9  1264					      ENDIF
      0  1264					      paddr	_draw_scene.shield_top
      0  1264					      pword	_draw_scene.shield_top
      1  1264					      IF	!FPUSH
      2  1264		       a9 6c		      lda	#<_draw_scene.shield_top
      3  1266		       48		      pha
      4  1267		       a9 47		      lda	#>_draw_scene.shield_top
      5  1269		       48		      pha
      6  126a				  -	      ELSE
      7  126a				  -	      lda	#<_draw_scene.shield_top
      8  126a				  -	      ldy	#>_draw_scene.shield_top
      9  126a					      ENDIF
      0  126a					      memcpy
      1  126a					      IF	!FPULL
      2  126a		       68		      pla
      3  126b		       85 fc		      sta	R1
      4  126d		       68		      pla
      5  126e		       85 fb		      sta	R0
      6  1270				  -	      ELSE
      7  1270				  -	      sta	R0
      8  1270				  -	      sty	R1
      9  1270					      ENDIF
     10  1270		       68		      pla
     11  1271		       85 fe		      sta	R3
     12  1273		       68		      pla
     13  1274		       85 fd		      sta	R2
     14  1276		       68		      pla
     15  1277		       85 40		      sta	R5
     16  1279		       68		      pla
     17  127a		       85 3f		      sta	R4
     18  127c		       20 f9 0a 	      jsr	mem_memcpy
      0  127f					      pbyte	#90
      1  127f		       a9 5a		      lda	#90
      2  1281					      IF	!FPUSH
      3  1281		       48		      pha
      4  1282					      ENDIF
      0  1282					      pbyte	#5
      1  1282		       a9 05		      lda	#5
      2  1284					      IF	!FPUSH
      3  1284		       48		      pha
      4  1285					      ENDIF
      0  1285					      btow
      1  1285		       a9 00		      lda	#$00
      2  1287		       48		      pha
      0  1288					      pword	#1870
      1  1288					      IF	!FPUSH
      2  1288		       a9 4e		      lda	#<#1870
      3  128a		       48		      pha
      4  128b		       a9 07		      lda	#>#1870
      5  128d		       48		      pha
      6  128e				  -	      ELSE
      7  128e				  -	      lda	#<#1870
      8  128e				  -	      ldy	#>#1870
      9  128e					      ENDIF
      0  128e					      memset
      1  128e					      IF	!FPULL
      2  128e		       68		      pla
      3  128f		       85 fc		      sta	R1
      4  1291		       68		      pla
      5  1292		       85 fb		      sta	R0
      6  1294				  -	      ELSE
      7  1294				  -	      sta	R0
      8  1294				  -	      sty	R1
      9  1294					      ENDIF
     10  1294		       68		      pla
     11  1295		       85 fe		      sta	R3
     12  1297		       68		      pla
     13  1298		       85 fd		      sta	R2
     14  129a		       68		      pla
     15  129b		       20 de 0a 	      jsr	mem_memset
      0  129e					      pbyte	#90
      1  129e		       a9 5a		      lda	#90
      2  12a0					      IF	!FPUSH
      3  12a0		       48		      pha
      4  12a1					      ENDIF
      0  12a1					      pbyte	#5
      1  12a1		       a9 05		      lda	#5
      2  12a3					      IF	!FPUSH
      3  12a3		       48		      pha
      4  12a4					      ENDIF
      0  12a4					      btow
      1  12a4		       a9 00		      lda	#$00
      2  12a6		       48		      pha
      0  12a7					      pword	#1910
      1  12a7					      IF	!FPUSH
      2  12a7		       a9 76		      lda	#<#1910
      3  12a9		       48		      pha
      4  12aa		       a9 07		      lda	#>#1910
      5  12ac		       48		      pha
      6  12ad				  -	      ELSE
      7  12ad				  -	      lda	#<#1910
      8  12ad				  -	      ldy	#>#1910
      9  12ad					      ENDIF
      0  12ad					      memset
      1  12ad					      IF	!FPULL
      2  12ad		       68		      pla
      3  12ae		       85 fc		      sta	R1
      4  12b0		       68		      pla
      5  12b1		       85 fb		      sta	R0
      6  12b3				  -	      ELSE
      7  12b3				  -	      sta	R0
      8  12b3				  -	      sty	R1
      9  12b3					      ENDIF
     10  12b3		       68		      pla
     11  12b4		       85 fe		      sta	R3
     12  12b6		       68		      pla
     13  12b7		       85 fd		      sta	R2
     14  12b9		       68		      pla
     15  12ba		       20 de 0a 	      jsr	mem_memset
      0  12bd					      pbyte	#5
      1  12bd		       a9 05		      lda	#5
      2  12bf					      IF	!FPUSH
      3  12bf		       48		      pha
      4  12c0					      ENDIF
      0  12c0					      btow
      1  12c0		       a9 00		      lda	#$00
      2  12c2		       48		      pha
      0  12c3					      pword	#1842
      1  12c3					      IF	!FPUSH
      2  12c3		       a9 32		      lda	#<#1842
      3  12c5		       48		      pha
      4  12c6		       a9 07		      lda	#>#1842
      5  12c8		       48		      pha
      6  12c9				  -	      ELSE
      7  12c9				  -	      lda	#<#1842
      8  12c9				  -	      ldy	#>#1842
      9  12c9					      ENDIF
      0  12c9					      paddr	_draw_scene.shield_top
      0  12c9					      pword	_draw_scene.shield_top
      1  12c9					      IF	!FPUSH
      2  12c9		       a9 6c		      lda	#<_draw_scene.shield_top
      3  12cb		       48		      pha
      4  12cc		       a9 47		      lda	#>_draw_scene.shield_top
      5  12ce		       48		      pha
      6  12cf				  -	      ELSE
      7  12cf				  -	      lda	#<_draw_scene.shield_top
      8  12cf				  -	      ldy	#>_draw_scene.shield_top
      9  12cf					      ENDIF
      0  12cf					      memcpy
      1  12cf					      IF	!FPULL
      2  12cf		       68		      pla
      3  12d0		       85 fc		      sta	R1
      4  12d2		       68		      pla
      5  12d3		       85 fb		      sta	R0
      6  12d5				  -	      ELSE
      7  12d5				  -	      sta	R0
      8  12d5				  -	      sty	R1
      9  12d5					      ENDIF
     10  12d5		       68		      pla
     11  12d6		       85 fe		      sta	R3
     12  12d8		       68		      pla
     13  12d9		       85 fd		      sta	R2
     14  12db		       68		      pla
     15  12dc		       85 40		      sta	R5
     16  12de		       68		      pla
     17  12df		       85 3f		      sta	R4
     18  12e1		       20 f9 0a 	      jsr	mem_memcpy
      0  12e4					      pbyte	#90
      1  12e4		       a9 5a		      lda	#90
      2  12e6					      IF	!FPUSH
      3  12e6		       48		      pha
      4  12e7					      ENDIF
      0  12e7					      pbyte	#5
      1  12e7		       a9 05		      lda	#5
      2  12e9					      IF	!FPUSH
      3  12e9		       48		      pha
      4  12ea					      ENDIF
      0  12ea					      btow
      1  12ea		       a9 00		      lda	#$00
      2  12ec		       48		      pha
      0  12ed					      pword	#1882
      1  12ed					      IF	!FPUSH
      2  12ed		       a9 5a		      lda	#<#1882
      3  12ef		       48		      pha
      4  12f0		       a9 07		      lda	#>#1882
      5  12f2		       48		      pha
      6  12f3				  -	      ELSE
      7  12f3				  -	      lda	#<#1882
      8  12f3				  -	      ldy	#>#1882
      9  12f3					      ENDIF
      0  12f3					      memset
      1  12f3					      IF	!FPULL
      2  12f3		       68		      pla
      3  12f4		       85 fc		      sta	R1
      4  12f6		       68		      pla
      5  12f7		       85 fb		      sta	R0
      6  12f9				  -	      ELSE
      7  12f9				  -	      sta	R0
      8  12f9				  -	      sty	R1
      9  12f9					      ENDIF
     10  12f9		       68		      pla
     11  12fa		       85 fe		      sta	R3
     12  12fc		       68		      pla
     13  12fd		       85 fd		      sta	R2
     14  12ff		       68		      pla
     15  1300		       20 de 0a 	      jsr	mem_memset
      0  1303					      pbyte	#90
      1  1303		       a9 5a		      lda	#90
      2  1305					      IF	!FPUSH
      3  1305		       48		      pha
      4  1306					      ENDIF
      0  1306					      pbyte	#5
      1  1306		       a9 05		      lda	#5
      2  1308					      IF	!FPUSH
      3  1308		       48		      pha
      4  1309					      ENDIF
      0  1309					      btow
      1  1309		       a9 00		      lda	#$00
      2  130b		       48		      pha
      0  130c					      pword	#1922
      1  130c					      IF	!FPUSH
      2  130c		       a9 82		      lda	#<#1922
      3  130e		       48		      pha
      4  130f		       a9 07		      lda	#>#1922
      5  1311		       48		      pha
      6  1312				  -	      ELSE
      7  1312				  -	      lda	#<#1922
      8  1312				  -	      ldy	#>#1922
      9  1312					      ENDIF
      0  1312					      memset
      1  1312					      IF	!FPULL
      2  1312		       68		      pla
      3  1313		       85 fc		      sta	R1
      4  1315		       68		      pla
      5  1316		       85 fb		      sta	R0
      6  1318				  -	      ELSE
      7  1318				  -	      sta	R0
      8  1318				  -	      sty	R1
      9  1318					      ENDIF
     10  1318		       68		      pla
     11  1319		       85 fe		      sta	R3
     12  131b		       68		      pla
     13  131c		       85 fd		      sta	R2
     14  131e		       68		      pla
     15  131f		       20 de 0a 	      jsr	mem_memset
      0  1322					      pbyte	#5
      1  1322		       a9 05		      lda	#5
      2  1324					      IF	!FPUSH
      3  1324		       48		      pha
      4  1325					      ENDIF
      0  1325					      btow
      1  1325		       a9 00		      lda	#$00
      2  1327		       48		      pha
      0  1328					      pword	#1854
      1  1328					      IF	!FPUSH
      2  1328		       a9 3e		      lda	#<#1854
      3  132a		       48		      pha
      4  132b		       a9 07		      lda	#>#1854
      5  132d		       48		      pha
      6  132e				  -	      ELSE
      7  132e				  -	      lda	#<#1854
      8  132e				  -	      ldy	#>#1854
      9  132e					      ENDIF
      0  132e					      paddr	_draw_scene.shield_top
      0  132e					      pword	_draw_scene.shield_top
      1  132e					      IF	!FPUSH
      2  132e		       a9 6c		      lda	#<_draw_scene.shield_top
      3  1330		       48		      pha
      4  1331		       a9 47		      lda	#>_draw_scene.shield_top
      5  1333		       48		      pha
      6  1334				  -	      ELSE
      7  1334				  -	      lda	#<_draw_scene.shield_top
      8  1334				  -	      ldy	#>_draw_scene.shield_top
      9  1334					      ENDIF
      0  1334					      memcpy
      1  1334					      IF	!FPULL
      2  1334		       68		      pla
      3  1335		       85 fc		      sta	R1
      4  1337		       68		      pla
      5  1338		       85 fb		      sta	R0
      6  133a				  -	      ELSE
      7  133a				  -	      sta	R0
      8  133a				  -	      sty	R1
      9  133a					      ENDIF
     10  133a		       68		      pla
     11  133b		       85 fe		      sta	R3
     12  133d		       68		      pla
     13  133e		       85 fd		      sta	R2
     14  1340		       68		      pla
     15  1341		       85 40		      sta	R5
     16  1343		       68		      pla
     17  1344		       85 3f		      sta	R4
     18  1346		       20 f9 0a 	      jsr	mem_memcpy
      0  1349					      pbyte	#90
      1  1349		       a9 5a		      lda	#90
      2  134b					      IF	!FPUSH
      3  134b		       48		      pha
      4  134c					      ENDIF
      0  134c					      pbyte	#5
      1  134c		       a9 05		      lda	#5
      2  134e					      IF	!FPUSH
      3  134e		       48		      pha
      4  134f					      ENDIF
      0  134f					      btow
      1  134f		       a9 00		      lda	#$00
      2  1351		       48		      pha
      0  1352					      pword	#1894
      1  1352					      IF	!FPUSH
      2  1352		       a9 66		      lda	#<#1894
      3  1354		       48		      pha
      4  1355		       a9 07		      lda	#>#1894
      5  1357		       48		      pha
      6  1358				  -	      ELSE
      7  1358				  -	      lda	#<#1894
      8  1358				  -	      ldy	#>#1894
      9  1358					      ENDIF
      0  1358					      memset
      1  1358					      IF	!FPULL
      2  1358		       68		      pla
      3  1359		       85 fc		      sta	R1
      4  135b		       68		      pla
      5  135c		       85 fb		      sta	R0
      6  135e				  -	      ELSE
      7  135e				  -	      sta	R0
      8  135e				  -	      sty	R1
      9  135e					      ENDIF
     10  135e		       68		      pla
     11  135f		       85 fe		      sta	R3
     12  1361		       68		      pla
     13  1362		       85 fd		      sta	R2
     14  1364		       68		      pla
     15  1365		       20 de 0a 	      jsr	mem_memset
      0  1368					      pbyte	#90
      1  1368		       a9 5a		      lda	#90
      2  136a					      IF	!FPUSH
      3  136a		       48		      pha
      4  136b					      ENDIF
      0  136b					      pbyte	#5
      1  136b		       a9 05		      lda	#5
      2  136d					      IF	!FPUSH
      3  136d		       48		      pha
      4  136e					      ENDIF
      0  136e					      btow
      1  136e		       a9 00		      lda	#$00
      2  1370		       48		      pha
      0  1371					      pword	#1934
      1  1371					      IF	!FPUSH
      2  1371		       a9 8e		      lda	#<#1934
      3  1373		       48		      pha
      4  1374		       a9 07		      lda	#>#1934
      5  1376		       48		      pha
      6  1377				  -	      ELSE
      7  1377				  -	      lda	#<#1934
      8  1377				  -	      ldy	#>#1934
      9  1377					      ENDIF
      0  1377					      memset
      1  1377					      IF	!FPULL
      2  1377		       68		      pla
      3  1378		       85 fc		      sta	R1
      4  137a		       68		      pla
      5  137b		       85 fb		      sta	R0
      6  137d				  -	      ELSE
      7  137d				  -	      sta	R0
      8  137d				  -	      sty	R1
      9  137d					      ENDIF
     10  137d		       68		      pla
     11  137e		       85 fe		      sta	R3
     12  1380		       68		      pla
     13  1381		       85 fd		      sta	R2
     14  1383		       68		      pla
     15  1384		       20 de 0a 	      jsr	mem_memset
   3909  1384				   FPUSH      SET	1
      0  1387					      pbyte	#0
      1  1387		       a9 00		      lda	#0
      2  1389				  -	      IF	!FPUSH
      3  1389				  -	      pha
      4  1389					      ENDIF
   3911  1389				   FPULL      SET	1
   3912  1389				   FPUSH      SET	0
      0  1389					      plb2var	_draw_enemies.line_no
      1  1389				  -	      IF	!FPULL
      2  1389				  -	      pla
      3  1389					      ENDIF
      4  1389		       8d ce 4a 	      sta	_draw_enemies.line_no
   3914  1389				   FPULL      SET	0
   3915  1389				   FPUSH      SET	1
      0  138c					      pbvar	_enemy_posx
      0  138c					      pbyte	_enemy_posx
      1  138c		       ad af 4a 	      lda	_enemy_posx
      2  138f				  -	      IF	!FPUSH
      3  138f				  -	      pha
      4  138f					      ENDIF
   3917  138f				   FPULL      SET	1
   3918  138f				   FPUSH      SET	0
      0  138f					      plb2var	_draw_enemies.offset
      1  138f				  -	      IF	!FPULL
      2  138f				  -	      pla
      3  138f					      ENDIF
      4  138f		       8d cf 4a 	      sta	_draw_enemies.offset
   3920  1392		       20 e0 0e 	      jsr	_Pdraw_enemies
   3921  1392				   FPULL      SET	0
      0  1395					      pbyte	#255
      1  1395		       a9 ff		      lda	#255
      2  1397					      IF	!FPUSH
      3  1397		       48		      pha
      4  1398					      ENDIF
   3923  1398				   FPUSH      SET	1
      0  1398					      pword	#2040
      1  1398				  -	      IF	!FPUSH
      2  1398				  -	      lda	#<#2040
      3  1398				  -	      pha
      4  1398				  -	      lda	#>#2040
      5  1398				  -	      pha
      6  1398					      ELSE
      7  1398		       a9 f8		      lda	#<#2040
      8  139a		       a0 07		      ldy	#>#2040
      9  139c					      ENDIF
   3925  139c				   FPULL      SET	1
   3926  139c				   FPUSH      SET	0
      0  139c					      pokeb
      1  139c				  -	      IF	!FPULL
      2  139c				  -	      pla
      3  139c				  -	      sta	.selfmod_code+2
      4  139c				  -	      pla
      5  139c				  -	      sta	.selfmod_code+1
      6  139c					      ELSE
      7  139c		       8d a4 13 	      sta	.selfmod_code+1
      8  139f		       8c a5 13 	      sty	.selfmod_code+2
      9  13a2					      ENDIF
     10  13a2		       68		      pla
     11  13a3				   .selfmod_code
     12  13a3		       8d 00 00 	      sta.w	$0000
   3928  13a3				   FPULL      SET	0
      0  13a6					      pbyte	#254
      1  13a6		       a9 fe		      lda	#254
      2  13a8					      IF	!FPUSH
      3  13a8		       48		      pha
      4  13a9					      ENDIF
   3930  13a9				   FPUSH      SET	1
      0  13a9					      pword	#2041
      1  13a9				  -	      IF	!FPUSH
      2  13a9				  -	      lda	#<#2041
      3  13a9				  -	      pha
      4  13a9				  -	      lda	#>#2041
      5  13a9				  -	      pha
      6  13a9					      ELSE
      7  13a9		       a9 f9		      lda	#<#2041
      8  13ab		       a0 07		      ldy	#>#2041
      9  13ad					      ENDIF
   3932  13ad				   FPULL      SET	1
   3933  13ad				   FPUSH      SET	0
      0  13ad					      pokeb
      1  13ad				  -	      IF	!FPULL
      2  13ad				  -	      pla
      3  13ad				  -	      sta	.selfmod_code+2
      4  13ad				  -	      pla
      5  13ad				  -	      sta	.selfmod_code+1
      6  13ad					      ELSE
      7  13ad		       8d b5 13 	      sta	.selfmod_code+1
      8  13b0		       8c b6 13 	      sty	.selfmod_code+2
      9  13b3					      ENDIF
     10  13b3		       68		      pla
     11  13b4				   .selfmod_code
     12  13b4		       8d 00 00 	      sta.w	$0000
   3935  13b4				   FPULL      SET	0
      0  13b7					      pbyte	#254
      1  13b7		       a9 fe		      lda	#254
      2  13b9					      IF	!FPUSH
      3  13b9		       48		      pha
      4  13ba					      ENDIF
   3937  13ba				   FPUSH      SET	1
      0  13ba					      pword	#2042
      1  13ba				  -	      IF	!FPUSH
      2  13ba				  -	      lda	#<#2042
      3  13ba				  -	      pha
      4  13ba				  -	      lda	#>#2042
      5  13ba				  -	      pha
      6  13ba					      ELSE
      7  13ba		       a9 fa		      lda	#<#2042
      8  13bc		       a0 07		      ldy	#>#2042
      9  13be					      ENDIF
   3939  13be				   FPULL      SET	1
   3940  13be				   FPUSH      SET	0
      0  13be					      pokeb
      1  13be				  -	      IF	!FPULL
      2  13be				  -	      pla
      3  13be				  -	      sta	.selfmod_code+2
      4  13be				  -	      pla
      5  13be				  -	      sta	.selfmod_code+1
      6  13be					      ELSE
      7  13be		       8d c6 13 	      sta	.selfmod_code+1
      8  13c1		       8c c7 13 	      sty	.selfmod_code+2
      9  13c4					      ENDIF
     10  13c4		       68		      pla
     11  13c5				   .selfmod_code
     12  13c5		       8d 00 00 	      sta.w	$0000
   3942  13c5				   FPULL      SET	0
      0  13c8					      pbyte	#254
      1  13c8		       a9 fe		      lda	#254
      2  13ca					      IF	!FPUSH
      3  13ca		       48		      pha
      4  13cb					      ENDIF
   3944  13cb				   FPUSH      SET	1
      0  13cb					      pword	#2043
      1  13cb				  -	      IF	!FPUSH
      2  13cb				  -	      lda	#<#2043
      3  13cb				  -	      pha
      4  13cb				  -	      lda	#>#2043
      5  13cb				  -	      pha
      6  13cb					      ELSE
      7  13cb		       a9 fb		      lda	#<#2043
      8  13cd		       a0 07		      ldy	#>#2043
      9  13cf					      ENDIF
   3946  13cf				   FPULL      SET	1
   3947  13cf				   FPUSH      SET	0
      0  13cf					      pokeb
      1  13cf				  -	      IF	!FPULL
      2  13cf				  -	      pla
      3  13cf				  -	      sta	.selfmod_code+2
      4  13cf				  -	      pla
      5  13cf				  -	      sta	.selfmod_code+1
      6  13cf					      ELSE
      7  13cf		       8d d7 13 	      sta	.selfmod_code+1
      8  13d2		       8c d8 13 	      sty	.selfmod_code+2
      9  13d5					      ENDIF
     10  13d5		       68		      pla
     11  13d6				   .selfmod_code
     12  13d6		       8d 00 00 	      sta.w	$0000
   3949  13d6				   FPULL      SET	0
      0  13d9					      pbyte	#254
      1  13d9		       a9 fe		      lda	#254
      2  13db					      IF	!FPUSH
      3  13db		       48		      pha
      4  13dc					      ENDIF
   3951  13dc				   FPUSH      SET	1
      0  13dc					      pword	#2044
      1  13dc				  -	      IF	!FPUSH
      2  13dc				  -	      lda	#<#2044
      3  13dc				  -	      pha
      4  13dc				  -	      lda	#>#2044
      5  13dc				  -	      pha
      6  13dc					      ELSE
      7  13dc		       a9 fc		      lda	#<#2044
      8  13de		       a0 07		      ldy	#>#2044
      9  13e0					      ENDIF
   3953  13e0				   FPULL      SET	1
   3954  13e0				   FPUSH      SET	0
      0  13e0					      pokeb
      1  13e0				  -	      IF	!FPULL
      2  13e0				  -	      pla
      3  13e0				  -	      sta	.selfmod_code+2
      4  13e0				  -	      pla
      5  13e0				  -	      sta	.selfmod_code+1
      6  13e0					      ELSE
      7  13e0		       8d e8 13 	      sta	.selfmod_code+1
      8  13e3		       8c e9 13 	      sty	.selfmod_code+2
      9  13e6					      ENDIF
     10  13e6		       68		      pla
     11  13e7				   .selfmod_code
     12  13e7		       8d 00 00 	      sta.w	$0000
   3956  13e7				   FPULL      SET	0
      0  13ea					      pbyte	#246
      1  13ea		       a9 f6		      lda	#246
      2  13ec					      IF	!FPUSH
      3  13ec		       48		      pha
      4  13ed					      ENDIF
   3958  13ed				   FPUSH      SET	1
      0  13ed					      pword	#2046
      1  13ed				  -	      IF	!FPUSH
      2  13ed				  -	      lda	#<#2046
      3  13ed				  -	      pha
      4  13ed				  -	      lda	#>#2046
      5  13ed				  -	      pha
      6  13ed					      ELSE
      7  13ed		       a9 fe		      lda	#<#2046
      8  13ef		       a0 07		      ldy	#>#2046
      9  13f1					      ENDIF
   3960  13f1				   FPULL      SET	1
   3961  13f1				   FPUSH      SET	0
      0  13f1					      pokeb
      1  13f1				  -	      IF	!FPULL
      2  13f1				  -	      pla
      3  13f1				  -	      sta	.selfmod_code+2
      4  13f1				  -	      pla
      5  13f1				  -	      sta	.selfmod_code+1
      6  13f1					      ELSE
      7  13f1		       8d f9 13 	      sta	.selfmod_code+1
      8  13f4		       8c fa 13 	      sty	.selfmod_code+2
      9  13f7					      ENDIF
     10  13f7		       68		      pla
     11  13f8				   .selfmod_code
     12  13f8		       8d 00 00 	      sta.w	$0000
   3963  13f8				   FPULL      SET	0
      0  13fb					      pbyte	#176
      1  13fb		       a9 b0		      lda	#176
      2  13fd					      IF	!FPUSH
      3  13fd		       48		      pha
      4  13fe					      ENDIF
   3965  13fe				   FPUSH      SET	1
      0  13fe					      pword	#53248
      1  13fe				  -	      IF	!FPUSH
      2  13fe				  -	      lda	#<#53248
      3  13fe				  -	      pha
      4  13fe				  -	      lda	#>#53248
      5  13fe				  -	      pha
      6  13fe					      ELSE
      7  13fe		       a9 00		      lda	#<#53248
      8  1400		       a0 d0		      ldy	#>#53248
      9  1402					      ENDIF
   3967  1402				   FPULL      SET	1
   3968  1402				   FPUSH      SET	0
      0  1402					      pokeb
      1  1402				  -	      IF	!FPULL
      2  1402				  -	      pla
      3  1402				  -	      sta	.selfmod_code+2
      4  1402				  -	      pla
      5  1402				  -	      sta	.selfmod_code+1
      6  1402					      ELSE
      7  1402		       8d 0a 14 	      sta	.selfmod_code+1
      8  1405		       8c 0b 14 	      sty	.selfmod_code+2
      9  1408					      ENDIF
     10  1408		       68		      pla
     11  1409				   .selfmod_code
     12  1409		       8d 00 00 	      sta.w	$0000
   3970  1409				   FPULL      SET	0
      0  140c					      pbyte	#235
      1  140c		       a9 eb		      lda	#235
      2  140e					      IF	!FPUSH
      3  140e		       48		      pha
      4  140f					      ENDIF
   3972  140f				   FPUSH      SET	1
      0  140f					      pword	#53249
      1  140f				  -	      IF	!FPUSH
      2  140f				  -	      lda	#<#53249
      3  140f				  -	      pha
      4  140f				  -	      lda	#>#53249
      5  140f				  -	      pha
      6  140f					      ELSE
      7  140f		       a9 01		      lda	#<#53249
      8  1411		       a0 d0		      ldy	#>#53249
      9  1413					      ENDIF
   3974  1413				   FPULL      SET	1
   3975  1413				   FPUSH      SET	0
      0  1413					      pokeb
      1  1413				  -	      IF	!FPULL
      2  1413				  -	      pla
      3  1413				  -	      sta	.selfmod_code+2
      4  1413				  -	      pla
      5  1413				  -	      sta	.selfmod_code+1
      6  1413					      ELSE
      7  1413		       8d 1b 14 	      sta	.selfmod_code+1
      8  1416		       8c 1c 14 	      sty	.selfmod_code+2
      9  1419					      ENDIF
     10  1419		       68		      pla
     11  141a				   .selfmod_code
     12  141a		       8d 00 00 	      sta.w	$0000
   3977  141a				   FPULL      SET	0
      0  141d					      pbyte	#1
      1  141d		       a9 01		      lda	#1
      2  141f					      IF	!FPUSH
      3  141f		       48		      pha
      4  1420					      ENDIF
   3979  1420				   FPUSH      SET	1
      0  1420					      pword	#53288
      1  1420				  -	      IF	!FPUSH
      2  1420				  -	      lda	#<#53288
      3  1420				  -	      pha
      4  1420				  -	      lda	#>#53288
      5  1420				  -	      pha
      6  1420					      ELSE
      7  1420		       a9 28		      lda	#<#53288
      8  1422		       a0 d0		      ldy	#>#53288
      9  1424					      ENDIF
   3981  1424				   FPULL      SET	1
   3982  1424				   FPUSH      SET	0
      0  1424					      pokeb
      1  1424				  -	      IF	!FPULL
      2  1424				  -	      pla
      3  1424				  -	      sta	.selfmod_code+2
      4  1424				  -	      pla
      5  1424				  -	      sta	.selfmod_code+1
      6  1424					      ELSE
      7  1424		       8d 2c 14 	      sta	.selfmod_code+1
      8  1427		       8c 2d 14 	      sty	.selfmod_code+2
      9  142a					      ENDIF
     10  142a		       68		      pla
     11  142b				   .selfmod_code
     12  142b		       8d 00 00 	      sta.w	$0000
   3984  142b				   FPULL      SET	0
      0  142e					      pbyte	#13
      1  142e		       a9 0d		      lda	#13
      2  1430					      IF	!FPUSH
      3  1430		       48		      pha
      4  1431					      ENDIF
   3986  1431				   FPUSH      SET	1
      0  1431					      pword	#53293
      1  1431				  -	      IF	!FPUSH
      2  1431				  -	      lda	#<#53293
      3  1431				  -	      pha
      4  1431				  -	      lda	#>#53293
      5  1431				  -	      pha
      6  1431					      ELSE
      7  1431		       a9 2d		      lda	#<#53293
      8  1433		       a0 d0		      ldy	#>#53293
      9  1435					      ENDIF
   3988  1435				   FPULL      SET	1
   3989  1435				   FPUSH      SET	0
      0  1435					      pokeb
      1  1435				  -	      IF	!FPULL
      2  1435				  -	      pla
      3  1435				  -	      sta	.selfmod_code+2
      4  1435				  -	      pla
      5  1435				  -	      sta	.selfmod_code+1
      6  1435					      ELSE
      7  1435		       8d 3d 14 	      sta	.selfmod_code+1
      8  1438		       8c 3e 14 	      sty	.selfmod_code+2
      9  143b					      ENDIF
     10  143b		       68		      pla
     11  143c				   .selfmod_code
     12  143c		       8d 00 00 	      sta.w	$0000
   3991  143c				   FPULL      SET	0
      0  143f					      pbyte	#66
      1  143f		       a9 42		      lda	#66
      2  1441					      IF	!FPUSH
      3  1441		       48		      pha
      4  1442					      ENDIF
   3993  1442				   FPUSH      SET	1
      0  1442					      pword	#53261
      1  1442				  -	      IF	!FPUSH
      2  1442				  -	      lda	#<#53261
      3  1442				  -	      pha
      4  1442				  -	      lda	#>#53261
      5  1442				  -	      pha
      6  1442					      ELSE
      7  1442		       a9 0d		      lda	#<#53261
      8  1444		       a0 d0		      ldy	#>#53261
      9  1446					      ENDIF
   3995  1446				   FPULL      SET	1
   3996  1446				   FPUSH      SET	0
      0  1446					      pokeb
      1  1446				  -	      IF	!FPULL
      2  1446				  -	      pla
      3  1446				  -	      sta	.selfmod_code+2
      4  1446				  -	      pla
      5  1446				  -	      sta	.selfmod_code+1
      6  1446					      ELSE
      7  1446		       8d 4e 14 	      sta	.selfmod_code+1
      8  1449		       8c 4f 14 	      sty	.selfmod_code+2
      9  144c					      ENDIF
     10  144c		       68		      pla
     11  144d				   .selfmod_code
     12  144d		       8d 00 00 	      sta.w	$0000
   3998  1450		       60		      rts
   3999  1451				   _Pdraw_scene_end
   4000  1451		       4c a2 14 	      jmp	_Prshift_enemies_end
   4001  1454
   4002  1454
   4003  1454
   4004  1454
   4005  1454
   4006  1454
   4007  1454
   4008  1454				   _Prshift_enemies
   4009  1454				   FPULL      SET	0
      0  1454					      pwvar	_enemy_map_length
      1  1454					      IF	!FPUSH
      2  1454		       ad c2 4a 	      lda	_enemy_map_length
      3  1457		       48		      pha
      4  1458		       ad c3 4a 	      lda	_enemy_map_length+1
      5  145b		       48		      pha
      6  145c				  -	      ELSE
      7  145c				  -	      lda	_enemy_map_length
      8  145c				  -	      ldy	_enemy_map_length+1
      9  145c					      ENDIF
      0  145c					      opt_pwvar_pword_add	_spos, #1
      1  145c
      2  145c
      3  145c
      4  145c		       ad c4 4a 	      lda	_spos
      5  145f		       18		      clc
      6  1460		       69 01		      adc	<#1
      7  1462					      IF	!FPUSH
      8  1462		       48		      pha
      9  1463				  -	      ELSE
     10  1463				  -	      tax
     11  1463					      ENDIF
     12  1463		       ad c5 4a 	      lda	_spos+1
     13  1466		       69 00		      adc	>#1
     14  1468					      IF	!FPUSH
     15  1468		       48		      pha
     16  1469				  -	      ELSE
     17  1469				  -	      tay
     18  1469				  -	      txa
     19  1469					      ENDIF
      0  1469					      pwvar	_spos
      1  1469					      IF	!FPUSH
      2  1469		       ad c4 4a 	      lda	_spos
      3  146c		       48		      pha
      4  146d		       ad c5 4a 	      lda	_spos+1
      5  1470		       48		      pha
      6  1471				  -	      ELSE
      7  1471				  -	      lda	_spos
      8  1471				  -	      ldy	_spos+1
      9  1471					      ENDIF
      0  1471					      memshift
      1  1471					      IF	!FPULL
      2  1471		       68		      pla
      3  1472		       85 fc		      sta	R1
      4  1474		       68		      pla
      5  1475		       85 fb		      sta	R0
      6  1477				  -	      ELSE
      7  1477				  -	      sta	R0
      8  1477				  -	      sty	R1
      9  1477					      ENDIF
     10  1477		       68		      pla
     11  1478		       85 fe		      sta	R3
     12  147a		       68		      pla
     13  147b		       85 fd		      sta	R2
     14  147d		       68		      pla
     15  147e		       85 40		      sta	R5
     16  1480		       68		      pla
     17  1481		       85 3f		      sta	R4
     18  1483		       20 1a 0b 	      jsr	mem_memshift
      0  1486					      pbyte	#32
      1  1486		       a9 20		      lda	#32
      2  1488					      IF	!FPUSH
      3  1488		       48		      pha
      4  1489					      ENDIF
   4015  1489				   FPUSH      SET	1
      0  1489					      pwvar	_spos
      1  1489				  -	      IF	!FPUSH
      2  1489				  -	      lda	_spos
      3  1489				  -	      pha
      4  1489				  -	      lda	_spos+1
      5  1489				  -	      pha
      6  1489					      ELSE
      7  1489		       ad c4 4a 	      lda	_spos
      8  148c		       ac c5 4a 	      ldy	_spos+1
      9  148f					      ENDIF
   4017  148f				   FPULL      SET	1
   4018  148f				   FPUSH      SET	0
      0  148f					      pokeb
      1  148f				  -	      IF	!FPULL
      2  148f				  -	      pla
      3  148f				  -	      sta	.selfmod_code+2
      4  148f				  -	      pla
      5  148f				  -	      sta	.selfmod_code+1
      6  148f					      ELSE
      7  148f		       8d 97 14 	      sta	.selfmod_code+1
      8  1492		       8c 98 14 	      sty	.selfmod_code+2
      9  1495					      ENDIF
     10  1495		       68		      pla
     11  1496				   .selfmod_code
     12  1496		       8d 00 00 	      sta.w	$0000
      0  1499					      incw	_spos
      1  1499		       ee c4 4a 	      inc	_spos
      2  149c		       d0 03		      bne	.skip
      3  149e		       ee c5 4a 	      inc	_spos+1
      4  14a1				   .skip
   4021  14a1		       60		      rts
   4022  14a2				   _Prshift_enemies_end
   4023  14a2		       4c 26 15 	      jmp	_Pdshift_enemies_end
   4024  14a5
   4025  14a5
   4026  14a5
   4027  14a5
   4028  14a5
   4029  14a5
   4030  14a5
   4031  14a5				   _Pdshift_enemies
   4032  14a5				   FPULL      SET	0
      0  14a5					      pwvar	_enemy_map_length
      1  14a5					      IF	!FPUSH
      2  14a5		       ad c2 4a 	      lda	_enemy_map_length
      3  14a8		       48		      pha
      4  14a9		       ad c3 4a 	      lda	_enemy_map_length+1
      5  14ac		       48		      pha
      6  14ad				  -	      ELSE
      7  14ad				  -	      lda	_enemy_map_length
      8  14ad				  -	      ldy	_enemy_map_length+1
      9  14ad					      ENDIF
      0  14ad					      opt_pwvar_pword_add	_spos, #40
      1  14ad
      2  14ad
      3  14ad
      4  14ad		       ad c4 4a 	      lda	_spos
      5  14b0		       18		      clc
      6  14b1		       69 28		      adc	<#40
      7  14b3					      IF	!FPUSH
      8  14b3		       48		      pha
      9  14b4				  -	      ELSE
     10  14b4				  -	      tax
     11  14b4					      ENDIF
     12  14b4		       ad c5 4a 	      lda	_spos+1
     13  14b7		       69 00		      adc	>#40
     14  14b9					      IF	!FPUSH
     15  14b9		       48		      pha
     16  14ba				  -	      ELSE
     17  14ba				  -	      tay
     18  14ba				  -	      txa
     19  14ba					      ENDIF
      0  14ba					      pwvar	_spos
      1  14ba					      IF	!FPUSH
      2  14ba		       ad c4 4a 	      lda	_spos
      3  14bd		       48		      pha
      4  14be		       ad c5 4a 	      lda	_spos+1
      5  14c1		       48		      pha
      6  14c2				  -	      ELSE
      7  14c2				  -	      lda	_spos
      8  14c2				  -	      ldy	_spos+1
      9  14c2					      ENDIF
      0  14c2					      memshift
      1  14c2					      IF	!FPULL
      2  14c2		       68		      pla
      3  14c3		       85 fc		      sta	R1
      4  14c5		       68		      pla
      5  14c6		       85 fb		      sta	R0
      6  14c8				  -	      ELSE
      7  14c8				  -	      sta	R0
      8  14c8				  -	      sty	R1
      9  14c8					      ENDIF
     10  14c8		       68		      pla
     11  14c9		       85 fe		      sta	R3
     12  14cb		       68		      pla
     13  14cc		       85 fd		      sta	R2
     14  14ce		       68		      pla
     15  14cf		       85 40		      sta	R5
     16  14d1		       68		      pla
     17  14d2		       85 3f		      sta	R4
     18  14d4		       20 1a 0b 	      jsr	mem_memshift
      0  14d7					      pbyte	#32
      1  14d7		       a9 20		      lda	#32
      2  14d9					      IF	!FPUSH
      3  14d9		       48		      pha
      4  14da					      ENDIF
      0  14da					      pbyte	#24
      1  14da		       a9 18		      lda	#24
      2  14dc					      IF	!FPUSH
      3  14dc		       48		      pha
      4  14dd					      ENDIF
      0  14dd					      btow
      1  14dd		       a9 00		      lda	#$00
      2  14df		       48		      pha
      0  14e0					      pwvar	_spos
      1  14e0					      IF	!FPUSH
      2  14e0		       ad c4 4a 	      lda	_spos
      3  14e3		       48		      pha
      4  14e4		       ad c5 4a 	      lda	_spos+1
      5  14e7		       48		      pha
      6  14e8				  -	      ELSE
      7  14e8				  -	      lda	_spos
      8  14e8				  -	      ldy	_spos+1
      9  14e8					      ENDIF
      0  14e8					      memset
      1  14e8					      IF	!FPULL
      2  14e8		       68		      pla
      3  14e9		       85 fc		      sta	R1
      4  14eb		       68		      pla
      5  14ec		       85 fb		      sta	R0
      6  14ee				  -	      ELSE
      7  14ee				  -	      sta	R0
      8  14ee				  -	      sty	R1
      9  14ee					      ENDIF
     10  14ee		       68		      pla
     11  14ef		       85 fe		      sta	R3
     12  14f1		       68		      pla
     13  14f2		       85 fd		      sta	R2
     14  14f4		       68		      pla
     15  14f5		       20 de 0a 	      jsr	mem_memset
      0  14f8					      incb	_bottom_row
      1  14f8		       ee b1 4a 	      inc	_bottom_row
   4043  14f8				   FPUSH      SET	1
      0  14fb					      opt_pwvar_pword_add	_spos, #40
      1  14fb
      2  14fb
      3  14fb
      4  14fb		       ad c4 4a 	      lda	_spos
      5  14fe		       18		      clc
      6  14ff		       69 28		      adc	<#40
      7  1501				  -	      IF	!FPUSH
      8  1501				  -	      pha
      9  1501					      ELSE
     10  1501		       aa		      tax
     11  1502					      ENDIF
     12  1502		       ad c5 4a 	      lda	_spos+1
     13  1505		       69 00		      adc	>#40
     14  1507				  -	      IF	!FPUSH
     15  1507				  -	      pha
     16  1507					      ELSE
     17  1507		       a8		      tay
     18  1508		       8a		      txa
     19  1509					      ENDIF
   4045  1509				   FPULL      SET	1
   4046  1509				   FPUSH      SET	0
      0  1509					      plw2var	_spos
      1  1509				  -	      IF	!FPULL
      2  1509				  -	      pla
      3  1509				  -	      sta	_spos+1
      4  1509				  -	      pla
      5  1509				  -	      sta	_spos
      6  1509					      ELSE
      7  1509		       8d c4 4a 	      sta	_spos
      8  150c		       8c c5 4a 	      sty	_spos+1
      9  150f					      ENDIF
   4048  150f				   FPULL      SET	0
   4049  150f				   FPUSH      SET	1
      0  150f					      pbyte_pbyte_cmpbeq	_bottom_row, #19
      1  150f
      2  150f
      3  150f
      4  150f
      5  150f
      6  150f		       ad b1 4a 	      lda	_bottom_row
      7  1512		       c9 13		      cmp	#19
      8  1514		       f0 05		      beq	.true
      0  1516					      pzero
      1  1516		       a9 00		      lda	#$00
      2  1518				  -	      IF	!FPUSH
      3  1518				  -	      pha
      4  1518					      ENDIF
     10  1518				  -	      IF	!FPUSH
     11  1518				  -	      jmp	*+6
     12  1518					      ELSE
     13  1518		       4c 1d 15 	      jmp	*+5
     14  151b					      ENDIF
     15  151b				   .true
      0  151b					      pone
      1  151b		       a9 01		      lda	#$01
      2  151d				  -	      IF	!FPUSH
      3  151d				  -	      pha
      4  151d					      ENDIF
   4051  151d				   FPULL      SET	1
   4052  151d				   FPUSH      SET	0
      0  151d					      cond_stmt	_EI_65536, _EL_65536
      1  151d				  -	      IF	!FPULL
      2  151d				  -	      pla
      3  151d					      ENDIF
      4  151d		       d0 03		      bne	*+5
      5  151f				  -	      IFCONST	_EL_65536
      6  151f				  -	      jmp	_EL_65536
      7  151f					      ELSE
      8  151f		       4c 25 15 	      jmp	_EI_65536
      9  1522					      ENDIF
   4054  1522		       20 27 10 	      jsr	_Pruin_shields
   4055  1525
   4056  1525
   4057  1525
   4058  1525
   4059  1525				   _EI_65536
   4060  1525		       60		      rts
   4061  1526
   4062  1526
   4063  1526
   4064  1526
   4065  1526
   4066  1526
   4067  1526
   4068  1526				   _Pdshift_enemies_end
   4069  1526		       4c 6e 15 	      jmp	_Plshift_enemies_end
   4070  1529
   4071  1529
   4072  1529
   4073  1529
   4074  1529
   4075  1529
   4076  1529
   4077  1529				   _Plshift_enemies
   4078  1529				   FPULL      SET	0
      0  1529					      opt_pwvar_pword_add	_enemy_map_length, #2
      1  1529
      2  1529
      3  1529
      4  1529		       ad c2 4a 	      lda	_enemy_map_length
      5  152c		       18		      clc
      6  152d		       69 02		      adc	<#2
      7  152f					      IF	!FPUSH
      8  152f		       48		      pha
      9  1530				  -	      ELSE
     10  1530				  -	      tax
     11  1530					      ENDIF
     12  1530		       ad c3 4a 	      lda	_enemy_map_length+1
     13  1533		       69 00		      adc	>#2
     14  1535					      IF	!FPUSH
     15  1535		       48		      pha
     16  1536				  -	      ELSE
     17  1536				  -	      tay
     18  1536				  -	      txa
     19  1536					      ENDIF
      0  1536					      opt_pwvar_pword_sub	_spos, #1
      1  1536
      2  1536
      3  1536
      4  1536		       ad c4 4a 	      lda	_spos
      5  1539		       38		      sec
      6  153a		       e9 01		      sbc	<#1
      7  153c					      IF	!FPUSH
      8  153c		       48		      pha
      9  153d				  -	      ELSE
     10  153d				  -	      tax
     11  153d					      ENDIF
     12  153d		       ad c5 4a 	      lda	_spos+1
     13  1540		       e9 00		      sbc	>#1
     14  1542					      IF	!FPUSH
     15  1542		       48		      pha
     16  1543				  -	      ELSE
     17  1543				  -	      tay
     18  1543				  -	      txa
     19  1543					      ENDIF
      0  1543					      pwvar	_spos
      1  1543					      IF	!FPUSH
      2  1543		       ad c4 4a 	      lda	_spos
      3  1546		       48		      pha
      4  1547		       ad c5 4a 	      lda	_spos+1
      5  154a		       48		      pha
      6  154b				  -	      ELSE
      7  154b				  -	      lda	_spos
      8  154b				  -	      ldy	_spos+1
      9  154b					      ENDIF
      0  154b					      memcpy
      1  154b					      IF	!FPULL
      2  154b		       68		      pla
      3  154c		       85 fc		      sta	R1
      4  154e		       68		      pla
      5  154f		       85 fb		      sta	R0
      6  1551				  -	      ELSE
      7  1551				  -	      sta	R0
      8  1551				  -	      sty	R1
      9  1551					      ENDIF
     10  1551		       68		      pla
     11  1552		       85 fe		      sta	R3
     12  1554		       68		      pla
     13  1555		       85 fd		      sta	R2
     14  1557		       68		      pla
     15  1558		       85 40		      sta	R5
     16  155a		       68		      pla
     17  155b		       85 3f		      sta	R4
     18  155d		       20 f9 0a 	      jsr	mem_memcpy
      0  1560					      decw	_spos
      1  1560		       ce c4 4a 	      dec	_spos
      2  1563		       a9 ff		      lda	#$ff
      3  1565		       cd c4 4a 	      cmp	_spos
      4  1568		       d0 03		      bne	.skip
      5  156a		       ce c5 4a 	      dec	_spos+1
      6  156d				   .skip
   4084  156d		       60		      rts
   4085  156e				   _Plshift_enemies_end
   4086  156e		       4c 72 16 	      jmp	_Pinit_charset_end
   4087  1571
   4088  1571
   4089  1571
   4090  1571
   4091  1571
   4092  1571
   4093  1571
   4094  1571				   _Pinit_charset
   4095  1571				   FPUSH      SET	1
      0  1571					      pbvar	_init_charset.animphase
      0  1571					      pbyte	_init_charset.animphase
      1  1571		       ad d6 4a 	      lda	_init_charset.animphase
      2  1574				  -	      IF	!FPUSH
      3  1574				  -	      pha
      4  1574					      ENDIF
   4097  1574				   FPULL      SET	1
   4098  1574				   FPUSH      SET	0
      0  1574					      ongoto	_On_LB1, _On_HB1
      1  1574				  -	      IF	!FPULL
      2  1574				  -	      pla
      3  1574					      ENDIF
      4  1574		       aa		      tax
      5  1575		       bd d6 49 	      lda.wx	_On_LB1
      6  1578		       8d 82 15 	      sta	.selfmod_code+1
      7  157b		       bd d8 49 	      lda.wx	_On_HB1
      8  157e		       8d 83 15 	      sta	.selfmod_code+2
      9  1581				   .selfmod_code
     10  1581		       4c 00 00 	      jmp	$0000
   4100  1584		       60		      rts
   4101  1585				   _Linit_charset.init_1
   4102  1585				   FPULL      SET	0
      0  1585					      pbyte	#16
      1  1585		       a9 10		      lda	#16
      2  1587					      IF	!FPUSH
      3  1587		       48		      pha
      4  1588					      ENDIF
      0  1588					      btow
      1  1588		       a9 00		      lda	#$00
      2  158a		       48		      pha
      0  158b					      pword	#8832
      1  158b					      IF	!FPUSH
      2  158b		       a9 80		      lda	#<#8832
      3  158d		       48		      pha
      4  158e		       a9 22		      lda	#>#8832
      5  1590		       48		      pha
      6  1591				  -	      ELSE
      7  1591				  -	      lda	#<#8832
      8  1591				  -	      ldy	#>#8832
      9  1591					      ENDIF
      0  1591					      pword	#8704
      1  1591					      IF	!FPUSH
      2  1591		       a9 00		      lda	#<#8704
      3  1593		       48		      pha
      4  1594		       a9 22		      lda	#>#8704
      5  1596		       48		      pha
      6  1597				  -	      ELSE
      7  1597				  -	      lda	#<#8704
      8  1597				  -	      ldy	#>#8704
      9  1597					      ENDIF
      0  1597					      memcpy
      1  1597					      IF	!FPULL
      2  1597		       68		      pla
      3  1598		       85 fc		      sta	R1
      4  159a		       68		      pla
      5  159b		       85 fb		      sta	R0
      6  159d				  -	      ELSE
      7  159d				  -	      sta	R0
      8  159d				  -	      sty	R1
      9  159d					      ENDIF
     10  159d		       68		      pla
     11  159e		       85 fe		      sta	R3
     12  15a0		       68		      pla
     13  15a1		       85 fd		      sta	R2
     14  15a3		       68		      pla
     15  15a4		       85 40		      sta	R5
     16  15a6		       68		      pla
     17  15a7		       85 3f		      sta	R4
     18  15a9		       20 f9 0a 	      jsr	mem_memcpy
      0  15ac					      pbyte	#16
      1  15ac		       a9 10		      lda	#16
      2  15ae					      IF	!FPUSH
      3  15ae		       48		      pha
      4  15af					      ENDIF
      0  15af					      btow
      1  15af		       a9 00		      lda	#$00
      2  15b1		       48		      pha
      0  15b2					      pword	#8848
      1  15b2					      IF	!FPUSH
      2  15b2		       a9 90		      lda	#<#8848
      3  15b4		       48		      pha
      4  15b5		       a9 22		      lda	#>#8848
      5  15b7		       48		      pha
      6  15b8				  -	      ELSE
      7  15b8				  -	      lda	#<#8848
      8  15b8				  -	      ldy	#>#8848
      9  15b8					      ENDIF
      0  15b8					      pword	#8736
      1  15b8					      IF	!FPUSH
      2  15b8		       a9 20		      lda	#<#8736
      3  15ba		       48		      pha
      4  15bb		       a9 22		      lda	#>#8736
      5  15bd		       48		      pha
      6  15be				  -	      ELSE
      7  15be				  -	      lda	#<#8736
      8  15be				  -	      ldy	#>#8736
      9  15be					      ENDIF
      0  15be					      memcpy
      1  15be					      IF	!FPULL
      2  15be		       68		      pla
      3  15bf		       85 fc		      sta	R1
      4  15c1		       68		      pla
      5  15c2		       85 fb		      sta	R0
      6  15c4				  -	      ELSE
      7  15c4				  -	      sta	R0
      8  15c4				  -	      sty	R1
      9  15c4					      ENDIF
     10  15c4		       68		      pla
     11  15c5		       85 fe		      sta	R3
     12  15c7		       68		      pla
     13  15c8		       85 fd		      sta	R2
     14  15ca		       68		      pla
     15  15cb		       85 40		      sta	R5
     16  15cd		       68		      pla
     17  15ce		       85 3f		      sta	R4
     18  15d0		       20 f9 0a 	      jsr	mem_memcpy
      0  15d3					      pbyte	#16
      1  15d3		       a9 10		      lda	#16
      2  15d5					      IF	!FPUSH
      3  15d5		       48		      pha
      4  15d6					      ENDIF
      0  15d6					      btow
      1  15d6		       a9 00		      lda	#$00
      2  15d8		       48		      pha
      0  15d9					      pword	#8864
      1  15d9					      IF	!FPUSH
      2  15d9		       a9 a0		      lda	#<#8864
      3  15db		       48		      pha
      4  15dc		       a9 22		      lda	#>#8864
      5  15de		       48		      pha
      6  15df				  -	      ELSE
      7  15df				  -	      lda	#<#8864
      8  15df				  -	      ldy	#>#8864
      9  15df					      ENDIF
      0  15df					      pword	#8768
      1  15df					      IF	!FPUSH
      2  15df		       a9 40		      lda	#<#8768
      3  15e1		       48		      pha
      4  15e2		       a9 22		      lda	#>#8768
      5  15e4		       48		      pha
      6  15e5				  -	      ELSE
      7  15e5				  -	      lda	#<#8768
      8  15e5				  -	      ldy	#>#8768
      9  15e5					      ENDIF
      0  15e5					      memcpy
      1  15e5					      IF	!FPULL
      2  15e5		       68		      pla
      3  15e6		       85 fc		      sta	R1
      4  15e8		       68		      pla
      5  15e9		       85 fb		      sta	R0
      6  15eb				  -	      ELSE
      7  15eb				  -	      sta	R0
      8  15eb				  -	      sty	R1
      9  15eb					      ENDIF
     10  15eb		       68		      pla
     11  15ec		       85 fe		      sta	R3
     12  15ee		       68		      pla
     13  15ef		       85 fd		      sta	R2
     14  15f1		       68		      pla
     15  15f2		       85 40		      sta	R5
     16  15f4		       68		      pla
     17  15f5		       85 3f		      sta	R4
     18  15f7		       20 f9 0a 	      jsr	mem_memcpy
   4118  15fa		       60		      rts
   4119  15fb				   _Linit_charset.init_2
      0  15fb					      pbyte	#16
      1  15fb		       a9 10		      lda	#16
      2  15fd					      IF	!FPUSH
      3  15fd		       48		      pha
      4  15fe					      ENDIF
      0  15fe					      btow
      1  15fe		       a9 00		      lda	#$00
      2  1600		       48		      pha
      0  1601					      pword	#8832
      1  1601					      IF	!FPUSH
      2  1601		       a9 80		      lda	#<#8832
      3  1603		       48		      pha
      4  1604		       a9 22		      lda	#>#8832
      5  1606		       48		      pha
      6  1607				  -	      ELSE
      7  1607				  -	      lda	#<#8832
      8  1607				  -	      ldy	#>#8832
      9  1607					      ENDIF
      0  1607					      pword	#8720
      1  1607					      IF	!FPUSH
      2  1607		       a9 10		      lda	#<#8720
      3  1609		       48		      pha
      4  160a		       a9 22		      lda	#>#8720
      5  160c		       48		      pha
      6  160d				  -	      ELSE
      7  160d				  -	      lda	#<#8720
      8  160d				  -	      ldy	#>#8720
      9  160d					      ENDIF
      0  160d					      memcpy
      1  160d					      IF	!FPULL
      2  160d		       68		      pla
      3  160e		       85 fc		      sta	R1
      4  1610		       68		      pla
      5  1611		       85 fb		      sta	R0
      6  1613				  -	      ELSE
      7  1613				  -	      sta	R0
      8  1613				  -	      sty	R1
      9  1613					      ENDIF
     10  1613		       68		      pla
     11  1614		       85 fe		      sta	R3
     12  1616		       68		      pla
     13  1617		       85 fd		      sta	R2
     14  1619		       68		      pla
     15  161a		       85 40		      sta	R5
     16  161c		       68		      pla
     17  161d		       85 3f		      sta	R4
     18  161f		       20 f9 0a 	      jsr	mem_memcpy
      0  1622					      pbyte	#16
      1  1622		       a9 10		      lda	#16
      2  1624					      IF	!FPUSH
      3  1624		       48		      pha
      4  1625					      ENDIF
      0  1625					      btow
      1  1625		       a9 00		      lda	#$00
      2  1627		       48		      pha
      0  1628					      pword	#8848
      1  1628					      IF	!FPUSH
      2  1628		       a9 90		      lda	#<#8848
      3  162a		       48		      pha
      4  162b		       a9 22		      lda	#>#8848
      5  162d		       48		      pha
      6  162e				  -	      ELSE
      7  162e				  -	      lda	#<#8848
      8  162e				  -	      ldy	#>#8848
      9  162e					      ENDIF
      0  162e					      pword	#8752
      1  162e					      IF	!FPUSH
      2  162e		       a9 30		      lda	#<#8752
      3  1630		       48		      pha
      4  1631		       a9 22		      lda	#>#8752
      5  1633		       48		      pha
      6  1634				  -	      ELSE
      7  1634				  -	      lda	#<#8752
      8  1634				  -	      ldy	#>#8752
      9  1634					      ENDIF
      0  1634					      memcpy
      1  1634					      IF	!FPULL
      2  1634		       68		      pla
      3  1635		       85 fc		      sta	R1
      4  1637		       68		      pla
      5  1638		       85 fb		      sta	R0
      6  163a				  -	      ELSE
      7  163a				  -	      sta	R0
      8  163a				  -	      sty	R1
      9  163a					      ENDIF
     10  163a		       68		      pla
     11  163b		       85 fe		      sta	R3
     12  163d		       68		      pla
     13  163e		       85 fd		      sta	R2
     14  1640		       68		      pla
     15  1641		       85 40		      sta	R5
     16  1643		       68		      pla
     17  1644		       85 3f		      sta	R4
     18  1646		       20 f9 0a 	      jsr	mem_memcpy
      0  1649					      pbyte	#16
      1  1649		       a9 10		      lda	#16
      2  164b					      IF	!FPUSH
      3  164b		       48		      pha
      4  164c					      ENDIF
      0  164c					      btow
      1  164c		       a9 00		      lda	#$00
      2  164e		       48		      pha
      0  164f					      pword	#8864
      1  164f					      IF	!FPUSH
      2  164f		       a9 a0		      lda	#<#8864
      3  1651		       48		      pha
      4  1652		       a9 22		      lda	#>#8864
      5  1654		       48		      pha
      6  1655				  -	      ELSE
      7  1655				  -	      lda	#<#8864
      8  1655				  -	      ldy	#>#8864
      9  1655					      ENDIF
      0  1655					      pword	#8784
      1  1655					      IF	!FPUSH
      2  1655		       a9 50		      lda	#<#8784
      3  1657		       48		      pha
      4  1658		       a9 22		      lda	#>#8784
      5  165a		       48		      pha
      6  165b				  -	      ELSE
      7  165b				  -	      lda	#<#8784
      8  165b				  -	      ldy	#>#8784
      9  165b					      ENDIF
      0  165b					      memcpy
      1  165b					      IF	!FPULL
      2  165b		       68		      pla
      3  165c		       85 fc		      sta	R1
      4  165e		       68		      pla
      5  165f		       85 fb		      sta	R0
      6  1661				  -	      ELSE
      7  1661				  -	      sta	R0
      8  1661				  -	      sty	R1
      9  1661					      ENDIF
     10  1661		       68		      pla
     11  1662		       85 fe		      sta	R3
     12  1664		       68		      pla
     13  1665		       85 fd		      sta	R2
     14  1667		       68		      pla
     15  1668		       85 40		      sta	R5
     16  166a		       68		      pla
     17  166b		       85 3f		      sta	R4
     18  166d		       20 f9 0a 	      jsr	mem_memcpy
   4135  1670		       60		      rts
   4136  1671		       60		      rts
   4137  1672				   _Pinit_charset_end
   4138  1672		       4c 5e 17 	      jmp	_Pinit_sprites_end
   4139  1675
   4140  1675
   4141  1675
   4142  1675
   4143  1675
   4144  1675
   4145  1675
   4146  1675				   _Pinit_sprites
   4147  1675				   FPUSH      SET	1
      0  1675					      pbyte	#192
      1  1675		       a9 c0		      lda	#192
      2  1677				  -	      IF	!FPUSH
      3  1677				  -	      pha
      4  1677					      ENDIF
   4149  1677				   FPULL      SET	1
   4150  1677				   FPUSH      SET	0
      0  1677					      pokeb_const_addr	#16256
      1  1677
      2  1677
      3  1677
      4  1677		       3f 80	   .ad	      EQU	#16256
      5  1677				  -	      IF	!FPULL
      6  1677				  -	      pla
      7  1677					      ENDIF
      8  1677		       8d 80 3f 	      sta	.ad
   4152  1677				   FPULL      SET	0
   4153  1677				   FPUSH      SET	1
      0  167a					      pbyte	#0
      1  167a		       a9 00		      lda	#0
      2  167c				  -	      IF	!FPUSH
      3  167c				  -	      pha
      4  167c					      ENDIF
   4155  167c				   FPULL      SET	1
   4156  167c				   FPUSH      SET	0
      0  167c					      pokeb_const_addr	#16257
      1  167c
      2  167c
      3  167c
      4  167c		       3f 81	   .ad	      EQU	#16257
      5  167c				  -	      IF	!FPULL
      6  167c				  -	      pla
      7  167c					      ENDIF
      8  167c		       8d 81 3f 	      sta	.ad
   4158  167c				   FPULL      SET	0
   4159  167c				   FPUSH      SET	1
      0  167f					      pbyte	#0
      1  167f		       a9 00		      lda	#0
      2  1681				  -	      IF	!FPUSH
      3  1681				  -	      pha
      4  1681					      ENDIF
   4161  1681				   FPULL      SET	1
   4162  1681				   FPUSH      SET	0
      0  1681					      pokeb_const_addr	#16258
      1  1681
      2  1681
      3  1681
      4  1681		       3f 82	   .ad	      EQU	#16258
      5  1681				  -	      IF	!FPULL
      6  1681				  -	      pla
      7  1681					      ENDIF
      8  1681		       8d 82 3f 	      sta	.ad
   4164  1681				   FPULL      SET	0
   4165  1681				   FPUSH      SET	1
      0  1684					      pbyte	#192
      1  1684		       a9 c0		      lda	#192
      2  1686				  -	      IF	!FPUSH
      3  1686				  -	      pha
      4  1686					      ENDIF
   4167  1686				   FPULL      SET	1
   4168  1686				   FPUSH      SET	0
      0  1686					      pokeb_const_addr	#16259
      1  1686
      2  1686
      3  1686
      4  1686		       3f 83	   .ad	      EQU	#16259
      5  1686				  -	      IF	!FPULL
      6  1686				  -	      pla
      7  1686					      ENDIF
      8  1686		       8d 83 3f 	      sta	.ad
   4170  1686				   FPULL      SET	0
   4171  1686				   FPUSH      SET	1
      0  1689					      pbyte	#0
      1  1689		       a9 00		      lda	#0
      2  168b				  -	      IF	!FPUSH
      3  168b				  -	      pha
      4  168b					      ENDIF
   4173  168b				   FPULL      SET	1
   4174  168b				   FPUSH      SET	0
      0  168b					      pokeb_const_addr	#16260
      1  168b
      2  168b
      3  168b
      4  168b		       3f 84	   .ad	      EQU	#16260
      5  168b				  -	      IF	!FPULL
      6  168b				  -	      pla
      7  168b					      ENDIF
      8  168b		       8d 84 3f 	      sta	.ad
   4176  168b				   FPULL      SET	0
   4177  168b				   FPUSH      SET	1
      0  168e					      pbyte	#0
      1  168e		       a9 00		      lda	#0
      2  1690				  -	      IF	!FPUSH
      3  1690				  -	      pha
      4  1690					      ENDIF
   4179  1690				   FPULL      SET	1
   4180  1690				   FPUSH      SET	0
      0  1690					      pokeb_const_addr	#16261
      1  1690
      2  1690
      3  1690
      4  1690		       3f 85	   .ad	      EQU	#16261
      5  1690				  -	      IF	!FPULL
      6  1690				  -	      pla
      7  1690					      ENDIF
      8  1690		       8d 85 3f 	      sta	.ad
   4182  1690				   FPULL      SET	0
   4183  1690				   FPUSH      SET	1
      0  1693					      pbyte	#192
      1  1693		       a9 c0		      lda	#192
      2  1695				  -	      IF	!FPUSH
      3  1695				  -	      pha
      4  1695					      ENDIF
   4185  1695				   FPULL      SET	1
   4186  1695				   FPUSH      SET	0
      0  1695					      pokeb_const_addr	#16262
      1  1695
      2  1695
      3  1695
      4  1695		       3f 86	   .ad	      EQU	#16262
      5  1695				  -	      IF	!FPULL
      6  1695				  -	      pla
      7  1695					      ENDIF
      8  1695		       8d 86 3f 	      sta	.ad
   4188  1695				   FPULL      SET	0
   4189  1695				   FPUSH      SET	1
      0  1698					      pbyte	#0
      1  1698		       a9 00		      lda	#0
      2  169a				  -	      IF	!FPUSH
      3  169a				  -	      pha
      4  169a					      ENDIF
   4191  169a				   FPULL      SET	1
   4192  169a				   FPUSH      SET	0
      0  169a					      pokeb_const_addr	#16263
      1  169a
      2  169a
      3  169a
      4  169a		       3f 87	   .ad	      EQU	#16263
      5  169a				  -	      IF	!FPULL
      6  169a				  -	      pla
      7  169a					      ENDIF
      8  169a		       8d 87 3f 	      sta	.ad
   4194  169a				   FPULL      SET	0
   4195  169a				   FPUSH      SET	1
      0  169d					      pbyte	#0
      1  169d		       a9 00		      lda	#0
      2  169f				  -	      IF	!FPUSH
      3  169f				  -	      pha
      4  169f					      ENDIF
   4197  169f				   FPULL      SET	1
   4198  169f				   FPUSH      SET	0
      0  169f					      pokeb_const_addr	#16264
      1  169f
      2  169f
      3  169f
      4  169f		       3f 88	   .ad	      EQU	#16264
      5  169f				  -	      IF	!FPULL
      6  169f				  -	      pla
      7  169f					      ENDIF
      8  169f		       8d 88 3f 	      sta	.ad
   4200  169f				   FPULL      SET	0
      0  16a2					      pbyte	#0
      1  16a2		       a9 00		      lda	#0
      2  16a4					      IF	!FPUSH
      3  16a4		       48		      pha
      4  16a5					      ENDIF
      0  16a5					      pbyte	#57
      1  16a5		       a9 39		      lda	#57
      2  16a7					      IF	!FPUSH
      3  16a7		       48		      pha
      4  16a8					      ENDIF
      0  16a8					      btow
      1  16a8		       a9 00		      lda	#$00
      2  16aa		       48		      pha
      0  16ab					      pword	#16265
      1  16ab					      IF	!FPUSH
      2  16ab		       a9 89		      lda	#<#16265
      3  16ad		       48		      pha
      4  16ae		       a9 3f		      lda	#>#16265
      5  16b0		       48		      pha
      6  16b1				  -	      ELSE
      7  16b1				  -	      lda	#<#16265
      8  16b1				  -	      ldy	#>#16265
      9  16b1					      ENDIF
      0  16b1					      memset
      1  16b1					      IF	!FPULL
      2  16b1		       68		      pla
      3  16b2		       85 fc		      sta	R1
      4  16b4		       68		      pla
      5  16b5		       85 fb		      sta	R0
      6  16b7				  -	      ELSE
      7  16b7				  -	      sta	R0
      8  16b7				  -	      sty	R1
      9  16b7					      ENDIF
     10  16b7		       68		      pla
     11  16b8		       85 fe		      sta	R3
     12  16ba		       68		      pla
     13  16bb		       85 fd		      sta	R2
     14  16bd		       68		      pla
     15  16be		       20 de 0a 	      jsr	mem_memset
      0  16c1					      pbyte	#63
      1  16c1		       a9 3f		      lda	#63
      2  16c3					      IF	!FPUSH
      3  16c3		       48		      pha
      4  16c4					      ENDIF
      0  16c4					      btow
      1  16c4		       a9 00		      lda	#$00
      2  16c6		       48		      pha
      0  16c7					      pword	#16320
      1  16c7					      IF	!FPUSH
      2  16c7		       a9 c0		      lda	#<#16320
      3  16c9		       48		      pha
      4  16ca		       a9 3f		      lda	#>#16320
      5  16cc		       48		      pha
      6  16cd				  -	      ELSE
      7  16cd				  -	      lda	#<#16320
      8  16cd				  -	      ldy	#>#16320
      9  16cd					      ENDIF
      0  16cd					      paddr	_ship
      0  16cd					      pword	_ship
      1  16cd					      IF	!FPUSH
      2  16cd		       a9 76		      lda	#<_ship
      3  16cf		       48		      pha
      4  16d0		       a9 47		      lda	#>_ship
      5  16d2		       48		      pha
      6  16d3				  -	      ELSE
      7  16d3				  -	      lda	#<_ship
      8  16d3				  -	      ldy	#>_ship
      9  16d3					      ENDIF
      0  16d3					      memcpy
      1  16d3					      IF	!FPULL
      2  16d3		       68		      pla
      3  16d4		       85 fc		      sta	R1
      4  16d6		       68		      pla
      5  16d7		       85 fb		      sta	R0
      6  16d9				  -	      ELSE
      7  16d9				  -	      sta	R0
      8  16d9				  -	      sty	R1
      9  16d9					      ENDIF
     10  16d9		       68		      pla
     11  16da		       85 fe		      sta	R3
     12  16dc		       68		      pla
     13  16dd		       85 fd		      sta	R2
     14  16df		       68		      pla
     15  16e0		       85 40		      sta	R5
     16  16e2		       68		      pla
     17  16e3		       85 3f		      sta	R4
     18  16e5		       20 f9 0a 	      jsr	mem_memcpy
      0  16e8					      pword	#384
      1  16e8					      IF	!FPUSH
      2  16e8		       a9 80		      lda	#<#384
      3  16ea		       48		      pha
      4  16eb		       a9 01		      lda	#>#384
      5  16ed		       48		      pha
      6  16ee				  -	      ELSE
      7  16ee				  -	      lda	#<#384
      8  16ee				  -	      ldy	#>#384
      9  16ee					      ENDIF
      0  16ee					      pword	#15872
      1  16ee					      IF	!FPUSH
      2  16ee		       a9 00		      lda	#<#15872
      3  16f0		       48		      pha
      4  16f1		       a9 3e		      lda	#>#15872
      5  16f3		       48		      pha
      6  16f4				  -	      ELSE
      7  16f4				  -	      lda	#<#15872
      8  16f4				  -	      ldy	#>#15872
      9  16f4					      ENDIF
      0  16f4					      paddr	_shape_ship_hit
      0  16f4					      pword	_shape_ship_hit
      1  16f4					      IF	!FPUSH
      2  16f4		       a9 b5		      lda	#<_shape_ship_hit
      3  16f6		       48		      pha
      4  16f7		       a9 47		      lda	#>_shape_ship_hit
      5  16f9		       48		      pha
      6  16fa				  -	      ELSE
      7  16fa				  -	      lda	#<_shape_ship_hit
      8  16fa				  -	      ldy	#>_shape_ship_hit
      9  16fa					      ENDIF
      0  16fa					      memcpy
      1  16fa					      IF	!FPULL
      2  16fa		       68		      pla
      3  16fb		       85 fc		      sta	R1
      4  16fd		       68		      pla
      5  16fe		       85 fb		      sta	R0
      6  1700				  -	      ELSE
      7  1700				  -	      sta	R0
      8  1700				  -	      sty	R1
      9  1700					      ENDIF
     10  1700		       68		      pla
     11  1701		       85 fe		      sta	R3
     12  1703		       68		      pla
     13  1704		       85 fd		      sta	R2
     14  1706		       68		      pla
     15  1707		       85 40		      sta	R5
     16  1709		       68		      pla
     17  170a		       85 3f		      sta	R4
     18  170c		       20 f9 0a 	      jsr	mem_memcpy
      0  170f					      pbyte	#63
      1  170f		       a9 3f		      lda	#63
      2  1711					      IF	!FPUSH
      3  1711		       48		      pha
      4  1712					      ENDIF
      0  1712					      btow
      1  1712		       a9 00		      lda	#$00
      2  1714		       48		      pha
      0  1715					      pword	#15744
      1  1715					      IF	!FPUSH
      2  1715		       a9 80		      lda	#<#15744
      3  1717		       48		      pha
      4  1718		       a9 3d		      lda	#>#15744
      5  171a		       48		      pha
      6  171b				  -	      ELSE
      7  171b				  -	      lda	#<#15744
      8  171b				  -	      ldy	#>#15744
      9  171b					      ENDIF
      0  171b					      paddr	_ufo_shape
      0  171b					      pword	_ufo_shape
      1  171b					      IF	!FPUSH
      2  171b		       a9 35		      lda	#<_ufo_shape
      3  171d		       48		      pha
      4  171e		       a9 49		      lda	#>_ufo_shape
      5  1720		       48		      pha
      6  1721				  -	      ELSE
      7  1721				  -	      lda	#<_ufo_shape
      8  1721				  -	      ldy	#>_ufo_shape
      9  1721					      ENDIF
      0  1721					      memcpy
      1  1721					      IF	!FPULL
      2  1721		       68		      pla
      3  1722		       85 fc		      sta	R1
      4  1724		       68		      pla
      5  1725		       85 fb		      sta	R0
      6  1727				  -	      ELSE
      7  1727				  -	      sta	R0
      8  1727				  -	      sty	R1
      9  1727					      ENDIF
     10  1727		       68		      pla
     11  1728		       85 fe		      sta	R3
     12  172a		       68		      pla
     13  172b		       85 fd		      sta	R2
     14  172d		       68		      pla
     15  172e		       85 40		      sta	R5
     16  1730		       68		      pla
     17  1731		       85 3f		      sta	R4
     18  1733		       20 f9 0a 	      jsr	mem_memcpy
      0  1736					      pbyte	#63
      1  1736		       a9 3f		      lda	#63
      2  1738					      IF	!FPUSH
      3  1738		       48		      pha
      4  1739					      ENDIF
      0  1739					      btow
      1  1739		       a9 00		      lda	#$00
      2  173b		       48		      pha
      0  173c					      pword	#15808
      1  173c					      IF	!FPUSH
      2  173c		       a9 c0		      lda	#<#15808
      3  173e		       48		      pha
      4  173f		       a9 3d		      lda	#>#15808
      5  1741		       48		      pha
      6  1742				  -	      ELSE
      7  1742				  -	      lda	#<#15808
      8  1742				  -	      ldy	#>#15808
      9  1742					      ENDIF
      0  1742					      paddr	_ufo_shape_hit
      0  1742					      pword	_ufo_shape_hit
      1  1742					      IF	!FPUSH
      2  1742		       a9 75		      lda	#<_ufo_shape_hit
      3  1744		       48		      pha
      4  1745		       a9 49		      lda	#>_ufo_shape_hit
      5  1747		       48		      pha
      6  1748				  -	      ELSE
      7  1748				  -	      lda	#<_ufo_shape_hit
      8  1748				  -	      ldy	#>_ufo_shape_hit
      9  1748					      ENDIF
      0  1748					      memcpy
      1  1748					      IF	!FPULL
      2  1748		       68		      pla
      3  1749		       85 fc		      sta	R1
      4  174b		       68		      pla
      5  174c		       85 fb		      sta	R0
      6  174e				  -	      ELSE
      7  174e				  -	      sta	R0
      8  174e				  -	      sty	R1
      9  174e					      ENDIF
     10  174e		       68		      pla
     11  174f		       85 fe		      sta	R3
     12  1751		       68		      pla
     13  1752		       85 fd		      sta	R2
     14  1754		       68		      pla
     15  1755		       85 40		      sta	R5
     16  1757		       68		      pla
     17  1758		       85 3f		      sta	R4
     18  175a		       20 f9 0a 	      jsr	mem_memcpy
   4225  175d		       60		      rts
   4226  175e				   _Pinit_sprites_end
   4227  175e		       4c 1c 18 	      jmp	_Pmove_enemies_end
   4228  1761
   4229  1761
   4230  1761
   4231  1761
   4232  1761
   4233  1761
   4234  1761
   4235  1761				   _Pmove_enemies
      0  1761					      pwvar	_last_killed_enemy
      1  1761					      IF	!FPUSH
      2  1761		       ad b9 4a 	      lda	_last_killed_enemy
      3  1764		       48		      pha
      4  1765		       ad ba 4a 	      lda	_last_killed_enemy+1
      5  1768		       48		      pha
      6  1769				  -	      ELSE
      7  1769				  -	      lda	_last_killed_enemy
      8  1769				  -	      ldy	_last_killed_enemy+1
      9  1769					      ENDIF
      0  1769					      pbyte	#0
      1  1769		       a9 00		      lda	#0
      2  176b					      IF	!FPUSH
      3  176b		       48		      pha
      4  176c					      ENDIF
      0  176c					      btow
      1  176c		       a9 00		      lda	#$00
      2  176e		       48		      pha
   4239  176e				   FPUSH      SET	1
      0  176f					      cmpweq
      1  176f					      IF	!FPULL
      2  176f		       68		      pla
      3  1770		       85 fd		      sta	R2
      4  1772		       68		      pla
      5  1773		       85 fc		      sta	R1
      6  1775				  -	      ELSE
      7  1775				  -	      sta	R1
      8  1775				  -	      sty	R2
      9  1775					      ENDIF
     10  1775		       68		      pla
     11  1776		       c5 fd		      cmp	R2
     12  1778		       d0 0a		      bne	.phf
     13  177a		       68		      pla
     14  177b		       c5 fc		      cmp	R1
     15  177d		       d0 06		      bne	.phf+1
      0  177f					      pone
      1  177f		       a9 01		      lda	#$01
      2  1781				  -	      IF	!FPUSH
      3  1781				  -	      pha
      4  1781					      ENDIF
     17  1781				  -	      IF	!FPUSH
     18  1781				  -	      jmp	*+7
     19  1781					      ELSE
     20  1781		       4c 87 17 	      jmp	*+6
     21  1784					      ENDIF
     22  1784				   .phf
     23  1784		       68		      pla
      0  1785					      pzero
      1  1785		       a9 00		      lda	#$00
      2  1787				  -	      IF	!FPUSH
      3  1787				  -	      pha
      4  1787					      ENDIF
   4241  1787				   FPULL      SET	1
   4242  1787				   FPUSH      SET	0
      0  1787					      cond_stmt	_EI_65537, _EL_65537
      1  1787				  -	      IF	!FPULL
      2  1787				  -	      pla
      3  1787					      ENDIF
      4  1787		       d0 03		      bne	*+5
      5  1789				  -	      IFCONST	_EL_65537
      6  1789				  -	      jmp	_EL_65537
      7  1789					      ELSE
      8  1789		       4c 8f 17 	      jmp	_EI_65537
      9  178c					      ENDIF
   4244  178c		       4c b6 17 	      jmp	_Lmove_enemies.skip_cleanup
   4245  178f				   _EI_65537
   4246  178f
   4247  178f
   4248  178f
   4249  178f
   4250  178f
   4251  178f
   4252  178f
   4253  178f				   _Lmove_enemies.cleanup
   4254  178f				   FPULL      SET	0
      0  178f					      pword	#8224
      1  178f					      IF	!FPUSH
      2  178f		       a9 20		      lda	#<#8224
      3  1791		       48		      pha
      4  1792		       a9 20		      lda	#>#8224
      5  1794		       48		      pha
      6  1795				  -	      ELSE
      7  1795				  -	      lda	#<#8224
      8  1795				  -	      ldy	#>#8224
      9  1795					      ENDIF
   4256  1795				   FPUSH      SET	1
      0  1795					      pwvar	_last_killed_enemy
      1  1795				  -	      IF	!FPUSH
      2  1795				  -	      lda	_last_killed_enemy
      3  1795				  -	      pha
      4  1795				  -	      lda	_last_killed_enemy+1
      5  1795				  -	      pha
      6  1795					      ELSE
      7  1795		       ad b9 4a 	      lda	_last_killed_enemy
      8  1798		       ac ba 4a 	      ldy	_last_killed_enemy+1
      9  179b					      ENDIF
   4258  179b				   FPULL      SET	1
   4259  179b				   FPUSH      SET	0
      0  179b					      doke
      1  179b				  -	      IF	!FPULL
      2  179b				  -	      pla
      3  179b				  -	      sta	R1
      4  179b				  -	      pla
      5  179b				  -	      sta	R0
      6  179b					      ELSE
      7  179b		       85 fb		      sta	R0
      8  179d		       84 fc		      sty	R1
      9  179f					      ENDIF
     10  179f		       a0 01		      ldy	#$01
     11  17a1		       68		      pla
     12  17a2		       91 fb		      sta	(R0),y
     13  17a4		       68		      pla
     14  17a5		       88		      dey
     15  17a6		       91 fb		      sta	(R0),y
   4261  17a6				   FPULL      SET	0
      0  17a8					      pbyte	#0
      1  17a8		       a9 00		      lda	#0
      2  17aa					      IF	!FPUSH
      3  17aa		       48		      pha
      4  17ab					      ENDIF
      0  17ab					      btow
      1  17ab		       a9 00		      lda	#$00
      2  17ad		       48		      pha
      0  17ae					      plw2var	_last_killed_enemy
      1  17ae					      IF	!FPULL
      2  17ae		       68		      pla
      3  17af		       8d ba 4a 	      sta	_last_killed_enemy+1
      4  17b2		       68		      pla
      5  17b3		       8d b9 4a 	      sta	_last_killed_enemy
      6  17b6				  -	      ELSE
      7  17b6				  -	      sta	_last_killed_enemy
      8  17b6				  -	      sty	_last_killed_enemy+1
      9  17b6					      ENDIF
   4265  17b6				   _Lmove_enemies.skip_cleanup
   4266  17b6				   FPUSH      SET	1
      0  17b6					      pbvar	_enemy_dir
      0  17b6					      pbyte	_enemy_dir
      1  17b6		       ad b2 4a 	      lda	_enemy_dir
      2  17b9				  -	      IF	!FPUSH
      3  17b9				  -	      pha
      4  17b9					      ENDIF
   4268  17b9				   FPULL      SET	1
   4269  17b9				   FPUSH      SET	0
      0  17b9					      ongoto	_On_LB2, _On_HB2
      1  17b9				  -	      IF	!FPULL
      2  17b9				  -	      pla
      3  17b9					      ENDIF
      4  17b9		       aa		      tax
      5  17ba		       bd da 49 	      lda.wx	_On_LB2
      6  17bd		       8d c7 17 	      sta	.selfmod_code+1
      7  17c0		       bd dc 49 	      lda.wx	_On_HB2
      8  17c3		       8d c8 17 	      sta	.selfmod_code+2
      9  17c6				   .selfmod_code
     10  17c6		       4c 00 00 	      jmp	$0000
   4271  17c9				   _Lmove_enemies.move_right
      0  17c9					      incb	_scroll
      1  17c9		       ee ae 4a 	      inc	_scroll
      0  17cc					      pbyte_pbyte_cmpbeq_cond	_scroll, #8, _EI_1, _EL_1
      1  17cc
      2  17cc
      3  17cc		       ad ae 4a 	      lda	_scroll
      4  17cf		       c9 08		      cmp	#8
      5  17d1		       f0 03		      beq	*+5
      6  17d3				  -	      IFCONST	_EL_1
      7  17d3				  -	      jmp	_EL_1
      8  17d3					      ELSE
      9  17d3		       4c e1 17 	      jmp	_EI_1
     10  17d6					      ENDIF
   4274  17d6				   FPULL      SET	0
   4275  17d6				   FPUSH      SET	1
      0  17d6					      pbyte	#0
      1  17d6		       a9 00		      lda	#0
      2  17d8				  -	      IF	!FPUSH
      3  17d8				  -	      pha
      4  17d8					      ENDIF
   4277  17d8				   FPULL      SET	1
   4278  17d8				   FPUSH      SET	0
      0  17d8					      plb2var	_scroll
      1  17d8				  -	      IF	!FPULL
      2  17d8				  -	      pla
      3  17d8					      ENDIF
      4  17d8		       8d ae 4a 	      sta	_scroll
      0  17db					      incb	_enemy_posx
      1  17db		       ee af 4a 	      inc	_enemy_posx
   4281  17de		       20 54 14 	      jsr	_Prshift_enemies
   4282  17e1				   _EI_1
   4283  17e1				   FPULL      SET	0
   4284  17e1				   FPUSH      SET	1
      0  17e1					      opt_pbyte_pbyte_and	_scroll, #1
      1  17e1
      2  17e1
      3  17e1
      4  17e1
      5  17e1
      6  17e1		       ad ae 4a 	      lda	_scroll
      7  17e4		       29 01		      and	#1
      8  17e6				  -	      IF	!FPUSH
      9  17e6				  -	      pha
     10  17e6					      ENDIF
   4286  17e6				   FPULL      SET	1
   4287  17e6				   FPUSH      SET	0
      0  17e6					      plb2var	_init_charset.animphase
      1  17e6				  -	      IF	!FPULL
      2  17e6				  -	      pla
      3  17e6					      ENDIF
      4  17e6		       8d d6 4a 	      sta	_init_charset.animphase
   4289  17e9		       20 71 15 	      jsr	_Pinit_charset
   4290  17e9				   FPULL      SET	0
   4291  17e9				   FPUSH      SET	1
      0  17ec					      pbyte	#0
      1  17ec		       a9 00		      lda	#0
      2  17ee				  -	      IF	!FPUSH
      3  17ee				  -	      pha
      4  17ee					      ENDIF
   4293  17ee				   FPULL      SET	1
   4294  17ee				   FPUSH      SET	0
      0  17ee					      plb2var	_framecount
      1  17ee				  -	      IF	!FPULL
      2  17ee				  -	      pla
      3  17ee					      ENDIF
      4  17ee		       8d d7 4a 	      sta	_framecount
   4296  17f1		       60		      rts
   4297  17f2				   _Lmove_enemies.move_left
      0  17f2					      decb	_scroll
      1  17f2		       ce ae 4a 	      dec	_scroll
      0  17f5					      pbyte_pbyte_cmpbeq_cond	_scroll, #255, _EI_2, _EL_2
      1  17f5
      2  17f5
      3  17f5		       ad ae 4a 	      lda	_scroll
      4  17f8		       c9 ff		      cmp	#255
      5  17fa		       f0 03		      beq	*+5
      6  17fc				  -	      IFCONST	_EL_2
      7  17fc				  -	      jmp	_EL_2
      8  17fc					      ELSE
      9  17fc		       4c 0a 18 	      jmp	_EI_2
     10  17ff					      ENDIF
   4300  17ff				   FPULL      SET	0
   4301  17ff				   FPUSH      SET	1
      0  17ff					      pbyte	#7
      1  17ff		       a9 07		      lda	#7
      2  1801				  -	      IF	!FPUSH
      3  1801				  -	      pha
      4  1801					      ENDIF
   4303  1801				   FPULL      SET	1
   4304  1801				   FPUSH      SET	0
      0  1801					      plb2var	_scroll
      1  1801				  -	      IF	!FPULL
      2  1801				  -	      pla
      3  1801					      ENDIF
      4  1801		       8d ae 4a 	      sta	_scroll
      0  1804					      decb	_enemy_posx
      1  1804		       ce af 4a 	      dec	_enemy_posx
   4307  1807		       20 29 15 	      jsr	_Plshift_enemies
   4308  180a				   _EI_2
   4309  180a				   FPULL      SET	0
   4310  180a				   FPUSH      SET	1
      0  180a					      opt_pbyte_pbyte_and	_scroll, #1
      1  180a
      2  180a
      3  180a
      4  180a
      5  180a
      6  180a		       ad ae 4a 	      lda	_scroll
      7  180d		       29 01		      and	#1
      8  180f				  -	      IF	!FPUSH
      9  180f				  -	      pha
     10  180f					      ENDIF
   4312  180f				   FPULL      SET	1
   4313  180f				   FPUSH      SET	0
      0  180f					      plb2var	_init_charset.animphase
      1  180f				  -	      IF	!FPULL
      2  180f				  -	      pla
      3  180f					      ENDIF
      4  180f		       8d d6 4a 	      sta	_init_charset.animphase
   4315  1812		       20 71 15 	      jsr	_Pinit_charset
   4316  1812				   FPULL      SET	0
   4317  1812				   FPUSH      SET	1
      0  1815					      pbyte	#0
      1  1815		       a9 00		      lda	#0
      2  1817				  -	      IF	!FPUSH
      3  1817				  -	      pha
      4  1817					      ENDIF
   4319  1817				   FPULL      SET	1
   4320  1817				   FPUSH      SET	0
      0  1817					      plb2var	_framecount
      1  1817				  -	      IF	!FPULL
      2  1817				  -	      pla
      3  1817					      ENDIF
      4  1817		       8d d7 4a 	      sta	_framecount
   4322  181a		       60		      rts
   4323  181b		       60		      rts
   4324  181c				   _Pmove_enemies_end
   4325  181c		       4c f3 18 	      jmp	_Pupdate_enemy_map_bottom_end
   4326  181f
   4327  181f
   4328  181f
   4329  181f
   4330  181f
   4331  181f
   4332  181f
   4333  181f				   _Pupdate_enemy_map_bottom
   4334  181f				   FPULL      SET	0
   4335  181f				   FPUSH      SET	1
      0  181f					      pbyte	#4
      1  181f		       a9 04		      lda	#4
      2  1821				  -	      IF	!FPUSH
      3  1821				  -	      pha
      4  1821					      ENDIF
   4337  1821				   FPULL      SET	1
   4338  1821				   FPUSH      SET	0
      0  1821					      plb2var	_update_enemy_map_bottom.row
      1  1821				  -	      IF	!FPULL
      2  1821				  -	      pla
      3  1821					      ENDIF
      4  1821		       8d d8 4a 	      sta	_update_enemy_map_bottom.row
   4340  1824				   _RP_1
   4341  1824				   FPULL      SET	0
   4342  1824				   FPUSH      SET	1
      0  1824					      pbyte	#1
      1  1824		       a9 01		      lda	#1
      2  1826				  -	      IF	!FPUSH
      3  1826				  -	      pha
      4  1826					      ENDIF
   4344  1826				   FPULL      SET	1
   4345  1826				   FPUSH      SET	0
      0  1826					      plb2var	_update_enemy_map_bottom.row_empty
      1  1826				  -	      IF	!FPULL
      2  1826				  -	      pla
      3  1826					      ENDIF
      4  1826		       8d d9 4a 	      sta	_update_enemy_map_bottom.row_empty
   4347  1826				   FPULL      SET	0
   4348  1826				   FPUSH      SET	1
      0  1829					      pbyte	#11
      1  1829		       a9 0b		      lda	#11
      2  182b				  -	      IF	!FPUSH
      3  182b				  -	      pha
      4  182b					      ENDIF
   4350  182b				   FPULL      SET	1
   4351  182b				   FPUSH      SET	0
      0  182b					      plb2var	_update_enemy_map_bottom.col
      1  182b				  -	      IF	!FPULL
      2  182b				  -	      pla
      3  182b					      ENDIF
      4  182b		       8d da 4a 	      sta	_update_enemy_map_bottom.col
   4353  182b				   FPULL      SET	0
      0  182e					      pbvar	_update_enemy_map_bottom.row
      0  182e					      pbyte	_update_enemy_map_bottom.row
      1  182e		       ad d8 4a 	      lda	_update_enemy_map_bottom.row
      2  1831					      IF	!FPUSH
      3  1831		       48		      pha
      4  1832					      ENDIF
   4355  1832				   FPUSH      SET	1
      0  1832					      pbyte	#12
      1  1832		       a9 0c		      lda	#12
      2  1834				  -	      IF	!FPUSH
      3  1834				  -	      pha
      4  1834					      ENDIF
   4357  1834				   FPULL      SET	1
      0  1834					      mulb
      1  1834				  -	      IF	!FPULL
      2  1834				  -	      pla
      3  1834					      ENDIF
      4  1834		       85 fc		      sta	R1
      5  1836		       68		      pla
      6  1837		       85 fd		      sta	R2
      7  1839		       a9 00		      lda	#$00
      8  183b		       f0 05		      beq	.enterLoop
      9  183d				   .doAdd
     10  183d		       18		      clc
     11  183e		       65 fc		      adc	R1
     12  1840				   .loop
     13  1840		       06 fc		      asl	R1
     14  1842				   .enterLoop
     15  1842		       46 fd		      lsr	R2
     16  1844		       b0 f7		      bcs	.doAdd
     17  1846		       d0 f8		      bne	.loop
     18  1848				   .end
     19  1848				  -	      IF	!FPUSH
     20  1848				  -	      pha
     21  1848					      ENDIF
   4359  1848				   FPUSH      SET	0
      0  1848					      plb2var	_update_enemy_map_bottom.row_offset
      1  1848				  -	      IF	!FPULL
      2  1848				  -	      pla
      3  1848					      ENDIF
      4  1848		       8d db 4a 	      sta	_update_enemy_map_bottom.row_offset
   4361  184b				   _RP_2
   4362  184b				   FPULL      SET	0
      0  184b					      opt_pbyte_pbyte_add	_update_enemy_map_bottom.col, _update_enemy_map_bottom.row_offset
      1  184b
      2  184b
      3  184b
      4  184b
      5  184b
      6  184b		       ad da 4a 	      lda	_update_enemy_map_bottom.col
      7  184e		       18		      clc
      8  184f		       6d db 4a 	      adc	_update_enemy_map_bottom.row_offset
      9  1852					      IF	!FPUSH
     10  1852		       48		      pha
     11  1853					      ENDIF
      0  1853					      pbarray_fast	_enemy_map
      1  1853					      IF	!FPULL
      2  1853		       68		      pla
      3  1854					      ENDIF
      4  1854		       aa		      tax
      5  1855		       bd 66 4a 	      lda	_enemy_map,x
      6  1858					      IF	!FPUSH
      7  1858		       48		      pha
      8  1859					      ENDIF
   4365  1859				   FPUSH      SET	1
      0  1859					      pbyte	#255
      1  1859		       a9 ff		      lda	#255
      2  185b				  -	      IF	!FPUSH
      3  185b				  -	      pha
      4  185b					      ENDIF
   4367  185b				   FPULL      SET	1
      0  185b					      cmpbneq
      1  185b				  -	      IF	!FPULL
      2  185b				  -	      pla
      3  185b					      ENDIF
      4  185b		       85 fc		      sta	R1
      5  185d		       68		      pla
      6  185e		       c5 fc		      cmp	R1
      7  1860		       d0 05		      bne	.pht
      0  1862					      pzero
      1  1862		       a9 00		      lda	#$00
      2  1864				  -	      IF	!FPUSH
      3  1864				  -	      pha
      4  1864					      ENDIF
      9  1864				  -	      IF	!FPUSH
     10  1864				  -	      jmp	*+6
     11  1864					      ELSE
     12  1864		       4c 69 18 	      jmp	*+5
     13  1867					      ENDIF
      0  1867				   .pht       pone
      1  1867		       a9 01		      lda	#$01
      2  1869				  -	      IF	!FPUSH
      3  1869				  -	      pha
      4  1869					      ENDIF
   4369  1869				   FPUSH      SET	0
      0  1869					      cond_stmt	_EI_3, _EL_3
      1  1869				  -	      IF	!FPULL
      2  1869				  -	      pla
      3  1869					      ENDIF
      4  1869		       d0 03		      bne	*+5
      5  186b				  -	      IFCONST	_EL_3
      6  186b				  -	      jmp	_EL_3
      7  186b					      ELSE
      8  186b		       4c 73 18 	      jmp	_EI_3
      9  186e					      ENDIF
   4371  186e				   FPULL      SET	0
   4372  186e				   FPUSH      SET	1
      0  186e					      pbyte	#0
      1  186e		       a9 00		      lda	#0
      2  1870				  -	      IF	!FPUSH
      3  1870				  -	      pha
      4  1870					      ENDIF
   4374  1870				   FPULL      SET	1
   4375  1870				   FPUSH      SET	0
      0  1870					      plb2var	_update_enemy_map_bottom.row_empty
      1  1870				  -	      IF	!FPULL
      2  1870				  -	      pla
      3  1870					      ENDIF
      4  1870		       8d d9 4a 	      sta	_update_enemy_map_bottom.row_empty
   4377  1873				   _EI_3
      0  1873					      decb	_update_enemy_map_bottom.col
      1  1873		       ce da 4a 	      dec	_update_enemy_map_bottom.col
      0  1876					      pbyte_pbyte_cmpbeq_cond	_update_enemy_map_bottom.col, #0, _RP_2, _void_
      1  1876
      2  1876
      3  1876		       ad da 4a 	      lda	_update_enemy_map_bottom.col
      4  1879		       c9 00		      cmp	#0
      5  187b		       f0 03		      beq	*+5
      6  187d				  -	      IFCONST	_void_
      7  187d				  -	      jmp	_void_
      8  187d					      ELSE
      9  187d		       4c 4b 18 	      jmp	_RP_2
     10  1880					      ENDIF
      0  1880					      pbyte_pbyte_cmpbeq_cond	_update_enemy_map_bottom.row_empty, #0, _EI_65538, _EL_65538
      1  1880
      2  1880
      3  1880		       ad d9 4a 	      lda	_update_enemy_map_bottom.row_empty
      4  1883		       c9 00		      cmp	#0
      5  1885		       f0 03		      beq	*+5
      6  1887				  -	      IFCONST	_EL_65538
      7  1887				  -	      jmp	_EL_65538
      8  1887					      ELSE
      9  1887		       4c 8d 18 	      jmp	_EI_65538
     10  188a					      ENDIF
   4381  188a		       4c 9a 18 	      jmp	_Lupdate_enemy_map_bottom.exit
   4382  188d
   4383  188d
   4384  188d
   4385  188d
   4386  188d
   4387  188d
   4388  188d
   4389  188d				   _EI_65538
      0  188d					      decb	_update_enemy_map_bottom.row
      1  188d		       ce d8 4a 	      dec	_update_enemy_map_bottom.row
      0  1890					      pbyte_pbyte_cmpbeq_cond	_update_enemy_map_bottom.row, #0, _RP_1, _void_
      1  1890
      2  1890
      3  1890		       ad d8 4a 	      lda	_update_enemy_map_bottom.row
      4  1893		       c9 00		      cmp	#0
      5  1895		       f0 03		      beq	*+5
      6  1897				  -	      IFCONST	_void_
      7  1897				  -	      jmp	_void_
      8  1897					      ELSE
      9  1897		       4c 24 18 	      jmp	_RP_1
     10  189a					      ENDIF
   4392  189a
   4393  189a
   4394  189a
   4395  189a
   4396  189a
   4397  189a
   4398  189a
   4399  189a				   _Lupdate_enemy_map_bottom.exit
   4400  189a				   FPULL      SET	0
      0  189a					      opt_pbyte_pbyte_add	#5, _enemy_posy
      1  189a
      2  189a
      3  189a
      4  189a
      5  189a
      6  189a		       a9 05		      lda	#5
      7  189c		       18		      clc
      8  189d		       6d b0 4a 	      adc	_enemy_posy
      9  18a0					      IF	!FPUSH
     10  18a0		       48		      pha
     11  18a1					      ENDIF
   4402  18a1				   FPUSH      SET	1
      0  18a1					      pbvar	_update_enemy_map_bottom.row
      0  18a1					      pbyte	_update_enemy_map_bottom.row
      1  18a1		       ad d8 4a 	      lda	_update_enemy_map_bottom.row
      2  18a4				  -	      IF	!FPUSH
      3  18a4				  -	      pha
      4  18a4					      ENDIF
   4404  18a4				   FPULL      SET	1
      0  18a4					      lshiftbc	1
      1  18a4				  -	      IF	!FPULL
      2  18a4				  -	      pla
      3  18a4					      ENDIF
      4  18a4					      REPEAT	1
      5  18a4		       0a		      asl
      6  18a5					      REPEND
      7  18a5				  -	      IF	!FPUSH
      8  18a5				  -	      pha
      9  18a5					      ENDIF
      0  18a5					      addb
      1  18a5				  -	      IF	!FPULL
      2  18a5				  -	      pla
      3  18a5					      ENDIF
      4  18a5		       85 fb		      sta	R0
      5  18a7		       68		      pla
      6  18a8		       18		      clc
      7  18a9		       65 fb		      adc	R0
      8  18ab				  -	      IF	!FPUSH
      9  18ab				  -	      pha
     10  18ab					      ENDIF
   4407  18ab				   FPUSH      SET	0
      0  18ab					      plb2var	_bottom_row
      1  18ab				  -	      IF	!FPULL
      2  18ab				  -	      pla
      3  18ab					      ENDIF
      4  18ab		       8d b1 4a 	      sta	_bottom_row
   4409  18ab				   FPULL      SET	0
   4410  18ab				   FPUSH      SET	1
      0  18ae					      pbvar	_update_enemy_map_bottom.row
      0  18ae					      pbyte	_update_enemy_map_bottom.row
      1  18ae		       ad d8 4a 	      lda	_update_enemy_map_bottom.row
      2  18b1				  -	      IF	!FPUSH
      3  18b1				  -	      pha
      4  18b1					      ENDIF
   4412  18b1				   FPULL      SET	1
   4413  18b1				   FPUSH      SET	0
      0  18b1					      lshiftbc	1
      1  18b1				  -	      IF	!FPULL
      2  18b1				  -	      pla
      3  18b1					      ENDIF
      4  18b1					      REPEAT	1
      5  18b1		       0a		      asl
      6  18b2					      REPEND
      7  18b2					      IF	!FPUSH
      8  18b2		       48		      pha
      9  18b3					      ENDIF
      0  18b3					      btow
      1  18b3		       a9 00		      lda	#$00
      2  18b5		       48		      pha
   4416  18b5				   FPULL      SET	0
      0  18b6					      pbyte	#40
      1  18b6		       a9 28		      lda	#40
      2  18b8					      IF	!FPUSH
      3  18b8		       48		      pha
      4  18b9					      ENDIF
      0  18b9					      btow
      1  18b9		       a9 00		      lda	#$00
      2  18bb		       48		      pha
      0  18bc					      mulw
      1  18bc					      IF	!FPULL
      2  18bc		       68		      pla
      3  18bd		       85 fc		      sta	R1
      4  18bf		       68		      pla
      5  18c0		       85 fb		      sta	R0
      6  18c2				  -	      ELSE
      7  18c2				  -	      sta	R0
      8  18c2				  -	      sty	R1
      9  18c2					      ENDIF
     10  18c2		       68		      pla
     11  18c3		       85 fe		      sta	R3
     12  18c5		       68		      pla
     13  18c6		       85 fd		      sta	R2
     14  18c8		       20 0d 08 	      jsr	NUCL_SMUL16
     15  18cb					      IF	!FPUSH
     16  18cb		       a5 fb		      lda	R0
     17  18cd		       48		      pha
     18  18ce		       a5 fc		      lda	R1
     19  18d0		       48		      pha
     20  18d1				  -	      ELSE
     21  18d1				  -	      lda	R0
     22  18d1				  -	      ldy	R1
     23  18d1					      ENDIF
      0  18d1					      pbyte	#25
      1  18d1		       a9 19		      lda	#25
      2  18d3					      IF	!FPUSH
      3  18d3		       48		      pha
      4  18d4					      ENDIF
      0  18d4					      btow
      1  18d4		       a9 00		      lda	#$00
      2  18d6		       48		      pha
      0  18d7					      addw
      1  18d7		       ba		      tsx
      2  18d8		       bd 02 01 	      lda.wx	stack+2
      3  18db		       18		      clc
      4  18dc		       7d 04 01 	      adc.wx	stack+4
      5  18df		       9d 04 01 	      sta.wx	stack+4
      6  18e2		       68		      pla
      7  18e3		       7d 03 01 	      adc.wx	stack+3
      8  18e6		       9d 03 01 	      sta.wx	stack+3
      9  18e9		       68		      pla
      0  18ea					      plw2var	_enemy_map_length
      1  18ea					      IF	!FPULL
      2  18ea		       68		      pla
      3  18eb		       8d c3 4a 	      sta	_enemy_map_length+1
      4  18ee		       68		      pla
      5  18ef		       8d c2 4a 	      sta	_enemy_map_length
      6  18f2				  -	      ELSE
      7  18f2				  -	      sta	_enemy_map_length
      8  18f2				  -	      sty	_enemy_map_length+1
      9  18f2					      ENDIF
   4424  18f2		       60		      rts
   4425  18f3				   _Pupdate_enemy_map_bottom_end
   4426  2000					      org	$2000
   4427  2000
   4428  2000
   4429  2000
   4430  2000
   4431  2000
   4432  2000
   4433  2000
   4434  2000				   _IJS1      INCBIN	"charset_s.bin"
   4435  2800
   4436  2800
   4437  2800
   4438  2800
   4439  2800
   4440  2800
   4441  2800
   4442  2800				   _IJ1
   4443  2800
   4444  2800
   4445  2800
   4446  2800
   4447  2800
   4448  2800
   4449  2800
 Included file (charset_s.bin): $2000 - $2800
   4450  2800					      ECHO	"Included file (charset_s.bin):",_IJS1,"-", _IJ1
   4451  2800		       4c c2 2f 	      jmp	_Pdetect_collisions_end
   4452  2803
   4453  2803
   4454  2803
   4455  2803
   4456  2803
   4457  2803
   4458  2803
   4459  2803				   _Pdetect_collisions
   4460  2803				   FPUSH      SET	1
      0  2803					      peekb_const_addr	#53279
      1  2803
      2  2803
      3  2803
      4  2803		       d0 1f	   .ad	      EQU	#53279
      5  2803		       ad 1f d0 	      lda	.ad
      6  2806				  -	      IF	!FPUSH
      7  2806				  -	      pha
      8  2806					      ENDIF
   4462  2806				   FPULL      SET	1
   4463  2806				   FPUSH      SET	0
      0  2806					      plb2var	_detect_collisions.coll_state
      1  2806				  -	      IF	!FPULL
      2  2806				  -	      pla
      3  2806					      ENDIF
      4  2806		       8d de 4a 	      sta	_detect_collisions.coll_state
   4465  2806				   FPULL      SET	0
   4466  2806				   FPUSH      SET	1
      0  2809					      peekb_const_addr	#53278
      1  2809
      2  2809
      3  2809
      4  2809		       d0 1e	   .ad	      EQU	#53278
      5  2809		       ad 1e d0 	      lda	.ad
      6  280c				  -	      IF	!FPUSH
      7  280c				  -	      pha
      8  280c					      ENDIF
   4468  280c				   FPULL      SET	1
   4469  280c				   FPUSH      SET	0
      0  280c					      plb2var	_detect_collisions.spr_coll_state
      1  280c				  -	      IF	!FPULL
      2  280c				  -	      pla
      3  280c					      ENDIF
      4  280c		       8d df 4a 	      sta	_detect_collisions.spr_coll_state
   4471  280c				   FPULL      SET	0
      0  280f					      opt_pbyte_pbyte_and	_detect_collisions.coll_state, #2
      1  280f
      2  280f
      3  280f
      4  280f
      5  280f
      6  280f		       ad de 4a 	      lda	_detect_collisions.coll_state
      7  2812		       29 02		      and	#2
      8  2814					      IF	!FPUSH
      9  2814		       48		      pha
     10  2815					      ENDIF
   4473  2815				   FPUSH      SET	1
      0  2815					      pbyte	#2
      1  2815		       a9 02		      lda	#2
      2  2817				  -	      IF	!FPUSH
      3  2817				  -	      pha
      4  2817					      ENDIF
   4475  2817				   FPULL      SET	1
      0  2817					      cmpbeq
      1  2817				  -	      IF	!FPULL
      2  2817				  -	      pla
      3  2817					      ENDIF
      4  2817		       85 fc		      sta	R1
      5  2819		       68		      pla
      6  281a		       c5 fc		      cmp	R1
      7  281c		       f0 05		      beq	.pht
      0  281e					      pzero
      1  281e		       a9 00		      lda	#$00
      2  2820				  -	      IF	!FPUSH
      3  2820				  -	      pha
      4  2820					      ENDIF
      9  2820				  -	      IF	!FPUSH
     10  2820				  -	      jmp	*+6
     11  2820					      ELSE
     12  2820		       4c 25 28 	      jmp	*+5
     13  2823					      ENDIF
      0  2823				   .pht       pone
      1  2823		       a9 01		      lda	#$01
      2  2825				  -	      IF	!FPUSH
      3  2825				  -	      pha
      4  2825					      ENDIF
   4477  2825				   FPUSH      SET	0
      0  2825					      cond_stmt	_EI_65539, _EL_65539
      1  2825				  -	      IF	!FPULL
      2  2825				  -	      pla
      3  2825					      ENDIF
      4  2825		       d0 03		      bne	*+5
      5  2827				  -	      IFCONST	_EL_65539
      6  2827				  -	      jmp	_EL_65539
      7  2827					      ELSE
      8  2827		       4c 2d 28 	      jmp	_EI_65539
      9  282a					      ENDIF
   4479  282a		       20 5d 28 	      jsr	_Ldetect_collisions.enemy_hit
   4480  282d				   _EI_65539
   4481  282d				   FPULL      SET	0
      0  282d					      opt_pbyte_pbyte_and	_detect_collisions.coll_state, #28
      1  282d
      2  282d
      3  282d
      4  282d
      5  282d
      6  282d		       ad de 4a 	      lda	_detect_collisions.coll_state
      7  2830		       29 1c		      and	#28
      8  2832					      IF	!FPUSH
      9  2832		       48		      pha
     10  2833					      ENDIF
   4483  2833				   FPUSH      SET	1
      0  2833					      pbyte	#0
      1  2833		       a9 00		      lda	#0
      2  2835				  -	      IF	!FPUSH
      3  2835				  -	      pha
      4  2835					      ENDIF
   4485  2835				   FPULL      SET	1
      0  2835					      cmpbgt
      1  2835				  -	      IF	!FPULL
      2  2835				  -	      pla
      3  2835					      ENDIF
      4  2835		       85 fc		      sta	R1
      5  2837		       68		      pla
      6  2838		       c5 fc		      cmp	R1
      7  283a		       90 07		      bcc	.phf
      8  283c		       f0 05		      beq	.phf
      0  283e					      pone
      1  283e		       a9 01		      lda	#$01
      2  2840				  -	      IF	!FPUSH
      3  2840				  -	      pha
      4  2840					      ENDIF
     10  2840				  -	      IF	!FPUSH
     11  2840				  -	      jmp	*+6
     12  2840					      ELSE
     13  2840		       4c 45 28 	      jmp	*+5
     14  2843					      ENDIF
      0  2843				   .phf       pzero
      1  2843		       a9 00		      lda	#$00
      2  2845				  -	      IF	!FPUSH
      3  2845				  -	      pha
      4  2845					      ENDIF
   4487  2845				   FPUSH      SET	0
      0  2845					      cond_stmt	_EI_65540, _EL_65540
      1  2845				  -	      IF	!FPULL
      2  2845				  -	      pla
      3  2845					      ENDIF
      4  2845		       d0 03		      bne	*+5
      5  2847				  -	      IFCONST	_EL_65540
      6  2847				  -	      jmp	_EL_65540
      7  2847					      ELSE
      8  2847		       4c 4d 28 	      jmp	_EI_65540
      9  284a					      ENDIF
   4489  284a		       20 1b 2d 	      jsr	_Ldetect_collisions.shield_hit_by_enemy
   4490  284d				   _EI_65540
      0  284d					      pbyte_pbyte_cmpbgt_cond	_detect_collisions.spr_coll_state, #0, _EI_65541, _EL_65541
      1  284d
      2  284d
      3  284d		       a9 00		      lda	#0
      4  284f		       cd df 4a 	      cmp	_detect_collisions.spr_coll_state
      5  2852		       90 05		      bcc	*+7
      6  2854		       f0 03		      beq	*+5
      7  2856				  -	      IFCONST	_EL_65541
      8  2856				  -	      jmp	_EL_65541
      9  2856					      ELSE
     10  2856		       4c 5c 28 	      jmp	_EI_65541
     11  2859					      ENDIF
   4492  2859		       20 e3 2e 	      jsr	_Ldetect_collisions.ship_hit
   4493  285c
   4494  285c
   4495  285c
   4496  285c
   4497  285c
   4498  285c
   4499  285c
   4500  285c				   _EI_65541
   4501  285c		       60		      rts
   4502  285d
   4503  285d
   4504  285d
   4505  285d
   4506  285d
   4507  285d
   4508  285d
   4509  285d				   _Ldetect_collisions.enemy_hit
   4510  285d				   FPULL      SET	0
      0  285d					      pbyte_pbyte_cmpblt	_bottom_row, #19
      1  285d
      2  285d
      3  285d
      4  285d
      5  285d
      6  285d		       ad b1 4a 	      lda	_bottom_row
      7  2860		       c9 13		      cmp	#19
      8  2862		       b0 06		      bcs	.false
      0  2864					      pone
      1  2864		       a9 01		      lda	#$01
      2  2866					      IF	!FPUSH
      3  2866		       48		      pha
      4  2867					      ENDIF
     10  2867					      IF	!FPUSH
     11  2867		       4c 6d 28 	      jmp	*+6
     12  286a				  -	      ELSE
     13  286a				  -	      jmp	*+5
     14  286a					      ENDIF
     15  286a				   .false
      0  286a					      pzero
      1  286a		       a9 00		      lda	#$00
      2  286c					      IF	!FPUSH
      3  286c		       48		      pha
      4  286d					      ENDIF
   4512  286d				   FPUSH      SET	1
      0  286d					      pbyte_pbyte_cmpbgte	_bullet_posy, #210
      1  286d
      2  286d
      3  286d
      4  286d
      5  286d
      6  286d		       ad b8 4a 	      lda	_bullet_posy
      7  2870		       c9 d2		      cmp	#210
      8  2872		       b0 05		      bcs	.true
      0  2874					      pzero
      1  2874		       a9 00		      lda	#$00
      2  2876				  -	      IF	!FPUSH
      3  2876				  -	      pha
      4  2876					      ENDIF
     10  2876				  -	      IF	!FPUSH
     11  2876				  -	      jmp	*+6
     12  2876					      ELSE
     13  2876		       4c 7b 28 	      jmp	*+5
     14  2879					      ENDIF
     15  2879				   .true
      0  2879					      pone
      1  2879		       a9 01		      lda	#$01
      2  287b				  -	      IF	!FPUSH
      3  287b				  -	      pha
      4  287b					      ENDIF
   4514  287b				   FPULL      SET	1
      0  287b					      andb
      1  287b				  -	      IF	!FPULL
      2  287b				  -	      pla
      3  287b					      ENDIF
      4  287b		       85 fc		      sta	R1
      5  287d		       68		      pla
      6  287e		       25 fc		      and	R1
      7  2880				  -	      IF	!FPUSH
      8  2880				  -	      pha
      9  2880					      ENDIF
   4516  2880				   FPUSH      SET	0
      0  2880					      cond_stmt	_EI_4, _EL_4
      1  2880				  -	      IF	!FPULL
      2  2880				  -	      pla
      3  2880					      ENDIF
      4  2880		       d0 03		      bne	*+5
      5  2882					      IFCONST	_EL_4
      6  2882		       4c 99 29 	      jmp	_EL_4
      7  2885				  -	      ELSE
      8  2885				  -	      jmp	_EI_4
      9  2885					      ENDIF
   4518  2885				   FPULL      SET	0
      0  2885					      pwvar	_bullet_posx
      1  2885					      IF	!FPUSH
      2  2885		       ad b6 4a 	      lda	_bullet_posx
      3  2888		       48		      pha
      4  2889		       ad b7 4a 	      lda	_bullet_posx+1
      5  288c		       48		      pha
      6  288d				  -	      ELSE
      7  288d				  -	      lda	_bullet_posx
      8  288d				  -	      ldy	_bullet_posx+1
      9  288d					      ENDIF
      0  288d					      rshiftwc	3
      1  288d		       ba		      tsx
      2  288e					      REPEAT	3
      3  288e		       5e 01 01 	      lsr.wx	stack+1
      4  2891		       7e 02 01 	      ror.wx	stack+2
      2  2891					      REPEND
      3  2894		       5e 01 01 	      lsr.wx	stack+1
      4  2897		       7e 02 01 	      ror.wx	stack+2
      2  2897					      REPEND
      3  289a		       5e 01 01 	      lsr.wx	stack+1
      4  289d		       7e 02 01 	      ror.wx	stack+2
      5  28a0					      REPEND
      0  28a0					      wtob
      1  28a0		       68		      pla
      0  28a1					      pbyte	#3
      1  28a1		       a9 03		      lda	#3
      2  28a3					      IF	!FPUSH
      3  28a3		       48		      pha
      4  28a4					      ENDIF
      0  28a4					      subb
      1  28a4		       ba		      tsx
      2  28a5		       bd 02 01 	      lda.wx	stack+2
      3  28a8		       38		      sec
      4  28a9		       fd 01 01 	      sbc.wx	stack+1
      5  28ac		       9d 02 01 	      sta.wx	stack+2
      6  28af		       68		      pla
      0  28b0					      plb2var	_detect_collisions.col
      1  28b0					      IF	!FPULL
      2  28b0		       68		      pla
      3  28b1					      ENDIF
      4  28b1		       8d e0 4a 	      sta	_detect_collisions.col
   4525  28b1				   FPUSH      SET	1
      0  28b4					      opt_pbyte_pbyte_sub	_bullet_posy, #50
      1  28b4
      2  28b4
      3  28b4
      4  28b4
      5  28b4
      6  28b4		       ad b8 4a 	      lda	_bullet_posy
      7  28b7		       38		      sec
      8  28b8		       e9 32		      sbc	#50
      9  28ba				  -	      IF	!FPUSH
     10  28ba				  -	      pha
     11  28ba					      ENDIF
   4527  28ba				   FPULL      SET	1
      0  28ba					      rshiftbc	3
      1  28ba				  -	      IF	!FPULL
      2  28ba				  -	      pla
      3  28ba					      ENDIF
      4  28ba					      REPEAT	3
      5  28ba		       4a		      lsr
      4  28ba					      REPEND
      5  28bb		       4a		      lsr
      4  28bb					      REPEND
      5  28bc		       4a		      lsr
      6  28bd					      REPEND
      7  28bd				  -	      IF	!FPUSH
      8  28bd				  -	      pha
      9  28bd					      ENDIF
   4529  28bd				   FPUSH      SET	0
      0  28bd					      plb2var	_detect_collisions.row
      1  28bd				  -	      IF	!FPULL
      2  28bd				  -	      pla
      3  28bd					      ENDIF
      4  28bd		       8d e1 4a 	      sta	_detect_collisions.row
   4531  28bd				   FPULL      SET	0
      0  28c0					      pword	#1024
      1  28c0					      IF	!FPUSH
      2  28c0		       a9 00		      lda	#<#1024
      3  28c2		       48		      pha
      4  28c3		       a9 04		      lda	#>#1024
      5  28c5		       48		      pha
      6  28c6				  -	      ELSE
      7  28c6				  -	      lda	#<#1024
      8  28c6				  -	      ldy	#>#1024
      9  28c6					      ENDIF
      0  28c6					      pbvar	_detect_collisions.col
      0  28c6					      pbyte	_detect_collisions.col
      1  28c6		       ad e0 4a 	      lda	_detect_collisions.col
      2  28c9					      IF	!FPUSH
      3  28c9		       48		      pha
      4  28ca					      ENDIF
      0  28ca					      btow
      1  28ca		       a9 00		      lda	#$00
      2  28cc		       48		      pha
      0  28cd					      addw
      1  28cd		       ba		      tsx
      2  28ce		       bd 02 01 	      lda.wx	stack+2
      3  28d1		       18		      clc
      4  28d2		       7d 04 01 	      adc.wx	stack+4
      5  28d5		       9d 04 01 	      sta.wx	stack+4
      6  28d8		       68		      pla
      7  28d9		       7d 03 01 	      adc.wx	stack+3
      8  28dc		       9d 03 01 	      sta.wx	stack+3
      9  28df		       68		      pla
      0  28e0					      pbyte	#40
      1  28e0		       a9 28		      lda	#40
      2  28e2					      IF	!FPUSH
      3  28e2		       48		      pha
      4  28e3					      ENDIF
      0  28e3					      btow
      1  28e3		       a9 00		      lda	#$00
      2  28e5		       48		      pha
      0  28e6					      pbvar	_detect_collisions.row
      0  28e6					      pbyte	_detect_collisions.row
      1  28e6		       ad e1 4a 	      lda	_detect_collisions.row
      2  28e9					      IF	!FPUSH
      3  28e9		       48		      pha
      4  28ea					      ENDIF
      0  28ea					      btow
      1  28ea		       a9 00		      lda	#$00
      2  28ec		       48		      pha
      0  28ed					      mulw
      1  28ed					      IF	!FPULL
      2  28ed		       68		      pla
      3  28ee		       85 fc		      sta	R1
      4  28f0		       68		      pla
      5  28f1		       85 fb		      sta	R0
      6  28f3				  -	      ELSE
      7  28f3				  -	      sta	R0
      8  28f3				  -	      sty	R1
      9  28f3					      ENDIF
     10  28f3		       68		      pla
     11  28f4		       85 fe		      sta	R3
     12  28f6		       68		      pla
     13  28f7		       85 fd		      sta	R2
     14  28f9		       20 0d 08 	      jsr	NUCL_SMUL16
     15  28fc					      IF	!FPUSH
     16  28fc		       a5 fb		      lda	R0
     17  28fe		       48		      pha
     18  28ff		       a5 fc		      lda	R1
     19  2901		       48		      pha
     20  2902				  -	      ELSE
     21  2902				  -	      lda	R0
     22  2902				  -	      ldy	R1
     23  2902					      ENDIF
      0  2902					      addw
      1  2902		       ba		      tsx
      2  2903		       bd 02 01 	      lda.wx	stack+2
      3  2906		       18		      clc
      4  2907		       7d 04 01 	      adc.wx	stack+4
      5  290a		       9d 04 01 	      sta.wx	stack+4
      6  290d		       68		      pla
      7  290e		       7d 03 01 	      adc.wx	stack+3
      8  2911		       9d 03 01 	      sta.wx	stack+3
      9  2914		       68		      pla
      0  2915					      plw2var	_detect_collisions.hit_position
      1  2915					      IF	!FPULL
      2  2915		       68		      pla
      3  2916		       8d e3 4a 	      sta	_detect_collisions.hit_position+1
      4  2919		       68		      pla
      5  291a		       8d e2 4a 	      sta	_detect_collisions.hit_position
      6  291d				  -	      ELSE
      7  291d				  -	      sta	_detect_collisions.hit_position
      8  291d				  -	      sty	_detect_collisions.hit_position+1
      9  291d					      ENDIF
   4543  291d				   FPUSH      SET	1
      0  291d					      pwvar	_detect_collisions.hit_position
      1  291d				  -	      IF	!FPUSH
      2  291d				  -	      lda	_detect_collisions.hit_position
      3  291d				  -	      pha
      4  291d				  -	      lda	_detect_collisions.hit_position+1
      5  291d				  -	      pha
      6  291d					      ELSE
      7  291d		       ad e2 4a 	      lda	_detect_collisions.hit_position
      8  2920		       ac e3 4a 	      ldy	_detect_collisions.hit_position+1
      9  2923					      ENDIF
   4545  2923				   FPULL      SET	1
      0  2923					      peekb
      1  2923				  -	      IF	!FPULL
      2  2923				  -	      pla
      3  2923				  -	      sta	.selfmod_code+2
      4  2923				  -	      pla
      5  2923				  -	      sta	.selfmod_code+1
      6  2923					      ELSE
      7  2923		       8d 2a 29 	      sta	.selfmod_code+1
      8  2926		       8c 2b 29 	      sty	.selfmod_code+2
      9  2929					      ENDIF
     10  2929				   .selfmod_code
     11  2929		       ad 00 00 	      lda.w	$0000
     12  292c				  -	      IF	!FPUSH
     13  292c				  -	      pha
     14  292c					      ENDIF
   4547  292c				   FPUSH      SET	0
      0  292c					      plb2var	_detect_collisions.char
      1  292c				  -	      IF	!FPULL
      2  292c				  -	      pla
      3  292c					      ENDIF
      4  292c		       8d e4 4a 	      sta	_detect_collisions.char
   4549  292c				   FPULL      SET	0
   4550  292c				   FPUSH      SET	1
      0  292f					      pbyte_pbyte_cmpbgte	_detect_collisions.char, #88
      1  292f
      2  292f
      3  292f
      4  292f
      5  292f
      6  292f		       ad e4 4a 	      lda	_detect_collisions.char
      7  2932		       c9 58		      cmp	#88
      8  2934		       b0 05		      bcs	.true
      0  2936					      pzero
      1  2936		       a9 00		      lda	#$00
      2  2938				  -	      IF	!FPUSH
      3  2938				  -	      pha
      4  2938					      ENDIF
     10  2938				  -	      IF	!FPUSH
     11  2938				  -	      jmp	*+6
     12  2938					      ELSE
     13  2938		       4c 3d 29 	      jmp	*+5
     14  293b					      ENDIF
     15  293b				   .true
      0  293b					      pone
      1  293b		       a9 01		      lda	#$01
      2  293d				  -	      IF	!FPUSH
      3  293d				  -	      pha
      4  293d					      ENDIF
   4552  293d				   FPULL      SET	1
   4553  293d				   FPUSH      SET	0
      0  293d					      cond_stmt	_EI_5, _EL_5
      1  293d				  -	      IF	!FPULL
      2  293d				  -	      pla
      3  293d					      ENDIF
      4  293d		       d0 03		      bne	*+5
      5  293f				  -	      IFCONST	_EL_5
      6  293f				  -	      jmp	_EL_5
      7  293f					      ELSE
      8  293f		       4c 96 29 	      jmp	_EI_5
      9  2942					      ENDIF
   4555  2942				   FPULL      SET	0
   4556  2942				   FPUSH      SET	1
      0  2942					      pbyte_pbyte_cmpblt	_detect_collisions.char, #91
      1  2942
      2  2942
      3  2942
      4  2942
      5  2942
      6  2942		       ad e4 4a 	      lda	_detect_collisions.char
      7  2945		       c9 5b		      cmp	#91
      8  2947		       b0 05		      bcs	.false
      0  2949					      pone
      1  2949		       a9 01		      lda	#$01
      2  294b				  -	      IF	!FPUSH
      3  294b				  -	      pha
      4  294b					      ENDIF
     10  294b				  -	      IF	!FPUSH
     11  294b				  -	      jmp	*+6
     12  294b					      ELSE
     13  294b		       4c 50 29 	      jmp	*+5
     14  294e					      ENDIF
     15  294e				   .false
      0  294e					      pzero
      1  294e		       a9 00		      lda	#$00
      2  2950				  -	      IF	!FPUSH
      3  2950				  -	      pha
      4  2950					      ENDIF
   4558  2950				   FPULL      SET	1
   4559  2950				   FPUSH      SET	0
      0  2950					      cond_stmt	_EI_6, _EL_6
      1  2950				  -	      IF	!FPULL
      2  2950				  -	      pla
      3  2950					      ENDIF
      4  2950		       d0 03		      bne	*+5
      5  2952					      IFCONST	_EL_6
      6  2952		       4c 6f 29 	      jmp	_EL_6
      7  2955				  -	      ELSE
      8  2955				  -	      jmp	_EI_6
      9  2955					      ENDIF
   4561  2955				   FPULL      SET	0
      0  2955					      opt_pbyte_pbyte_add	_detect_collisions.char, #3
      1  2955
      2  2955
      3  2955
      4  2955
      5  2955
      6  2955		       ad e4 4a 	      lda	_detect_collisions.char
      7  2958		       18		      clc
      8  2959		       69 03		      adc	#3
      9  295b					      IF	!FPUSH
     10  295b		       48		      pha
     11  295c					      ENDIF
   4563  295c				   FPUSH      SET	1
      0  295c					      pwvar	_detect_collisions.hit_position
      1  295c				  -	      IF	!FPUSH
      2  295c				  -	      lda	_detect_collisions.hit_position
      3  295c				  -	      pha
      4  295c				  -	      lda	_detect_collisions.hit_position+1
      5  295c				  -	      pha
      6  295c					      ELSE
      7  295c		       ad e2 4a 	      lda	_detect_collisions.hit_position
      8  295f		       ac e3 4a 	      ldy	_detect_collisions.hit_position+1
      9  2962					      ENDIF
   4565  2962				   FPULL      SET	1
   4566  2962				   FPUSH      SET	0
      0  2962					      pokeb
      1  2962				  -	      IF	!FPULL
      2  2962				  -	      pla
      3  2962				  -	      sta	.selfmod_code+2
      4  2962				  -	      pla
      5  2962				  -	      sta	.selfmod_code+1
      6  2962					      ELSE
      7  2962		       8d 6a 29 	      sta	.selfmod_code+1
      8  2965		       8c 6b 29 	      sty	.selfmod_code+2
      9  2968					      ENDIF
     10  2968		       68		      pla
     11  2969				   .selfmod_code
     12  2969		       8d 00 00 	      sta.w	$0000
   4568  296c		       4c 82 29 	      jmp	_EI_6
   4569  296f				   _EL_6
   4570  296f				   FPULL      SET	0
      0  296f					      pbyte	#32
      1  296f		       a9 20		      lda	#32
      2  2971					      IF	!FPUSH
      3  2971		       48		      pha
      4  2972					      ENDIF
   4572  2972				   FPUSH      SET	1
      0  2972					      pwvar	_detect_collisions.hit_position
      1  2972				  -	      IF	!FPUSH
      2  2972				  -	      lda	_detect_collisions.hit_position
      3  2972				  -	      pha
      4  2972				  -	      lda	_detect_collisions.hit_position+1
      5  2972				  -	      pha
      6  2972					      ELSE
      7  2972		       ad e2 4a 	      lda	_detect_collisions.hit_position
      8  2975		       ac e3 4a 	      ldy	_detect_collisions.hit_position+1
      9  2978					      ENDIF
   4574  2978				   FPULL      SET	1
   4575  2978				   FPUSH      SET	0
      0  2978					      pokeb
      1  2978				  -	      IF	!FPULL
      2  2978				  -	      pla
      3  2978				  -	      sta	.selfmod_code+2
      4  2978				  -	      pla
      5  2978				  -	      sta	.selfmod_code+1
      6  2978					      ELSE
      7  2978		       8d 80 29 	      sta	.selfmod_code+1
      8  297b		       8c 81 29 	      sty	.selfmod_code+2
      9  297e					      ENDIF
     10  297e		       68		      pla
     11  297f				   .selfmod_code
     12  297f		       8d 00 00 	      sta.w	$0000
   4577  2982				   _EI_6
   4578  2982				   FPULL      SET	0
   4579  2982				   FPUSH      SET	1
      0  2982					      pbyte	#0
      1  2982		       a9 00		      lda	#0
      2  2984				  -	      IF	!FPUSH
      3  2984				  -	      pha
      4  2984					      ENDIF
   4581  2984				   FPULL      SET	1
   4582  2984				   FPUSH      SET	0
      0  2984					      plb2var	_bullet_on
      1  2984				  -	      IF	!FPULL
      2  2984				  -	      pla
      3  2984					      ENDIF
      4  2984		       8d b5 4a 	      sta	_bullet_on
   4584  2984				   FPULL      SET	0
      0  2987					      peekb_const_addr	#53269
      1  2987
      2  2987
      3  2987
      4  2987		       d0 15	   .ad	      EQU	#53269
      5  2987		       ad 15 d0 	      lda	.ad
      6  298a					      IF	!FPUSH
      7  298a		       48		      pha
      8  298b					      ENDIF
   4586  298b				   FPUSH      SET	1
      0  298b					      pbyte	#253
      1  298b		       a9 fd		      lda	#253
      2  298d				  -	      IF	!FPUSH
      3  298d				  -	      pha
      4  298d					      ENDIF
   4588  298d				   FPULL      SET	1
      0  298d					      andb
      1  298d				  -	      IF	!FPULL
      2  298d				  -	      pla
      3  298d					      ENDIF
      4  298d		       85 fc		      sta	R1
      5  298f		       68		      pla
      6  2990		       25 fc		      and	R1
      7  2992				  -	      IF	!FPUSH
      8  2992				  -	      pha
      9  2992					      ENDIF
   4590  2992				   FPUSH      SET	0
      0  2992					      pokeb_const_addr	#53269
      1  2992
      2  2992
      3  2992
      4  2992		       d0 15	   .ad	      EQU	#53269
      5  2992				  -	      IF	!FPULL
      6  2992				  -	      pla
      7  2992					      ENDIF
      8  2992		       8d 15 d0 	      sta	.ad
   4592  2995		       60		      rts
   4593  2996
   4594  2996
   4595  2996
   4596  2996
   4597  2996				   _EI_5
   4598  2996		       4c 1a 2d 	      jmp	_EI_4
   4599  2999
   4600  2999
   4601  2999
   4602  2999
   4603  2999
   4604  2999
   4605  2999
   4606  2999				   _EL_4
   4607  2999				   FPULL      SET	0
      0  2999					      pwvar	_bullet_posx
      1  2999					      IF	!FPUSH
      2  2999		       ad b6 4a 	      lda	_bullet_posx
      3  299c		       48		      pha
      4  299d		       ad b7 4a 	      lda	_bullet_posx+1
      5  29a0		       48		      pha
      6  29a1				  -	      ELSE
      7  29a1				  -	      lda	_bullet_posx
      8  29a1				  -	      ldy	_bullet_posx+1
      9  29a1					      ENDIF
      0  29a1					      pbvar	_scroll
      0  29a1					      pbyte	_scroll
      1  29a1		       ad ae 4a 	      lda	_scroll
      2  29a4					      IF	!FPUSH
      3  29a4		       48		      pha
      4  29a5					      ENDIF
      0  29a5					      btow
      1  29a5		       a9 00		      lda	#$00
      2  29a7		       48		      pha
      0  29a8					      subw
      1  29a8		       ba		      tsx
      2  29a9		       bd 04 01 	      lda.wx	stack+4
      3  29ac		       38		      sec
      4  29ad		       fd 02 01 	      sbc.wx	stack+2
      5  29b0		       9d 04 01 	      sta.wx	stack+4
      6  29b3		       bd 03 01 	      lda.wx	stack+3
      7  29b6		       fd 01 01 	      sbc.wx	stack+1
      8  29b9		       9d 03 01 	      sta.wx	stack+3
      9  29bc		       e8		      inx
     10  29bd		       e8		      inx
     11  29be		       9a		      txs
      0  29bf					      rshiftwc	3
      1  29bf		       ba		      tsx
      2  29c0					      REPEAT	3
      3  29c0		       5e 01 01 	      lsr.wx	stack+1
      4  29c3		       7e 02 01 	      ror.wx	stack+2
      2  29c3					      REPEND
      3  29c6		       5e 01 01 	      lsr.wx	stack+1
      4  29c9		       7e 02 01 	      ror.wx	stack+2
      2  29c9					      REPEND
      3  29cc		       5e 01 01 	      lsr.wx	stack+1
      4  29cf		       7e 02 01 	      ror.wx	stack+2
      5  29d2					      REPEND
      0  29d2					      wtob
      1  29d2		       68		      pla
      0  29d3					      pbyte	#3
      1  29d3		       a9 03		      lda	#3
      2  29d5					      IF	!FPUSH
      3  29d5		       48		      pha
      4  29d6					      ENDIF
      0  29d6					      subb
      1  29d6		       ba		      tsx
      2  29d7		       bd 02 01 	      lda.wx	stack+2
      3  29da		       38		      sec
      4  29db		       fd 01 01 	      sbc.wx	stack+1
      5  29de		       9d 02 01 	      sta.wx	stack+2
      6  29e1		       68		      pla
      0  29e2					      plb2var	_detect_collisions.col
      1  29e2					      IF	!FPULL
      2  29e2		       68		      pla
      3  29e3					      ENDIF
      4  29e3		       8d e0 4a 	      sta	_detect_collisions.col
   4617  29e3				   FPUSH      SET	1
      0  29e6					      opt_pbyte_pbyte_sub	_bullet_posy, #50
      1  29e6
      2  29e6
      3  29e6
      4  29e6
      5  29e6
      6  29e6		       ad b8 4a 	      lda	_bullet_posy
      7  29e9		       38		      sec
      8  29ea		       e9 32		      sbc	#50
      9  29ec				  -	      IF	!FPUSH
     10  29ec				  -	      pha
     11  29ec					      ENDIF
   4619  29ec				   FPULL      SET	1
      0  29ec					      rshiftbc	3
      1  29ec				  -	      IF	!FPULL
      2  29ec				  -	      pla
      3  29ec					      ENDIF
      4  29ec					      REPEAT	3
      5  29ec		       4a		      lsr
      4  29ec					      REPEND
      5  29ed		       4a		      lsr
      4  29ed					      REPEND
      5  29ee		       4a		      lsr
      6  29ef					      REPEND
      7  29ef				  -	      IF	!FPUSH
      8  29ef				  -	      pha
      9  29ef					      ENDIF
   4621  29ef				   FPUSH      SET	0
      0  29ef					      plb2var	_detect_collisions.row
      1  29ef				  -	      IF	!FPULL
      2  29ef				  -	      pla
      3  29ef					      ENDIF
      4  29ef		       8d e1 4a 	      sta	_detect_collisions.row
   4623  29ef				   FPULL      SET	0
      0  29f2					      pword	#1024
      1  29f2					      IF	!FPUSH
      2  29f2		       a9 00		      lda	#<#1024
      3  29f4		       48		      pha
      4  29f5		       a9 04		      lda	#>#1024
      5  29f7		       48		      pha
      6  29f8				  -	      ELSE
      7  29f8				  -	      lda	#<#1024
      8  29f8				  -	      ldy	#>#1024
      9  29f8					      ENDIF
      0  29f8					      pbvar	_detect_collisions.col
      0  29f8					      pbyte	_detect_collisions.col
      1  29f8		       ad e0 4a 	      lda	_detect_collisions.col
      2  29fb					      IF	!FPUSH
      3  29fb		       48		      pha
      4  29fc					      ENDIF
      0  29fc					      btow
      1  29fc		       a9 00		      lda	#$00
      2  29fe		       48		      pha
      0  29ff					      addw
      1  29ff		       ba		      tsx
      2  2a00		       bd 02 01 	      lda.wx	stack+2
      3  2a03		       18		      clc
      4  2a04		       7d 04 01 	      adc.wx	stack+4
      5  2a07		       9d 04 01 	      sta.wx	stack+4
      6  2a0a		       68		      pla
      7  2a0b		       7d 03 01 	      adc.wx	stack+3
      8  2a0e		       9d 03 01 	      sta.wx	stack+3
      9  2a11		       68		      pla
      0  2a12					      pbyte	#40
      1  2a12		       a9 28		      lda	#40
      2  2a14					      IF	!FPUSH
      3  2a14		       48		      pha
      4  2a15					      ENDIF
      0  2a15					      btow
      1  2a15		       a9 00		      lda	#$00
      2  2a17		       48		      pha
      0  2a18					      pbvar	_detect_collisions.row
      0  2a18					      pbyte	_detect_collisions.row
      1  2a18		       ad e1 4a 	      lda	_detect_collisions.row
      2  2a1b					      IF	!FPUSH
      3  2a1b		       48		      pha
      4  2a1c					      ENDIF
      0  2a1c					      btow
      1  2a1c		       a9 00		      lda	#$00
      2  2a1e		       48		      pha
      0  2a1f					      mulw
      1  2a1f					      IF	!FPULL
      2  2a1f		       68		      pla
      3  2a20		       85 fc		      sta	R1
      4  2a22		       68		      pla
      5  2a23		       85 fb		      sta	R0
      6  2a25				  -	      ELSE
      7  2a25				  -	      sta	R0
      8  2a25				  -	      sty	R1
      9  2a25					      ENDIF
     10  2a25		       68		      pla
     11  2a26		       85 fe		      sta	R3
     12  2a28		       68		      pla
     13  2a29		       85 fd		      sta	R2
     14  2a2b		       20 0d 08 	      jsr	NUCL_SMUL16
     15  2a2e					      IF	!FPUSH
     16  2a2e		       a5 fb		      lda	R0
     17  2a30		       48		      pha
     18  2a31		       a5 fc		      lda	R1
     19  2a33		       48		      pha
     20  2a34				  -	      ELSE
     21  2a34				  -	      lda	R0
     22  2a34				  -	      ldy	R1
     23  2a34					      ENDIF
      0  2a34					      addw
      1  2a34		       ba		      tsx
      2  2a35		       bd 02 01 	      lda.wx	stack+2
      3  2a38		       18		      clc
      4  2a39		       7d 04 01 	      adc.wx	stack+4
      5  2a3c		       9d 04 01 	      sta.wx	stack+4
      6  2a3f		       68		      pla
      7  2a40		       7d 03 01 	      adc.wx	stack+3
      8  2a43		       9d 03 01 	      sta.wx	stack+3
      9  2a46		       68		      pla
      0  2a47					      plw2var	_last_killed_enemy
      1  2a47					      IF	!FPULL
      2  2a47		       68		      pla
      3  2a48		       8d ba 4a 	      sta	_last_killed_enemy+1
      4  2a4b		       68		      pla
      5  2a4c		       8d b9 4a 	      sta	_last_killed_enemy
      6  2a4f				  -	      ELSE
      7  2a4f				  -	      sta	_last_killed_enemy
      8  2a4f				  -	      sty	_last_killed_enemy+1
      9  2a4f					      ENDIF
   4635  2a4f				   FPUSH      SET	1
      0  2a4f					      pwvar	_last_killed_enemy
      1  2a4f				  -	      IF	!FPUSH
      2  2a4f				  -	      lda	_last_killed_enemy
      3  2a4f				  -	      pha
      4  2a4f				  -	      lda	_last_killed_enemy+1
      5  2a4f				  -	      pha
      6  2a4f					      ELSE
      7  2a4f		       ad b9 4a 	      lda	_last_killed_enemy
      8  2a52		       ac ba 4a 	      ldy	_last_killed_enemy+1
      9  2a55					      ENDIF
   4637  2a55				   FPULL      SET	1
      0  2a55					      peekb
      1  2a55				  -	      IF	!FPULL
      2  2a55				  -	      pla
      3  2a55				  -	      sta	.selfmod_code+2
      4  2a55				  -	      pla
      5  2a55				  -	      sta	.selfmod_code+1
      6  2a55					      ELSE
      7  2a55		       8d 5c 2a 	      sta	.selfmod_code+1
      8  2a58		       8c 5d 2a 	      sty	.selfmod_code+2
      9  2a5b					      ENDIF
     10  2a5b				   .selfmod_code
     11  2a5b		       ad 00 00 	      lda.w	$0000
     12  2a5e				  -	      IF	!FPUSH
     13  2a5e				  -	      pha
     14  2a5e					      ENDIF
   4639  2a5e				   FPUSH      SET	0
      0  2a5e					      plb2var	_detect_collisions.char
      1  2a5e				  -	      IF	!FPULL
      2  2a5e				  -	      pla
      3  2a5e					      ENDIF
      4  2a5e		       8d e4 4a 	      sta	_detect_collisions.char
   4641  2a5e				   FPULL      SET	0
      0  2a61					      pbyte	#255
      1  2a61		       a9 ff		      lda	#255
      2  2a63					      IF	!FPUSH
      3  2a63		       48		      pha
      4  2a64					      ENDIF
      0  2a64					      opt_pbyte_pbyte_sub	_detect_collisions.row, _enemy_posy
      1  2a64
      2  2a64
      3  2a64
      4  2a64
      5  2a64
      6  2a64		       ad e1 4a 	      lda	_detect_collisions.row
      7  2a67		       38		      sec
      8  2a68		       ed b0 4a 	      sbc	_enemy_posy
      9  2a6b					      IF	!FPUSH
     10  2a6b		       48		      pha
     11  2a6c					      ENDIF
      0  2a6c					      pbyte	#5
      1  2a6c		       a9 05		      lda	#5
      2  2a6e					      IF	!FPUSH
      3  2a6e		       48		      pha
      4  2a6f					      ENDIF
      0  2a6f					      subb
      1  2a6f		       ba		      tsx
      2  2a70		       bd 02 01 	      lda.wx	stack+2
      3  2a73		       38		      sec
      4  2a74		       fd 01 01 	      sbc.wx	stack+1
      5  2a77		       9d 02 01 	      sta.wx	stack+2
      6  2a7a		       68		      pla
   4646  2a7a				   FPUSH      SET	1
      0  2a7b					      pbyte	#6
      1  2a7b		       a9 06		      lda	#6
      2  2a7d				  -	      IF	!FPUSH
      3  2a7d				  -	      pha
      4  2a7d					      ENDIF
   4648  2a7d				   FPULL      SET	1
   4649  2a7d				   FPUSH      SET	0
      0  2a7d					      mulb
      1  2a7d				  -	      IF	!FPULL
      2  2a7d				  -	      pla
      3  2a7d					      ENDIF
      4  2a7d		       85 fc		      sta	R1
      5  2a7f		       68		      pla
      6  2a80		       85 fd		      sta	R2
      7  2a82		       a9 00		      lda	#$00
      8  2a84		       f0 05		      beq	.enterLoop
      9  2a86				   .doAdd
     10  2a86		       18		      clc
     11  2a87		       65 fc		      adc	R1
     12  2a89				   .loop
     13  2a89		       06 fc		      asl	R1
     14  2a8b				   .enterLoop
     15  2a8b		       46 fd		      lsr	R2
     16  2a8d		       b0 f7		      bcs	.doAdd
     17  2a8f		       d0 f8		      bne	.loop
     18  2a91				   .end
     19  2a91					      IF	!FPUSH
     20  2a91		       48		      pha
     21  2a92					      ENDIF
   4651  2a92				   FPULL      SET	0
   4652  2a92				   FPUSH      SET	1
      0  2a92					      opt_pbyte_pbyte_sub	_detect_collisions.col, _enemy_posx
      1  2a92
      2  2a92
      3  2a92
      4  2a92
      5  2a92
      6  2a92		       ad e0 4a 	      lda	_detect_collisions.col
      7  2a95		       38		      sec
      8  2a96		       ed af 4a 	      sbc	_enemy_posx
      9  2a99				  -	      IF	!FPUSH
     10  2a99				  -	      pha
     11  2a99					      ENDIF
   4654  2a99				   FPULL      SET	1
      0  2a99					      rshiftbc	1
      1  2a99				  -	      IF	!FPULL
      2  2a99				  -	      pla
      3  2a99					      ENDIF
      4  2a99					      REPEAT	1
      5  2a99		       4a		      lsr
      6  2a9a					      REPEND
      7  2a9a				  -	      IF	!FPUSH
      8  2a9a				  -	      pha
      9  2a9a					      ENDIF
      0  2a9a					      addb
      1  2a9a				  -	      IF	!FPULL
      2  2a9a				  -	      pla
      3  2a9a					      ENDIF
      4  2a9a		       85 fb		      sta	R0
      5  2a9c		       68		      pla
      6  2a9d		       18		      clc
      7  2a9e		       65 fb		      adc	R0
      8  2aa0				  -	      IF	!FPUSH
      9  2aa0				  -	      pha
     10  2aa0					      ENDIF
   4657  2aa0				   FPUSH      SET	0
      0  2aa0					      plbarray_fast	_enemy_map
      1  2aa0				  -	      IF	!FPULL
      2  2aa0				  -	      pla
      3  2aa0					      ENDIF
      4  2aa0		       aa		      tax
      5  2aa1		       68		      pla
      6  2aa2		       9d 66 4a 	      sta	_enemy_map,x
   4659  2aa2				   FPULL      SET	0
      0  2aa5					      pbyte_pbyte_cmpbeq	_detect_collisions.char, #86
      1  2aa5
      2  2aa5
      3  2aa5
      4  2aa5
      5  2aa5
      6  2aa5		       ad e4 4a 	      lda	_detect_collisions.char
      7  2aa8		       c9 56		      cmp	#86
      8  2aaa		       f0 06		      beq	.true
      0  2aac					      pzero
      1  2aac		       a9 00		      lda	#$00
      2  2aae					      IF	!FPUSH
      3  2aae		       48		      pha
      4  2aaf					      ENDIF
     10  2aaf					      IF	!FPUSH
     11  2aaf		       4c b5 2a 	      jmp	*+6
     12  2ab2				  -	      ELSE
     13  2ab2				  -	      jmp	*+5
     14  2ab2					      ENDIF
     15  2ab2				   .true
      0  2ab2					      pone
      1  2ab2		       a9 01		      lda	#$01
      2  2ab4					      IF	!FPUSH
      3  2ab4		       48		      pha
      4  2ab5					      ENDIF
   4661  2ab5				   FPUSH      SET	1
      0  2ab5					      pbyte_pbyte_cmpbeq	_detect_collisions.char, #87
      1  2ab5
      2  2ab5
      3  2ab5
      4  2ab5
      5  2ab5
      6  2ab5		       ad e4 4a 	      lda	_detect_collisions.char
      7  2ab8		       c9 57		      cmp	#87
      8  2aba		       f0 05		      beq	.true
      0  2abc					      pzero
      1  2abc		       a9 00		      lda	#$00
      2  2abe				  -	      IF	!FPUSH
      3  2abe				  -	      pha
      4  2abe					      ENDIF
     10  2abe				  -	      IF	!FPUSH
     11  2abe				  -	      jmp	*+6
     12  2abe					      ELSE
     13  2abe		       4c c3 2a 	      jmp	*+5
     14  2ac1					      ENDIF
     15  2ac1				   .true
      0  2ac1					      pone
      1  2ac1		       a9 01		      lda	#$01
      2  2ac3				  -	      IF	!FPUSH
      3  2ac3				  -	      pha
      4  2ac3					      ENDIF
   4663  2ac3				   FPULL      SET	1
      0  2ac3					      orb
      1  2ac3				  -	      IF	!FPULL
      2  2ac3				  -	      pla
      3  2ac3					      ENDIF
      4  2ac3		       85 fc		      sta	R1
      5  2ac5		       68		      pla
      6  2ac6		       05 fc		      ora	R1
      7  2ac8				  -	      IF	!FPUSH
      8  2ac8				  -	      pha
      9  2ac8					      ENDIF
   4665  2ac8				   FPUSH      SET	0
      0  2ac8					      cond_stmt	_EI_65542, _EL_65542
      1  2ac8				  -	      IF	!FPULL
      2  2ac8				  -	      pla
      3  2ac8					      ENDIF
      4  2ac8		       d0 03		      bne	*+5
      5  2aca				  -	      IFCONST	_EL_65542
      6  2aca				  -	      jmp	_EL_65542
      7  2aca					      ELSE
      8  2aca		       4c ce 2a 	      jmp	_EI_65542
      9  2acd					      ENDIF
   4667  2acd		       60		      rts
   4668  2ace
   4669  2ace
   4670  2ace
   4671  2ace
   4672  2ace				   _EI_65542
   4673  2ace				   FPULL      SET	0
      0  2ace					      opt_pbyte_pbyte_and	_detect_collisions.char, #1
      1  2ace
      2  2ace
      3  2ace
      4  2ace
      5  2ace
      6  2ace		       ad e4 4a 	      lda	_detect_collisions.char
      7  2ad1		       29 01		      and	#1
      8  2ad3					      IF	!FPUSH
      9  2ad3		       48		      pha
     10  2ad4					      ENDIF
   4675  2ad4				   FPUSH      SET	1
      0  2ad4					      pbyte	#1
      1  2ad4		       a9 01		      lda	#1
      2  2ad6				  -	      IF	!FPUSH
      3  2ad6				  -	      pha
      4  2ad6					      ENDIF
   4677  2ad6				   FPULL      SET	1
      0  2ad6					      cmpbeq
      1  2ad6				  -	      IF	!FPULL
      2  2ad6				  -	      pla
      3  2ad6					      ENDIF
      4  2ad6		       85 fc		      sta	R1
      5  2ad8		       68		      pla
      6  2ad9		       c5 fc		      cmp	R1
      7  2adb		       f0 05		      beq	.pht
      0  2add					      pzero
      1  2add		       a9 00		      lda	#$00
      2  2adf				  -	      IF	!FPUSH
      3  2adf				  -	      pha
      4  2adf					      ENDIF
      9  2adf				  -	      IF	!FPUSH
     10  2adf				  -	      jmp	*+6
     11  2adf					      ELSE
     12  2adf		       4c e4 2a 	      jmp	*+5
     13  2ae2					      ENDIF
      0  2ae2				   .pht       pone
      1  2ae2		       a9 01		      lda	#$01
      2  2ae4				  -	      IF	!FPUSH
      3  2ae4				  -	      pha
      4  2ae4					      ENDIF
   4679  2ae4				   FPUSH      SET	0
      0  2ae4					      cond_stmt	_EI_7, _EL_7
      1  2ae4				  -	      IF	!FPULL
      2  2ae4				  -	      pla
      3  2ae4					      ENDIF
      4  2ae4		       d0 03		      bne	*+5
      5  2ae6					      IFCONST	_EL_7
      6  2ae6		       4c bc 2b 	      jmp	_EL_7
      7  2ae9				  -	      ELSE
      8  2ae9				  -	      jmp	_EI_7
      9  2ae9					      ENDIF
   4681  2ae9				   FPULL      SET	0
      0  2ae9					      pbyte	#77
      1  2ae9		       a9 4d		      lda	#77
      2  2aeb					      IF	!FPUSH
      3  2aeb		       48		      pha
      4  2aec					      ENDIF
      0  2aec					      pbvar	_detect_collisions.row
      0  2aec					      pbyte	_detect_collisions.row
      1  2aec		       ad e1 4a 	      lda	_detect_collisions.row
      2  2aef					      IF	!FPUSH
      3  2aef		       48		      pha
      4  2af0					      ENDIF
      0  2af0					      btow
      1  2af0		       a9 00		      lda	#$00
      2  2af2		       48		      pha
   4685  2af2				   FPUSH      SET	1
      0  2af3					      pword	#40
      1  2af3				  -	      IF	!FPUSH
      2  2af3				  -	      lda	#<#40
      3  2af3				  -	      pha
      4  2af3				  -	      lda	#>#40
      5  2af3				  -	      pha
      6  2af3					      ELSE
      7  2af3		       a9 28		      lda	#<#40
      8  2af5		       a0 00		      ldy	#>#40
      9  2af7					      ENDIF
   4687  2af7				   FPULL      SET	1
   4688  2af7				   FPUSH      SET	0
      0  2af7					      mulw
      1  2af7				  -	      IF	!FPULL
      2  2af7				  -	      pla
      3  2af7				  -	      sta	R1
      4  2af7				  -	      pla
      5  2af7				  -	      sta	R0
      6  2af7					      ELSE
      7  2af7		       85 fb		      sta	R0
      8  2af9		       84 fc		      sty	R1
      9  2afb					      ENDIF
     10  2afb		       68		      pla
     11  2afc		       85 fe		      sta	R3
     12  2afe		       68		      pla
     13  2aff		       85 fd		      sta	R2
     14  2b01		       20 0d 08 	      jsr	NUCL_SMUL16
     15  2b04					      IF	!FPUSH
     16  2b04		       a5 fb		      lda	R0
     17  2b06		       48		      pha
     18  2b07		       a5 fc		      lda	R1
     19  2b09		       48		      pha
     20  2b0a				  -	      ELSE
     21  2b0a				  -	      lda	R0
     22  2b0a				  -	      ldy	R1
     23  2b0a					      ENDIF
   4690  2b0a				   FPULL      SET	0
      0  2b0a					      pbvar	_detect_collisions.col
      0  2b0a					      pbyte	_detect_collisions.col
      1  2b0a		       ad e0 4a 	      lda	_detect_collisions.col
      2  2b0d					      IF	!FPUSH
      3  2b0d		       48		      pha
      4  2b0e					      ENDIF
      0  2b0e					      btow
      1  2b0e		       a9 00		      lda	#$00
      2  2b10		       48		      pha
      0  2b11					      addw
      1  2b11		       ba		      tsx
      2  2b12		       bd 02 01 	      lda.wx	stack+2
      3  2b15		       18		      clc
      4  2b16		       7d 04 01 	      adc.wx	stack+4
      5  2b19		       9d 04 01 	      sta.wx	stack+4
      6  2b1c		       68		      pla
      7  2b1d		       7d 03 01 	      adc.wx	stack+3
      8  2b20		       9d 03 01 	      sta.wx	stack+3
      9  2b23		       68		      pla
      0  2b24					      pword	#1024
      1  2b24					      IF	!FPUSH
      2  2b24		       a9 00		      lda	#<#1024
      3  2b26		       48		      pha
      4  2b27		       a9 04		      lda	#>#1024
      5  2b29		       48		      pha
      6  2b2a				  -	      ELSE
      7  2b2a				  -	      lda	#<#1024
      8  2b2a				  -	      ldy	#>#1024
      9  2b2a					      ENDIF
      0  2b2a					      addw
      1  2b2a		       ba		      tsx
      2  2b2b		       bd 02 01 	      lda.wx	stack+2
      3  2b2e		       18		      clc
      4  2b2f		       7d 04 01 	      adc.wx	stack+4
      5  2b32		       9d 04 01 	      sta.wx	stack+4
      6  2b35		       68		      pla
      7  2b36		       7d 03 01 	      adc.wx	stack+3
      8  2b39		       9d 03 01 	      sta.wx	stack+3
      9  2b3c		       68		      pla
      0  2b3d					      pokeb
      1  2b3d					      IF	!FPULL
      2  2b3d		       68		      pla
      3  2b3e		       8d 48 2b 	      sta	.selfmod_code+2
      4  2b41		       68		      pla
      5  2b42		       8d 47 2b 	      sta	.selfmod_code+1
      6  2b45				  -	      ELSE
      7  2b45				  -	      sta	.selfmod_code+1
      8  2b45				  -	      sty	.selfmod_code+2
      9  2b45					      ENDIF
     10  2b45		       68		      pla
     11  2b46				   .selfmod_code
     12  2b46		       8d 00 00 	      sta.w	$0000
      0  2b49					      pbyte	#76
      1  2b49		       a9 4c		      lda	#76
      2  2b4b					      IF	!FPUSH
      3  2b4b		       48		      pha
      4  2b4c					      ENDIF
      0  2b4c					      pbvar	_detect_collisions.row
      0  2b4c					      pbyte	_detect_collisions.row
      1  2b4c		       ad e1 4a 	      lda	_detect_collisions.row
      2  2b4f					      IF	!FPUSH
      3  2b4f		       48		      pha
      4  2b50					      ENDIF
      0  2b50					      btow
      1  2b50		       a9 00		      lda	#$00
      2  2b52		       48		      pha
   4700  2b52				   FPUSH      SET	1
      0  2b53					      pword	#40
      1  2b53				  -	      IF	!FPUSH
      2  2b53				  -	      lda	#<#40
      3  2b53				  -	      pha
      4  2b53				  -	      lda	#>#40
      5  2b53				  -	      pha
      6  2b53					      ELSE
      7  2b53		       a9 28		      lda	#<#40
      8  2b55		       a0 00		      ldy	#>#40
      9  2b57					      ENDIF
   4702  2b57				   FPULL      SET	1
   4703  2b57				   FPUSH      SET	0
      0  2b57					      mulw
      1  2b57				  -	      IF	!FPULL
      2  2b57				  -	      pla
      3  2b57				  -	      sta	R1
      4  2b57				  -	      pla
      5  2b57				  -	      sta	R0
      6  2b57					      ELSE
      7  2b57		       85 fb		      sta	R0
      8  2b59		       84 fc		      sty	R1
      9  2b5b					      ENDIF
     10  2b5b		       68		      pla
     11  2b5c		       85 fe		      sta	R3
     12  2b5e		       68		      pla
     13  2b5f		       85 fd		      sta	R2
     14  2b61		       20 0d 08 	      jsr	NUCL_SMUL16
     15  2b64					      IF	!FPUSH
     16  2b64		       a5 fb		      lda	R0
     17  2b66		       48		      pha
     18  2b67		       a5 fc		      lda	R1
     19  2b69		       48		      pha
     20  2b6a				  -	      ELSE
     21  2b6a				  -	      lda	R0
     22  2b6a				  -	      ldy	R1
     23  2b6a					      ENDIF
   4705  2b6a				   FPULL      SET	0
      0  2b6a					      opt_pbyte_pbyte_sub	_detect_collisions.col, #1
      1  2b6a
      2  2b6a
      3  2b6a
      4  2b6a
      5  2b6a
      6  2b6a		       ad e0 4a 	      lda	_detect_collisions.col
      7  2b6d		       38		      sec
      8  2b6e		       e9 01		      sbc	#1
      9  2b70					      IF	!FPUSH
     10  2b70		       48		      pha
     11  2b71					      ENDIF
      0  2b71					      btow
      1  2b71		       a9 00		      lda	#$00
      2  2b73		       48		      pha
      0  2b74					      addw
      1  2b74		       ba		      tsx
      2  2b75		       bd 02 01 	      lda.wx	stack+2
      3  2b78		       18		      clc
      4  2b79		       7d 04 01 	      adc.wx	stack+4
      5  2b7c		       9d 04 01 	      sta.wx	stack+4
      6  2b7f		       68		      pla
      7  2b80		       7d 03 01 	      adc.wx	stack+3
      8  2b83		       9d 03 01 	      sta.wx	stack+3
      9  2b86		       68		      pla
      0  2b87					      pword	#1024
      1  2b87					      IF	!FPUSH
      2  2b87		       a9 00		      lda	#<#1024
      3  2b89		       48		      pha
      4  2b8a		       a9 04		      lda	#>#1024
      5  2b8c		       48		      pha
      6  2b8d				  -	      ELSE
      7  2b8d				  -	      lda	#<#1024
      8  2b8d				  -	      ldy	#>#1024
      9  2b8d					      ENDIF
      0  2b8d					      addw
      1  2b8d		       ba		      tsx
      2  2b8e		       bd 02 01 	      lda.wx	stack+2
      3  2b91		       18		      clc
      4  2b92		       7d 04 01 	      adc.wx	stack+4
      5  2b95		       9d 04 01 	      sta.wx	stack+4
      6  2b98		       68		      pla
      7  2b99		       7d 03 01 	      adc.wx	stack+3
      8  2b9c		       9d 03 01 	      sta.wx	stack+3
      9  2b9f		       68		      pla
      0  2ba0					      pokeb
      1  2ba0					      IF	!FPULL
      2  2ba0		       68		      pla
      3  2ba1		       8d ab 2b 	      sta	.selfmod_code+2
      4  2ba4		       68		      pla
      5  2ba5		       8d aa 2b 	      sta	.selfmod_code+1
      6  2ba8				  -	      ELSE
      7  2ba8				  -	      sta	.selfmod_code+1
      8  2ba8				  -	      sty	.selfmod_code+2
      9  2ba8					      ENDIF
     10  2ba8		       68		      pla
     11  2ba9				   .selfmod_code
     12  2ba9		       8d 00 00 	      sta.w	$0000
      0  2bac					      decw	_last_killed_enemy
      1  2bac		       ce b9 4a 	      dec	_last_killed_enemy
      2  2baf		       a9 ff		      lda	#$ff
      3  2bb1		       cd b9 4a 	      cmp	_last_killed_enemy
      4  2bb4		       d0 03		      bne	.skip
      5  2bb6		       ce ba 4a 	      dec	_last_killed_enemy+1
      6  2bb9				   .skip
   4713  2bb9		       4c 7f 2c 	      jmp	_EI_7
   4714  2bbc				   _EL_7
      0  2bbc					      pbyte	#76
      1  2bbc		       a9 4c		      lda	#76
      2  2bbe					      IF	!FPUSH
      3  2bbe		       48		      pha
      4  2bbf					      ENDIF
      0  2bbf					      pbvar	_detect_collisions.row
      0  2bbf					      pbyte	_detect_collisions.row
      1  2bbf		       ad e1 4a 	      lda	_detect_collisions.row
      2  2bc2					      IF	!FPUSH
      3  2bc2		       48		      pha
      4  2bc3					      ENDIF
      0  2bc3					      btow
      1  2bc3		       a9 00		      lda	#$00
      2  2bc5		       48		      pha
   4718  2bc5				   FPUSH      SET	1
      0  2bc6					      pword	#40
      1  2bc6				  -	      IF	!FPUSH
      2  2bc6				  -	      lda	#<#40
      3  2bc6				  -	      pha
      4  2bc6				  -	      lda	#>#40
      5  2bc6				  -	      pha
      6  2bc6					      ELSE
      7  2bc6		       a9 28		      lda	#<#40
      8  2bc8		       a0 00		      ldy	#>#40
      9  2bca					      ENDIF
   4720  2bca				   FPULL      SET	1
   4721  2bca				   FPUSH      SET	0
      0  2bca					      mulw
      1  2bca				  -	      IF	!FPULL
      2  2bca				  -	      pla
      3  2bca				  -	      sta	R1
      4  2bca				  -	      pla
      5  2bca				  -	      sta	R0
      6  2bca					      ELSE
      7  2bca		       85 fb		      sta	R0
      8  2bcc		       84 fc		      sty	R1
      9  2bce					      ENDIF
     10  2bce		       68		      pla
     11  2bcf		       85 fe		      sta	R3
     12  2bd1		       68		      pla
     13  2bd2		       85 fd		      sta	R2
     14  2bd4		       20 0d 08 	      jsr	NUCL_SMUL16
     15  2bd7					      IF	!FPUSH
     16  2bd7		       a5 fb		      lda	R0
     17  2bd9		       48		      pha
     18  2bda		       a5 fc		      lda	R1
     19  2bdc		       48		      pha
     20  2bdd				  -	      ELSE
     21  2bdd				  -	      lda	R0
     22  2bdd				  -	      ldy	R1
     23  2bdd					      ENDIF
   4723  2bdd				   FPULL      SET	0
      0  2bdd					      pbvar	_detect_collisions.col
      0  2bdd					      pbyte	_detect_collisions.col
      1  2bdd		       ad e0 4a 	      lda	_detect_collisions.col
      2  2be0					      IF	!FPUSH
      3  2be0		       48		      pha
      4  2be1					      ENDIF
      0  2be1					      btow
      1  2be1		       a9 00		      lda	#$00
      2  2be3		       48		      pha
      0  2be4					      addw
      1  2be4		       ba		      tsx
      2  2be5		       bd 02 01 	      lda.wx	stack+2
      3  2be8		       18		      clc
      4  2be9		       7d 04 01 	      adc.wx	stack+4
      5  2bec		       9d 04 01 	      sta.wx	stack+4
      6  2bef		       68		      pla
      7  2bf0		       7d 03 01 	      adc.wx	stack+3
      8  2bf3		       9d 03 01 	      sta.wx	stack+3
      9  2bf6		       68		      pla
      0  2bf7					      pword	#1024
      1  2bf7					      IF	!FPUSH
      2  2bf7		       a9 00		      lda	#<#1024
      3  2bf9		       48		      pha
      4  2bfa		       a9 04		      lda	#>#1024
      5  2bfc		       48		      pha
      6  2bfd				  -	      ELSE
      7  2bfd				  -	      lda	#<#1024
      8  2bfd				  -	      ldy	#>#1024
      9  2bfd					      ENDIF
      0  2bfd					      addw
      1  2bfd		       ba		      tsx
      2  2bfe		       bd 02 01 	      lda.wx	stack+2
      3  2c01		       18		      clc
      4  2c02		       7d 04 01 	      adc.wx	stack+4
      5  2c05		       9d 04 01 	      sta.wx	stack+4
      6  2c08		       68		      pla
      7  2c09		       7d 03 01 	      adc.wx	stack+3
      8  2c0c		       9d 03 01 	      sta.wx	stack+3
      9  2c0f		       68		      pla
      0  2c10					      pokeb
      1  2c10					      IF	!FPULL
      2  2c10		       68		      pla
      3  2c11		       8d 1b 2c 	      sta	.selfmod_code+2
      4  2c14		       68		      pla
      5  2c15		       8d 1a 2c 	      sta	.selfmod_code+1
      6  2c18				  -	      ELSE
      7  2c18				  -	      sta	.selfmod_code+1
      8  2c18				  -	      sty	.selfmod_code+2
      9  2c18					      ENDIF
     10  2c18		       68		      pla
     11  2c19				   .selfmod_code
     12  2c19		       8d 00 00 	      sta.w	$0000
      0  2c1c					      pbyte	#77
      1  2c1c		       a9 4d		      lda	#77
      2  2c1e					      IF	!FPUSH
      3  2c1e		       48		      pha
      4  2c1f					      ENDIF
      0  2c1f					      pbvar	_detect_collisions.row
      0  2c1f					      pbyte	_detect_collisions.row
      1  2c1f		       ad e1 4a 	      lda	_detect_collisions.row
      2  2c22					      IF	!FPUSH
      3  2c22		       48		      pha
      4  2c23					      ENDIF
      0  2c23					      btow
      1  2c23		       a9 00		      lda	#$00
      2  2c25		       48		      pha
   4733  2c25				   FPUSH      SET	1
      0  2c26					      pword	#40
      1  2c26				  -	      IF	!FPUSH
      2  2c26				  -	      lda	#<#40
      3  2c26				  -	      pha
      4  2c26				  -	      lda	#>#40
      5  2c26				  -	      pha
      6  2c26					      ELSE
      7  2c26		       a9 28		      lda	#<#40
      8  2c28		       a0 00		      ldy	#>#40
      9  2c2a					      ENDIF
   4735  2c2a				   FPULL      SET	1
   4736  2c2a				   FPUSH      SET	0
      0  2c2a					      mulw
      1  2c2a				  -	      IF	!FPULL
      2  2c2a				  -	      pla
      3  2c2a				  -	      sta	R1
      4  2c2a				  -	      pla
      5  2c2a				  -	      sta	R0
      6  2c2a					      ELSE
      7  2c2a		       85 fb		      sta	R0
      8  2c2c		       84 fc		      sty	R1
      9  2c2e					      ENDIF
     10  2c2e		       68		      pla
     11  2c2f		       85 fe		      sta	R3
     12  2c31		       68		      pla
     13  2c32		       85 fd		      sta	R2
     14  2c34		       20 0d 08 	      jsr	NUCL_SMUL16
     15  2c37					      IF	!FPUSH
     16  2c37		       a5 fb		      lda	R0
     17  2c39		       48		      pha
     18  2c3a		       a5 fc		      lda	R1
     19  2c3c		       48		      pha
     20  2c3d				  -	      ELSE
     21  2c3d				  -	      lda	R0
     22  2c3d				  -	      ldy	R1
     23  2c3d					      ENDIF
   4738  2c3d				   FPULL      SET	0
      0  2c3d					      opt_pbyte_pbyte_add	_detect_collisions.col, #1
      1  2c3d
      2  2c3d
      3  2c3d
      4  2c3d
      5  2c3d
      6  2c3d		       ad e0 4a 	      lda	_detect_collisions.col
      7  2c40		       18		      clc
      8  2c41		       69 01		      adc	#1
      9  2c43					      IF	!FPUSH
     10  2c43		       48		      pha
     11  2c44					      ENDIF
      0  2c44					      btow
      1  2c44		       a9 00		      lda	#$00
      2  2c46		       48		      pha
      0  2c47					      addw
      1  2c47		       ba		      tsx
      2  2c48		       bd 02 01 	      lda.wx	stack+2
      3  2c4b		       18		      clc
      4  2c4c		       7d 04 01 	      adc.wx	stack+4
      5  2c4f		       9d 04 01 	      sta.wx	stack+4
      6  2c52		       68		      pla
      7  2c53		       7d 03 01 	      adc.wx	stack+3
      8  2c56		       9d 03 01 	      sta.wx	stack+3
      9  2c59		       68		      pla
      0  2c5a					      pword	#1024
      1  2c5a					      IF	!FPUSH
      2  2c5a		       a9 00		      lda	#<#1024
      3  2c5c		       48		      pha
      4  2c5d		       a9 04		      lda	#>#1024
      5  2c5f		       48		      pha
      6  2c60				  -	      ELSE
      7  2c60				  -	      lda	#<#1024
      8  2c60				  -	      ldy	#>#1024
      9  2c60					      ENDIF
      0  2c60					      addw
      1  2c60		       ba		      tsx
      2  2c61		       bd 02 01 	      lda.wx	stack+2
      3  2c64		       18		      clc
      4  2c65		       7d 04 01 	      adc.wx	stack+4
      5  2c68		       9d 04 01 	      sta.wx	stack+4
      6  2c6b		       68		      pla
      7  2c6c		       7d 03 01 	      adc.wx	stack+3
      8  2c6f		       9d 03 01 	      sta.wx	stack+3
      9  2c72		       68		      pla
      0  2c73					      pokeb
      1  2c73					      IF	!FPULL
      2  2c73		       68		      pla
      3  2c74		       8d 7e 2c 	      sta	.selfmod_code+2
      4  2c77		       68		      pla
      5  2c78		       8d 7d 2c 	      sta	.selfmod_code+1
      6  2c7b				  -	      ELSE
      7  2c7b				  -	      sta	.selfmod_code+1
      8  2c7b				  -	      sty	.selfmod_code+2
      9  2c7b					      ENDIF
     10  2c7b		       68		      pla
     11  2c7c				   .selfmod_code
     12  2c7c		       8d 00 00 	      sta.w	$0000
   4745  2c7f				   _EI_7
      0  2c7f					      pbyte_pbyte_cmpbgte_cond	_detect_collisions.char, #84, _EI_8, _EL_8
      1  2c7f
      2  2c7f
      3  2c7f		       ad e4 4a 	      lda	_detect_collisions.char
      4  2c82		       c9 54		      cmp	#84
      5  2c84		       b0 03		      bcs	*+5
      6  2c86					      IFCONST	_EL_8
      7  2c86		       4c a0 2c 	      jmp	_EL_8
      8  2c89				  -	      ELSE
      9  2c89				  -	      jmp	_EI_8
     10  2c89					      ENDIF
   4747  2c89				   FPUSH      SET	1
      0  2c89					      opt_pwvar_pword_add	_score, #20
      1  2c89
      2  2c89
      3  2c89
      4  2c89		       ad bb 4a 	      lda	_score
      5  2c8c		       18		      clc
      6  2c8d		       69 14		      adc	<#20
      7  2c8f				  -	      IF	!FPUSH
      8  2c8f				  -	      pha
      9  2c8f					      ELSE
     10  2c8f		       aa		      tax
     11  2c90					      ENDIF
     12  2c90		       ad bc 4a 	      lda	_score+1
     13  2c93		       69 00		      adc	>#20
     14  2c95				  -	      IF	!FPUSH
     15  2c95				  -	      pha
     16  2c95					      ELSE
     17  2c95		       a8		      tay
     18  2c96		       8a		      txa
     19  2c97					      ENDIF
   4749  2c97				   FPULL      SET	1
   4750  2c97				   FPUSH      SET	0
      0  2c97					      plw2var	_score
      1  2c97				  -	      IF	!FPULL
      2  2c97				  -	      pla
      3  2c97				  -	      sta	_score+1
      4  2c97				  -	      pla
      5  2c97				  -	      sta	_score
      6  2c97					      ELSE
      7  2c97		       8d bb 4a 	      sta	_score
      8  2c9a		       8c bc 4a 	      sty	_score+1
      9  2c9d					      ENDIF
   4752  2c9d		       4c d5 2c 	      jmp	_EI_8
   4753  2ca0
   4754  2ca0
   4755  2ca0
   4756  2ca0
   4757  2ca0
   4758  2ca0
   4759  2ca0
   4760  2ca0				   _EL_8
      0  2ca0					      pbyte_pbyte_cmpbgte_cond	_detect_collisions.char, #82, _EI_9, _EL_9
      1  2ca0
      2  2ca0
      3  2ca0		       ad e4 4a 	      lda	_detect_collisions.char
      4  2ca3		       c9 52		      cmp	#82
      5  2ca5		       b0 03		      bcs	*+5
      6  2ca7					      IFCONST	_EL_9
      7  2ca7		       4c c1 2c 	      jmp	_EL_9
      8  2caa				  -	      ELSE
      9  2caa				  -	      jmp	_EI_9
     10  2caa					      ENDIF
   4762  2caa				   FPULL      SET	0
   4763  2caa				   FPUSH      SET	1
      0  2caa					      opt_pwvar_pword_add	_score, #30
      1  2caa
      2  2caa
      3  2caa
      4  2caa		       ad bb 4a 	      lda	_score
      5  2cad		       18		      clc
      6  2cae		       69 1e		      adc	<#30
      7  2cb0				  -	      IF	!FPUSH
      8  2cb0				  -	      pha
      9  2cb0					      ELSE
     10  2cb0		       aa		      tax
     11  2cb1					      ENDIF
     12  2cb1		       ad bc 4a 	      lda	_score+1
     13  2cb4		       69 00		      adc	>#30
     14  2cb6				  -	      IF	!FPUSH
     15  2cb6				  -	      pha
     16  2cb6					      ELSE
     17  2cb6		       a8		      tay
     18  2cb7		       8a		      txa
     19  2cb8					      ENDIF
   4765  2cb8				   FPULL      SET	1
   4766  2cb8				   FPUSH      SET	0
      0  2cb8					      plw2var	_score
      1  2cb8				  -	      IF	!FPULL
      2  2cb8				  -	      pla
      3  2cb8				  -	      sta	_score+1
      4  2cb8				  -	      pla
      5  2cb8				  -	      sta	_score
      6  2cb8					      ELSE
      7  2cb8		       8d bb 4a 	      sta	_score
      8  2cbb		       8c bc 4a 	      sty	_score+1
      9  2cbe					      ENDIF
   4768  2cbe		       4c d5 2c 	      jmp	_EI_9
   4769  2cc1
   4770  2cc1
   4771  2cc1
   4772  2cc1
   4773  2cc1
   4774  2cc1
   4775  2cc1
   4776  2cc1				   _EL_9
   4777  2cc1				   FPULL      SET	0
   4778  2cc1				   FPUSH      SET	1
      0  2cc1					      opt_pwvar_pword_add	_score, #10
      1  2cc1
      2  2cc1
      3  2cc1
      4  2cc1		       ad bb 4a 	      lda	_score
      5  2cc4		       18		      clc
      6  2cc5		       69 0a		      adc	<#10
      7  2cc7				  -	      IF	!FPUSH
      8  2cc7				  -	      pha
      9  2cc7					      ELSE
     10  2cc7		       aa		      tax
     11  2cc8					      ENDIF
     12  2cc8		       ad bc 4a 	      lda	_score+1
     13  2ccb		       69 00		      adc	>#10
     14  2ccd				  -	      IF	!FPUSH
     15  2ccd				  -	      pha
     16  2ccd					      ELSE
     17  2ccd		       a8		      tay
     18  2cce		       8a		      txa
     19  2ccf					      ENDIF
   4780  2ccf				   FPULL      SET	1
   4781  2ccf				   FPUSH      SET	0
      0  2ccf					      plw2var	_score
      1  2ccf				  -	      IF	!FPULL
      2  2ccf				  -	      pla
      3  2ccf				  -	      sta	_score+1
      4  2ccf				  -	      pla
      5  2ccf				  -	      sta	_score
      6  2ccf					      ELSE
      7  2ccf		       8d bb 4a 	      sta	_score
      8  2cd2		       8c bc 4a 	      sty	_score+1
      9  2cd5					      ENDIF
   4783  2cd5
   4784  2cd5
   4785  2cd5
   4786  2cd5
   4787  2cd5
   4788  2cd5
   4789  2cd5
   4790  2cd5				   _EI_9
   4791  2cd5
   4792  2cd5
   4793  2cd5
   4794  2cd5
   4795  2cd5
   4796  2cd5
   4797  2cd5
   4798  2cd5				   _EI_8
   4799  2cd5				   FPULL      SET	0
   4800  2cd5				   FPUSH      SET	1
      0  2cd5					      pbyte	#0
      1  2cd5		       a9 00		      lda	#0
      2  2cd7				  -	      IF	!FPUSH
      3  2cd7				  -	      pha
      4  2cd7					      ENDIF
   4802  2cd7				   FPULL      SET	1
   4803  2cd7				   FPUSH      SET	0
      0  2cd7					      plb2var	_bullet_on
      1  2cd7				  -	      IF	!FPULL
      2  2cd7				  -	      pla
      3  2cd7					      ENDIF
      4  2cd7		       8d b5 4a 	      sta	_bullet_on
      0  2cda					      decb	_enemies_alive
      1  2cda		       ce c0 4a 	      dec	_enemies_alive
   4806  2cda				   FPULL      SET	0
   4807  2cda				   FPUSH      SET	1
      0  2cdd					      pbvar	_enemies_alive
      0  2cdd					      pbyte	_enemies_alive
      1  2cdd		       ad c0 4a 	      lda	_enemies_alive
      2  2ce0				  -	      IF	!FPUSH
      3  2ce0				  -	      pha
      4  2ce0					      ENDIF
   4809  2ce0				   FPULL      SET	1
   4810  2ce0				   FPUSH      SET	0
      0  2ce0					      rshiftbc	2
      1  2ce0				  -	      IF	!FPULL
      2  2ce0				  -	      pla
      3  2ce0					      ENDIF
      4  2ce0					      REPEAT	2
      5  2ce0		       4a		      lsr
      4  2ce0					      REPEND
      5  2ce1		       4a		      lsr
      6  2ce2					      REPEND
      7  2ce2					      IF	!FPUSH
      8  2ce2		       48		      pha
      9  2ce3					      ENDIF
   4812  2ce3				   FPULL      SET	0
   4813  2ce3				   FPUSH      SET	1
      0  2ce3					      pbyte	#5
      1  2ce3		       a9 05		      lda	#5
      2  2ce5				  -	      IF	!FPUSH
      3  2ce5				  -	      pha
      4  2ce5					      ENDIF
   4815  2ce5				   FPULL      SET	1
      0  2ce5					      addb
      1  2ce5				  -	      IF	!FPULL
      2  2ce5				  -	      pla
      3  2ce5					      ENDIF
      4  2ce5		       85 fb		      sta	R0
      5  2ce7		       68		      pla
      6  2ce8		       18		      clc
      7  2ce9		       65 fb		      adc	R0
      8  2ceb				  -	      IF	!FPUSH
      9  2ceb				  -	      pha
     10  2ceb					      ENDIF
   4817  2ceb				   FPUSH      SET	0
      0  2ceb					      plb2var	_speed
      1  2ceb				  -	      IF	!FPULL
      2  2ceb				  -	      pla
      3  2ceb					      ENDIF
      4  2ceb		       8d be 4a 	      sta	_speed
   4819  2ceb				   FPULL      SET	0
      0  2cee					      peekb_const_addr	#53269
      1  2cee
      2  2cee
      3  2cee
      4  2cee		       d0 15	   .ad	      EQU	#53269
      5  2cee		       ad 15 d0 	      lda	.ad
      6  2cf1					      IF	!FPUSH
      7  2cf1		       48		      pha
      8  2cf2					      ENDIF
   4821  2cf2				   FPUSH      SET	1
      0  2cf2					      pbyte	#253
      1  2cf2		       a9 fd		      lda	#253
      2  2cf4				  -	      IF	!FPUSH
      3  2cf4				  -	      pha
      4  2cf4					      ENDIF
   4823  2cf4				   FPULL      SET	1
      0  2cf4					      andb
      1  2cf4				  -	      IF	!FPULL
      2  2cf4				  -	      pla
      3  2cf4					      ENDIF
      4  2cf4		       85 fc		      sta	R1
      5  2cf6		       68		      pla
      6  2cf7		       25 fc		      and	R1
      7  2cf9				  -	      IF	!FPUSH
      8  2cf9				  -	      pha
      9  2cf9					      ENDIF
   4825  2cf9				   FPUSH      SET	0
      0  2cf9					      pokeb_const_addr	#53269
      1  2cf9
      2  2cf9
      3  2cf9
      4  2cf9		       d0 15	   .ad	      EQU	#53269
      5  2cf9				  -	      IF	!FPULL
      6  2cf9				  -	      pla
      7  2cf9					      ENDIF
      8  2cf9		       8d 15 d0 	      sta	.ad
      0  2cfc					      pbyte_pbyte_cmpbeq_cond	_enemies_alive, #0, _EI_65543, _EL_65543
      1  2cfc
      2  2cfc
      3  2cfc		       ad c0 4a 	      lda	_enemies_alive
      4  2cff		       c9 00		      cmp	#0
      5  2d01		       f0 03		      beq	*+5
      6  2d03				  -	      IFCONST	_EL_65543
      7  2d03				  -	      jmp	_EL_65543
      8  2d03					      ELSE
      9  2d03		       4c 19 2d 	      jmp	_EI_65543
     10  2d06					      ENDIF
   4828  2d06				   FPULL      SET	0
      0  2d06					      pbyte	#2
      1  2d06		       a9 02		      lda	#2
      2  2d08					      IF	!FPUSH
      3  2d08		       48		      pha
      4  2d09					      ENDIF
   4830  2d09				   FPUSH      SET	1
      0  2d09					      pwvar	_detect_collisions.result_ptr
      1  2d09				  -	      IF	!FPUSH
      2  2d09				  -	      lda	_detect_collisions.result_ptr
      3  2d09				  -	      pha
      4  2d09				  -	      lda	_detect_collisions.result_ptr+1
      5  2d09				  -	      pha
      6  2d09					      ELSE
      7  2d09		       ad dc 4a 	      lda	_detect_collisions.result_ptr
      8  2d0c		       ac dd 4a 	      ldy	_detect_collisions.result_ptr+1
      9  2d0f					      ENDIF
   4832  2d0f				   FPULL      SET	1
   4833  2d0f				   FPUSH      SET	0
      0  2d0f					      pokeb
      1  2d0f				  -	      IF	!FPULL
      2  2d0f				  -	      pla
      3  2d0f				  -	      sta	.selfmod_code+2
      4  2d0f				  -	      pla
      5  2d0f				  -	      sta	.selfmod_code+1
      6  2d0f					      ELSE
      7  2d0f		       8d 17 2d 	      sta	.selfmod_code+1
      8  2d12		       8c 18 2d 	      sty	.selfmod_code+2
      9  2d15					      ENDIF
     10  2d15		       68		      pla
     11  2d16				   .selfmod_code
     12  2d16		       8d 00 00 	      sta.w	$0000
   4835  2d19				   _EI_65543
   4836  2d19		       60		      rts
   4837  2d1a
   4838  2d1a
   4839  2d1a
   4840  2d1a
   4841  2d1a
   4842  2d1a
   4843  2d1a
   4844  2d1a				   _EI_4
   4845  2d1a		       60		      rts
   4846  2d1b
   4847  2d1b
   4848  2d1b
   4849  2d1b
   4850  2d1b
   4851  2d1b
   4852  2d1b
   4853  2d1b				   _Ldetect_collisions.shield_hit_by_enemy
   4854  2d1b				   FPULL      SET	0
   4855  2d1b				   FPUSH      SET	1
      0  2d1b					      pbyte	#2
      1  2d1b		       a9 02		      lda	#2
      2  2d1d				  -	      IF	!FPUSH
      3  2d1d				  -	      pha
      4  2d1d					      ENDIF
   4857  2d1d				   FPULL      SET	1
   4858  2d1d				   FPUSH      SET	0
      0  2d1d					      plb2var	_detect_collisions.bn
      1  2d1d				  -	      IF	!FPULL
      2  2d1d				  -	      pla
      3  2d1d					      ENDIF
      4  2d1d		       8d e5 4a 	      sta	_detect_collisions.bn
   4860  2d1d				   FPULL      SET	0
      0  2d20					      pbyte	#4
      1  2d20		       a9 04		      lda	#4
      2  2d22					      IF	!FPUSH
      3  2d22		       48		      pha
      4  2d23					      ENDIF
      0  2d23					      for
      1  2d23
      2  2d23
      3  2d23				   .addr
      4  2d23		       a9 23		      lda	#<.addr
      5  2d25		       48		      pha
      6  2d26		       a9 2d		      lda	#>.addr
      7  2d28		       48		      pha
      0  2d29					      pbvar	_detect_collisions.coll_state
      0  2d29					      pbyte	_detect_collisions.coll_state
      1  2d29		       ad de 4a 	      lda	_detect_collisions.coll_state
      2  2d2c					      IF	!FPUSH
      3  2d2c		       48		      pha
      4  2d2d					      ENDIF
      0  2d2d					      pbvar	_detect_collisions.bn
      0  2d2d					      pbyte	_detect_collisions.bn
      1  2d2d		       ad e5 4a 	      lda	_detect_collisions.bn
      2  2d30					      IF	!FPUSH
      3  2d30		       48		      pha
      4  2d31					      ENDIF
   4865  2d31				   FPUSH      SET	1
      0  2d31					      pbarray_fast	_bits
      1  2d31					      IF	!FPULL
      2  2d31		       68		      pla
      3  2d32					      ENDIF
      4  2d32		       aa		      tax
      5  2d33		       bd b5 49 	      lda	_bits,x
      6  2d36				  -	      IF	!FPUSH
      7  2d36				  -	      pha
      8  2d36					      ENDIF
   4867  2d36				   FPULL      SET	1
   4868  2d36				   FPUSH      SET	0
      0  2d36					      andb
      1  2d36				  -	      IF	!FPULL
      2  2d36				  -	      pla
      3  2d36					      ENDIF
      4  2d36		       85 fc		      sta	R1
      5  2d38		       68		      pla
      6  2d39		       25 fc		      and	R1
      7  2d3b					      IF	!FPUSH
      8  2d3b		       48		      pha
      9  2d3c					      ENDIF
   4870  2d3c				   FPULL      SET	0
   4871  2d3c				   FPUSH      SET	1
      0  2d3c					      pbyte	#0
      1  2d3c		       a9 00		      lda	#0
      2  2d3e				  -	      IF	!FPUSH
      3  2d3e				  -	      pha
      4  2d3e					      ENDIF
   4873  2d3e				   FPULL      SET	1
      0  2d3e					      cmpbneq
      1  2d3e				  -	      IF	!FPULL
      2  2d3e				  -	      pla
      3  2d3e					      ENDIF
      4  2d3e		       85 fc		      sta	R1
      5  2d40		       68		      pla
      6  2d41		       c5 fc		      cmp	R1
      7  2d43		       d0 05		      bne	.pht
      0  2d45					      pzero
      1  2d45		       a9 00		      lda	#$00
      2  2d47				  -	      IF	!FPUSH
      3  2d47				  -	      pha
      4  2d47					      ENDIF
      9  2d47				  -	      IF	!FPUSH
     10  2d47				  -	      jmp	*+6
     11  2d47					      ELSE
     12  2d47		       4c 4c 2d 	      jmp	*+5
     13  2d4a					      ENDIF
      0  2d4a				   .pht       pone
      1  2d4a		       a9 01		      lda	#$01
      2  2d4c				  -	      IF	!FPUSH
      3  2d4c				  -	      pha
      4  2d4c					      ENDIF
   4875  2d4c				   FPUSH      SET	0
      0  2d4c					      cond_stmt	_EI_10, _EL_10
      1  2d4c				  -	      IF	!FPULL
      2  2d4c				  -	      pla
      3  2d4c					      ENDIF
      4  2d4c		       d0 03		      bne	*+5
      5  2d4e				  -	      IFCONST	_EL_10
      6  2d4e				  -	      jmp	_EL_10
      7  2d4e					      ELSE
      8  2d4e		       4c c8 2e 	      jmp	_EI_10
      9  2d51					      ENDIF
   4877  2d51				   FPULL      SET	0
   4878  2d51				   FPUSH      SET	1
      0  2d51					      opt_pbyte_pbyte_sub	_detect_collisions.bn, #2
      1  2d51
      2  2d51
      3  2d51
      4  2d51
      5  2d51
      6  2d51		       ad e5 4a 	      lda	_detect_collisions.bn
      7  2d54		       38		      sec
      8  2d55		       e9 02		      sbc	#2
      9  2d57				  -	      IF	!FPUSH
     10  2d57				  -	      pha
     11  2d57					      ENDIF
   4880  2d57				   FPULL      SET	1
   4881  2d57				   FPUSH      SET	0
      0  2d57					      plb2var	_detect_collisions.bullet_no
      1  2d57				  -	      IF	!FPULL
      2  2d57				  -	      pla
      3  2d57					      ENDIF
      4  2d57		       8d e6 4a 	      sta	_detect_collisions.bullet_no
   4883  2d57				   FPULL      SET	0
      0  2d5a					      pbvar	_detect_collisions.bullet_no
      0  2d5a					      pbyte	_detect_collisions.bullet_no
      1  2d5a		       ad e6 4a 	      lda	_detect_collisions.bullet_no
      2  2d5d					      IF	!FPUSH
      3  2d5d		       48		      pha
      4  2d5e					      ENDIF
      0  2d5e					      btow
      1  2d5e		       a9 00		      lda	#$00
      2  2d60		       48		      pha
      0  2d61					      dblw
      1  2d61		       ba		      tsx
      2  2d62		       1e 02 01 	      asl.wx	stack+2
      3  2d65		       3e 01 01 	      rol.wx	stack+1
      0  2d68					      pwarray	_enemy_bullet_posx
      1  2d68					      IF	!FPULL
      2  2d68		       68		      pla
      3  2d69		       85 fc		      sta	R1
      4  2d6b		       68		      pla
      5  2d6c		       85 fb		      sta	R0
      6  2d6e				  -	      ELSE
      7  2d6e				  -	      sta	R0
      8  2d6e				  -	      sty	R1
      9  2d6e					      ENDIF
     10  2d6e		       a9 a5		      lda	#<_enemy_bullet_posx
     11  2d70		       18		      clc
     12  2d71		       65 fb		      adc	R0
     13  2d73		       85 fb		      sta	R0
     14  2d75		       a9 4a		      lda	#>_enemy_bullet_posx
     15  2d77		       65 fc		      adc	R1
     16  2d79		       85 fc		      sta	R1
     17  2d7b					      IF	!FPUSH
     18  2d7b		       a0 00		      ldy	#$00
     19  2d7d		       b1 fb		      lda	(R0),y
     20  2d7f		       48		      pha
     21  2d80		       c8		      iny
     22  2d81		       b1 fb		      lda	(R0),y
     23  2d83		       48		      pha
     24  2d84				  -	      ELSE
     25  2d84				  -	      ldy	#$00
     26  2d84				  -	      lda	(R0),y
     27  2d84				  -	      tax
     28  2d84				  -	      iny
     29  2d84				  -	      lda	(R0),y
     30  2d84				  -	      tay
     31  2d84				  -	      txa
     32  2d84					      ENDIF
      0  2d84					      rshiftwc	3
      1  2d84		       ba		      tsx
      2  2d85					      REPEAT	3
      3  2d85		       5e 01 01 	      lsr.wx	stack+1
      4  2d88		       7e 02 01 	      ror.wx	stack+2
      2  2d88					      REPEND
      3  2d8b		       5e 01 01 	      lsr.wx	stack+1
      4  2d8e		       7e 02 01 	      ror.wx	stack+2
      2  2d8e					      REPEND
      3  2d91		       5e 01 01 	      lsr.wx	stack+1
      4  2d94		       7e 02 01 	      ror.wx	stack+2
      5  2d97					      REPEND
      0  2d97					      wtob
      1  2d97		       68		      pla
      0  2d98					      pbyte	#3
      1  2d98		       a9 03		      lda	#3
      2  2d9a					      IF	!FPUSH
      3  2d9a		       48		      pha
      4  2d9b					      ENDIF
      0  2d9b					      subb
      1  2d9b		       ba		      tsx
      2  2d9c		       bd 02 01 	      lda.wx	stack+2
      3  2d9f		       38		      sec
      4  2da0		       fd 01 01 	      sbc.wx	stack+1
      5  2da3		       9d 02 01 	      sta.wx	stack+2
      6  2da6		       68		      pla
      0  2da7					      plb2var	_detect_collisions.col
      1  2da7					      IF	!FPULL
      2  2da7		       68		      pla
      3  2da8					      ENDIF
      4  2da8		       8d e0 4a 	      sta	_detect_collisions.col
      0  2dab					      opt_pbyte_pbarray_fast	_detect_collisions.bullet_no, _enemy_bullet_posy
      1  2dab
      2  2dab
      3  2dab
      4  2dab		       ae e6 4a 	      ldx	_detect_collisions.bullet_no
      5  2dae		       bd ab 4a 	      lda	_enemy_bullet_posy,x
      6  2db1					      IF	!FPUSH
      7  2db1		       48		      pha
      8  2db2					      ENDIF
      0  2db2					      pbyte	#49
      1  2db2		       a9 31		      lda	#49
      2  2db4					      IF	!FPUSH
      3  2db4		       48		      pha
      4  2db5					      ENDIF
      0  2db5					      subb
      1  2db5		       ba		      tsx
      2  2db6		       bd 02 01 	      lda.wx	stack+2
      3  2db9		       38		      sec
      4  2dba		       fd 01 01 	      sbc.wx	stack+1
      5  2dbd		       9d 02 01 	      sta.wx	stack+2
      6  2dc0		       68		      pla
   4896  2dc0				   FPUSH      SET	1
      0  2dc1					      rshiftbc	3
      1  2dc1					      IF	!FPULL
      2  2dc1		       68		      pla
      3  2dc2					      ENDIF
      4  2dc2					      REPEAT	3
      5  2dc2		       4a		      lsr
      4  2dc2					      REPEND
      5  2dc3		       4a		      lsr
      4  2dc3					      REPEND
      5  2dc4		       4a		      lsr
      6  2dc5					      REPEND
      7  2dc5				  -	      IF	!FPUSH
      8  2dc5				  -	      pha
      9  2dc5					      ENDIF
   4898  2dc5				   FPULL      SET	1
   4899  2dc5				   FPUSH      SET	0
      0  2dc5					      plb2var	_detect_collisions.row
      1  2dc5				  -	      IF	!FPULL
      2  2dc5				  -	      pla
      3  2dc5					      ENDIF
      4  2dc5		       8d e1 4a 	      sta	_detect_collisions.row
   4901  2dc5				   FPULL      SET	0
      0  2dc8					      pword	#1024
      1  2dc8					      IF	!FPUSH
      2  2dc8		       a9 00		      lda	#<#1024
      3  2dca		       48		      pha
      4  2dcb		       a9 04		      lda	#>#1024
      5  2dcd		       48		      pha
      6  2dce				  -	      ELSE
      7  2dce				  -	      lda	#<#1024
      8  2dce				  -	      ldy	#>#1024
      9  2dce					      ENDIF
      0  2dce					      pbvar	_detect_collisions.col
      0  2dce					      pbyte	_detect_collisions.col
      1  2dce		       ad e0 4a 	      lda	_detect_collisions.col
      2  2dd1					      IF	!FPUSH
      3  2dd1		       48		      pha
      4  2dd2					      ENDIF
      0  2dd2					      btow
      1  2dd2		       a9 00		      lda	#$00
      2  2dd4		       48		      pha
      0  2dd5					      addw
      1  2dd5		       ba		      tsx
      2  2dd6		       bd 02 01 	      lda.wx	stack+2
      3  2dd9		       18		      clc
      4  2dda		       7d 04 01 	      adc.wx	stack+4
      5  2ddd		       9d 04 01 	      sta.wx	stack+4
      6  2de0		       68		      pla
      7  2de1		       7d 03 01 	      adc.wx	stack+3
      8  2de4		       9d 03 01 	      sta.wx	stack+3
      9  2de7		       68		      pla
      0  2de8					      pbyte	#40
      1  2de8		       a9 28		      lda	#40
      2  2dea					      IF	!FPUSH
      3  2dea		       48		      pha
      4  2deb					      ENDIF
      0  2deb					      btow
      1  2deb		       a9 00		      lda	#$00
      2  2ded		       48		      pha
      0  2dee					      pbvar	_detect_collisions.row
      0  2dee					      pbyte	_detect_collisions.row
      1  2dee		       ad e1 4a 	      lda	_detect_collisions.row
      2  2df1					      IF	!FPUSH
      3  2df1		       48		      pha
      4  2df2					      ENDIF
      0  2df2					      btow
      1  2df2		       a9 00		      lda	#$00
      2  2df4		       48		      pha
      0  2df5					      mulw
      1  2df5					      IF	!FPULL
      2  2df5		       68		      pla
      3  2df6		       85 fc		      sta	R1
      4  2df8		       68		      pla
      5  2df9		       85 fb		      sta	R0
      6  2dfb				  -	      ELSE
      7  2dfb				  -	      sta	R0
      8  2dfb				  -	      sty	R1
      9  2dfb					      ENDIF
     10  2dfb		       68		      pla
     11  2dfc		       85 fe		      sta	R3
     12  2dfe		       68		      pla
     13  2dff		       85 fd		      sta	R2
     14  2e01		       20 0d 08 	      jsr	NUCL_SMUL16
     15  2e04					      IF	!FPUSH
     16  2e04		       a5 fb		      lda	R0
     17  2e06		       48		      pha
     18  2e07		       a5 fc		      lda	R1
     19  2e09		       48		      pha
     20  2e0a				  -	      ELSE
     21  2e0a				  -	      lda	R0
     22  2e0a				  -	      ldy	R1
     23  2e0a					      ENDIF
      0  2e0a					      addw
      1  2e0a		       ba		      tsx
      2  2e0b		       bd 02 01 	      lda.wx	stack+2
      3  2e0e		       18		      clc
      4  2e0f		       7d 04 01 	      adc.wx	stack+4
      5  2e12		       9d 04 01 	      sta.wx	stack+4
      6  2e15		       68		      pla
      7  2e16		       7d 03 01 	      adc.wx	stack+3
      8  2e19		       9d 03 01 	      sta.wx	stack+3
      9  2e1c		       68		      pla
      0  2e1d					      plw2var	_detect_collisions.hit_position
      1  2e1d					      IF	!FPULL
      2  2e1d		       68		      pla
      3  2e1e		       8d e3 4a 	      sta	_detect_collisions.hit_position+1
      4  2e21		       68		      pla
      5  2e22		       8d e2 4a 	      sta	_detect_collisions.hit_position
      6  2e25				  -	      ELSE
      7  2e25				  -	      sta	_detect_collisions.hit_position
      8  2e25				  -	      sty	_detect_collisions.hit_position+1
      9  2e25					      ENDIF
   4913  2e25				   FPUSH      SET	1
      0  2e25					      pwvar	_detect_collisions.hit_position
      1  2e25				  -	      IF	!FPUSH
      2  2e25				  -	      lda	_detect_collisions.hit_position
      3  2e25				  -	      pha
      4  2e25				  -	      lda	_detect_collisions.hit_position+1
      5  2e25				  -	      pha
      6  2e25					      ELSE
      7  2e25		       ad e2 4a 	      lda	_detect_collisions.hit_position
      8  2e28		       ac e3 4a 	      ldy	_detect_collisions.hit_position+1
      9  2e2b					      ENDIF
   4915  2e2b				   FPULL      SET	1
      0  2e2b					      peekb
      1  2e2b				  -	      IF	!FPULL
      2  2e2b				  -	      pla
      3  2e2b				  -	      sta	.selfmod_code+2
      4  2e2b				  -	      pla
      5  2e2b				  -	      sta	.selfmod_code+1
      6  2e2b					      ELSE
      7  2e2b		       8d 32 2e 	      sta	.selfmod_code+1
      8  2e2e		       8c 33 2e 	      sty	.selfmod_code+2
      9  2e31					      ENDIF
     10  2e31				   .selfmod_code
     11  2e31		       ad 00 00 	      lda.w	$0000
     12  2e34				  -	      IF	!FPUSH
     13  2e34				  -	      pha
     14  2e34					      ENDIF
   4917  2e34				   FPUSH      SET	0
      0  2e34					      plb2var	_detect_collisions.char
      1  2e34				  -	      IF	!FPULL
      2  2e34				  -	      pla
      3  2e34					      ENDIF
      4  2e34		       8d e4 4a 	      sta	_detect_collisions.char
   4919  2e34				   FPULL      SET	0
   4920  2e34				   FPUSH      SET	1
      0  2e37					      pbyte_pbyte_cmpbgte	_detect_collisions.char, #88
      1  2e37
      2  2e37
      3  2e37
      4  2e37
      5  2e37
      6  2e37		       ad e4 4a 	      lda	_detect_collisions.char
      7  2e3a		       c9 58		      cmp	#88
      8  2e3c		       b0 05		      bcs	.true
      0  2e3e					      pzero
      1  2e3e		       a9 00		      lda	#$00
      2  2e40				  -	      IF	!FPUSH
      3  2e40				  -	      pha
      4  2e40					      ENDIF
     10  2e40				  -	      IF	!FPUSH
     11  2e40				  -	      jmp	*+6
     12  2e40					      ELSE
     13  2e40		       4c 45 2e 	      jmp	*+5
     14  2e43					      ENDIF
     15  2e43				   .true
      0  2e43					      pone
      1  2e43		       a9 01		      lda	#$01
      2  2e45				  -	      IF	!FPUSH
      3  2e45				  -	      pha
      4  2e45					      ENDIF
   4922  2e45				   FPULL      SET	1
   4923  2e45				   FPUSH      SET	0
      0  2e45					      cond_stmt	_EI_11, _EL_11
      1  2e45				  -	      IF	!FPULL
      2  2e45				  -	      pla
      3  2e45					      ENDIF
      4  2e45		       d0 03		      bne	*+5
      5  2e47				  -	      IFCONST	_EL_11
      6  2e47				  -	      jmp	_EL_11
      7  2e47					      ELSE
      8  2e47		       4c 8a 2e 	      jmp	_EI_11
      9  2e4a					      ENDIF
   4925  2e4a				   FPULL      SET	0
   4926  2e4a				   FPUSH      SET	1
      0  2e4a					      pbyte_pbyte_cmpblt	_detect_collisions.char, #91
      1  2e4a
      2  2e4a
      3  2e4a
      4  2e4a
      5  2e4a
      6  2e4a		       ad e4 4a 	      lda	_detect_collisions.char
      7  2e4d		       c9 5b		      cmp	#91
      8  2e4f		       b0 05		      bcs	.false
      0  2e51					      pone
      1  2e51		       a9 01		      lda	#$01
      2  2e53				  -	      IF	!FPUSH
      3  2e53				  -	      pha
      4  2e53					      ENDIF
     10  2e53				  -	      IF	!FPUSH
     11  2e53				  -	      jmp	*+6
     12  2e53					      ELSE
     13  2e53		       4c 58 2e 	      jmp	*+5
     14  2e56					      ENDIF
     15  2e56				   .false
      0  2e56					      pzero
      1  2e56		       a9 00		      lda	#$00
      2  2e58				  -	      IF	!FPUSH
      3  2e58				  -	      pha
      4  2e58					      ENDIF
   4928  2e58				   FPULL      SET	1
   4929  2e58				   FPUSH      SET	0
      0  2e58					      cond_stmt	_EI_12, _EL_12
      1  2e58				  -	      IF	!FPULL
      2  2e58				  -	      pla
      3  2e58					      ENDIF
      4  2e58		       d0 03		      bne	*+5
      5  2e5a					      IFCONST	_EL_12
      6  2e5a		       4c 77 2e 	      jmp	_EL_12
      7  2e5d				  -	      ELSE
      8  2e5d				  -	      jmp	_EI_12
      9  2e5d					      ENDIF
   4931  2e5d				   FPULL      SET	0
      0  2e5d					      opt_pbyte_pbyte_add	_detect_collisions.char, #3
      1  2e5d
      2  2e5d
      3  2e5d
      4  2e5d
      5  2e5d
      6  2e5d		       ad e4 4a 	      lda	_detect_collisions.char
      7  2e60		       18		      clc
      8  2e61		       69 03		      adc	#3
      9  2e63					      IF	!FPUSH
     10  2e63		       48		      pha
     11  2e64					      ENDIF
   4933  2e64				   FPUSH      SET	1
      0  2e64					      pwvar	_detect_collisions.hit_position
      1  2e64				  -	      IF	!FPUSH
      2  2e64				  -	      lda	_detect_collisions.hit_position
      3  2e64				  -	      pha
      4  2e64				  -	      lda	_detect_collisions.hit_position+1
      5  2e64				  -	      pha
      6  2e64					      ELSE
      7  2e64		       ad e2 4a 	      lda	_detect_collisions.hit_position
      8  2e67		       ac e3 4a 	      ldy	_detect_collisions.hit_position+1
      9  2e6a					      ENDIF
   4935  2e6a				   FPULL      SET	1
   4936  2e6a				   FPUSH      SET	0
      0  2e6a					      pokeb
      1  2e6a				  -	      IF	!FPULL
      2  2e6a				  -	      pla
      3  2e6a				  -	      sta	.selfmod_code+2
      4  2e6a				  -	      pla
      5  2e6a				  -	      sta	.selfmod_code+1
      6  2e6a					      ELSE
      7  2e6a		       8d 72 2e 	      sta	.selfmod_code+1
      8  2e6d		       8c 73 2e 	      sty	.selfmod_code+2
      9  2e70					      ENDIF
     10  2e70		       68		      pla
     11  2e71				   .selfmod_code
     12  2e71		       8d 00 00 	      sta.w	$0000
   4938  2e74		       4c 8a 2e 	      jmp	_EI_12
   4939  2e77				   _EL_12
   4940  2e77				   FPULL      SET	0
      0  2e77					      pbyte	#32
      1  2e77		       a9 20		      lda	#32
      2  2e79					      IF	!FPUSH
      3  2e79		       48		      pha
      4  2e7a					      ENDIF
   4942  2e7a				   FPUSH      SET	1
      0  2e7a					      pwvar	_detect_collisions.hit_position
      1  2e7a				  -	      IF	!FPUSH
      2  2e7a				  -	      lda	_detect_collisions.hit_position
      3  2e7a				  -	      pha
      4  2e7a				  -	      lda	_detect_collisions.hit_position+1
      5  2e7a				  -	      pha
      6  2e7a					      ELSE
      7  2e7a		       ad e2 4a 	      lda	_detect_collisions.hit_position
      8  2e7d		       ac e3 4a 	      ldy	_detect_collisions.hit_position+1
      9  2e80					      ENDIF
   4944  2e80				   FPULL      SET	1
   4945  2e80				   FPUSH      SET	0
      0  2e80					      pokeb
      1  2e80				  -	      IF	!FPULL
      2  2e80				  -	      pla
      3  2e80				  -	      sta	.selfmod_code+2
      4  2e80				  -	      pla
      5  2e80				  -	      sta	.selfmod_code+1
      6  2e80					      ELSE
      7  2e80		       8d 88 2e 	      sta	.selfmod_code+1
      8  2e83		       8c 89 2e 	      sty	.selfmod_code+2
      9  2e86					      ENDIF
     10  2e86		       68		      pla
     11  2e87				   .selfmod_code
     12  2e87		       8d 00 00 	      sta.w	$0000
   4947  2e8a				   _EI_12
   4948  2e8a
   4949  2e8a
   4950  2e8a
   4951  2e8a
   4952  2e8a
   4953  2e8a
   4954  2e8a
   4955  2e8a				   _EI_11
   4956  2e8a				   FPULL      SET	0
      0  2e8a					      pbyte	#0
      1  2e8a		       a9 00		      lda	#0
      2  2e8c					      IF	!FPUSH
      3  2e8c		       48		      pha
      4  2e8d					      ENDIF
   4958  2e8d				   FPUSH      SET	1
      0  2e8d					      pbvar	_detect_collisions.bullet_no
      0  2e8d					      pbyte	_detect_collisions.bullet_no
      1  2e8d		       ad e6 4a 	      lda	_detect_collisions.bullet_no
      2  2e90				  -	      IF	!FPUSH
      3  2e90				  -	      pha
      4  2e90					      ENDIF
   4960  2e90				   FPULL      SET	1
   4961  2e90				   FPUSH      SET	0
      0  2e90					      plbarray_fast	_enemy_bullet_on
      1  2e90				  -	      IF	!FPULL
      2  2e90				  -	      pla
      3  2e90					      ENDIF
      4  2e90		       aa		      tax
      5  2e91		       68		      pla
      6  2e92		       9d a2 4a 	      sta	_enemy_bullet_on,x
   4963  2e92				   FPULL      SET	0
   4964  2e92				   FPUSH      SET	1
      0  2e95					      pword	#53269
      1  2e95				  -	      IF	!FPUSH
      2  2e95				  -	      lda	#<#53269
      3  2e95				  -	      pha
      4  2e95				  -	      lda	#>#53269
      5  2e95				  -	      pha
      6  2e95					      ELSE
      7  2e95		       a9 15		      lda	#<#53269
      8  2e97		       a0 d0		      ldy	#>#53269
      9  2e99					      ENDIF
   4966  2e99				   FPULL      SET	1
   4967  2e99				   FPUSH      SET	0
      0  2e99					      peekb
      1  2e99				  -	      IF	!FPULL
      2  2e99				  -	      pla
      3  2e99				  -	      sta	.selfmod_code+2
      4  2e99				  -	      pla
      5  2e99				  -	      sta	.selfmod_code+1
      6  2e99					      ELSE
      7  2e99		       8d a0 2e 	      sta	.selfmod_code+1
      8  2e9c		       8c a1 2e 	      sty	.selfmod_code+2
      9  2e9f					      ENDIF
     10  2e9f				   .selfmod_code
     11  2e9f		       ad 00 00 	      lda.w	$0000
     12  2ea2					      IF	!FPUSH
     13  2ea2		       48		      pha
     14  2ea3					      ENDIF
   4969  2ea3				   FPULL      SET	0
      0  2ea3					      pbvar	_detect_collisions.bn
      0  2ea3					      pbyte	_detect_collisions.bn
      1  2ea3		       ad e5 4a 	      lda	_detect_collisions.bn
      2  2ea6					      IF	!FPUSH
      3  2ea6		       48		      pha
      4  2ea7					      ENDIF
      0  2ea7					      pbarray_fast	_bits
      1  2ea7					      IF	!FPULL
      2  2ea7		       68		      pla
      3  2ea8					      ENDIF
      4  2ea8		       aa		      tax
      5  2ea9		       bd b5 49 	      lda	_bits,x
      6  2eac					      IF	!FPUSH
      7  2eac		       48		      pha
      8  2ead					      ENDIF
   4972  2ead				   FPUSH      SET	1
      0  2ead					      pbyte	#255
      1  2ead		       a9 ff		      lda	#255
      2  2eaf				  -	      IF	!FPUSH
      3  2eaf				  -	      pha
      4  2eaf					      ENDIF
   4974  2eaf				   FPULL      SET	1
      0  2eaf					      xorb
      1  2eaf				  -	      IF	!FPULL
      2  2eaf				  -	      pla
      3  2eaf					      ENDIF
      4  2eaf		       85 fc		      sta	R1
      5  2eb1		       68		      pla
      6  2eb2		       45 fc		      eor	R1
      7  2eb4				  -	      IF	!FPUSH
      8  2eb4				  -	      pha
      9  2eb4					      ENDIF
   4976  2eb4				   FPUSH      SET	0
      0  2eb4					      andb
      1  2eb4				  -	      IF	!FPULL
      2  2eb4				  -	      pla
      3  2eb4					      ENDIF
      4  2eb4		       85 fc		      sta	R1
      5  2eb6		       68		      pla
      6  2eb7		       25 fc		      and	R1
      7  2eb9					      IF	!FPUSH
      8  2eb9		       48		      pha
      9  2eba					      ENDIF
   4978  2eba				   FPULL      SET	0
   4979  2eba				   FPUSH      SET	1
      0  2eba					      pword	#53269
      1  2eba				  -	      IF	!FPUSH
      2  2eba				  -	      lda	#<#53269
      3  2eba				  -	      pha
      4  2eba				  -	      lda	#>#53269
      5  2eba				  -	      pha
      6  2eba					      ELSE
      7  2eba		       a9 15		      lda	#<#53269
      8  2ebc		       a0 d0		      ldy	#>#53269
      9  2ebe					      ENDIF
   4981  2ebe				   FPULL      SET	1
   4982  2ebe				   FPUSH      SET	0
      0  2ebe					      pokeb
      1  2ebe				  -	      IF	!FPULL
      2  2ebe				  -	      pla
      3  2ebe				  -	      sta	.selfmod_code+2
      4  2ebe				  -	      pla
      5  2ebe				  -	      sta	.selfmod_code+1
      6  2ebe					      ELSE
      7  2ebe		       8d c6 2e 	      sta	.selfmod_code+1
      8  2ec1		       8c c7 2e 	      sty	.selfmod_code+2
      9  2ec4					      ENDIF
     10  2ec4		       68		      pla
     11  2ec5				   .selfmod_code
     12  2ec5		       8d 00 00 	      sta.w	$0000
   4984  2ec8				   _EI_10
      0  2ec8					      nextb	_detect_collisions.bn
      1  2ec8
      2  2ec8		       ee e5 4a 	      inc	_detect_collisions.bn
      3  2ecb
      4  2ecb		       f0 15		      beq	.end
      5  2ecd				   .skip
      6  2ecd
      7  2ecd		       68		      pla
      8  2ece		       8d e1 2e 	      sta	.selfmod_code+2
      9  2ed1		       68		      pla
     10  2ed2		       8d e0 2e 	      sta	.selfmod_code+1
     11  2ed5
     12  2ed5		       68		      pla
     13  2ed6		       cd e5 4a 	      cmp	_detect_collisions.bn
     14  2ed9		       b0 03		      bcs	.jump_back
     15  2edb		       4c e2 2e 	      jmp	.end
     16  2ede				   .jump_back
     17  2ede
     18  2ede		       48		      pha
     19  2edf				   .selfmod_code
     20  2edf		       4c 00 00 	      jmp	$0000
     21  2ee2				   .end
   4986  2ee2		       60		      rts
   4987  2ee3
   4988  2ee3
   4989  2ee3
   4990  2ee3
   4991  2ee3
   4992  2ee3
   4993  2ee3
   4994  2ee3				   _Ldetect_collisions.ship_hit
   4995  2ee3				   FPULL      SET	0
      0  2ee3					      opt_pbyte_pbyte_and	_detect_collisions.spr_coll_state, #1
      1  2ee3
      2  2ee3
      3  2ee3
      4  2ee3
      5  2ee3
      6  2ee3		       ad df 4a 	      lda	_detect_collisions.spr_coll_state
      7  2ee6		       29 01		      and	#1
      8  2ee8					      IF	!FPUSH
      9  2ee8		       48		      pha
     10  2ee9					      ENDIF
   4997  2ee9				   FPUSH      SET	1
      0  2ee9					      pbyte	#1
      1  2ee9		       a9 01		      lda	#1
      2  2eeb				  -	      IF	!FPUSH
      3  2eeb				  -	      pha
      4  2eeb					      ENDIF
   4999  2eeb				   FPULL      SET	1
      0  2eeb					      cmpbeq
      1  2eeb				  -	      IF	!FPULL
      2  2eeb				  -	      pla
      3  2eeb					      ENDIF
      4  2eeb		       85 fc		      sta	R1
      5  2eed		       68		      pla
      6  2eee		       c5 fc		      cmp	R1
      7  2ef0		       f0 05		      beq	.pht
      0  2ef2					      pzero
      1  2ef2		       a9 00		      lda	#$00
      2  2ef4				  -	      IF	!FPUSH
      3  2ef4				  -	      pha
      4  2ef4					      ENDIF
      9  2ef4				  -	      IF	!FPUSH
     10  2ef4				  -	      jmp	*+6
     11  2ef4					      ELSE
     12  2ef4		       4c f9 2e 	      jmp	*+5
     13  2ef7					      ENDIF
      0  2ef7				   .pht       pone
      1  2ef7		       a9 01		      lda	#$01
      2  2ef9				  -	      IF	!FPUSH
      3  2ef9				  -	      pha
      4  2ef9					      ENDIF
   5001  2ef9				   FPUSH      SET	0
      0  2ef9					      cond_stmt	_EI_13, _EL_13
      1  2ef9				  -	      IF	!FPULL
      2  2ef9				  -	      pla
      3  2ef9					      ENDIF
      4  2ef9		       d0 03		      bne	*+5
      5  2efb				  -	      IFCONST	_EL_13
      6  2efb				  -	      jmp	_EL_13
      7  2efb					      ELSE
      8  2efb		       4c 12 2f 	      jmp	_EI_13
      9  2efe					      ENDIF
   5003  2efe				   FPULL      SET	0
      0  2efe					      pbyte	#1
      1  2efe		       a9 01		      lda	#1
      2  2f00					      IF	!FPUSH
      3  2f00		       48		      pha
      4  2f01					      ENDIF
   5005  2f01				   FPUSH      SET	1
      0  2f01					      pwvar	_detect_collisions.result_ptr
      1  2f01				  -	      IF	!FPUSH
      2  2f01				  -	      lda	_detect_collisions.result_ptr
      3  2f01				  -	      pha
      4  2f01				  -	      lda	_detect_collisions.result_ptr+1
      5  2f01				  -	      pha
      6  2f01					      ELSE
      7  2f01		       ad dc 4a 	      lda	_detect_collisions.result_ptr
      8  2f04		       ac dd 4a 	      ldy	_detect_collisions.result_ptr+1
      9  2f07					      ENDIF
   5007  2f07				   FPULL      SET	1
   5008  2f07				   FPUSH      SET	0
      0  2f07					      pokeb
      1  2f07				  -	      IF	!FPULL
      2  2f07				  -	      pla
      3  2f07				  -	      sta	.selfmod_code+2
      4  2f07				  -	      pla
      5  2f07				  -	      sta	.selfmod_code+1
      6  2f07					      ELSE
      7  2f07		       8d 0f 2f 	      sta	.selfmod_code+1
      8  2f0a		       8c 10 2f 	      sty	.selfmod_code+2
      9  2f0d					      ENDIF
     10  2f0d		       68		      pla
     11  2f0e				   .selfmod_code
     12  2f0e		       8d 00 00 	      sta.w	$0000
   5010  2f11		       60		      rts
   5011  2f12				   _EI_13
   5012  2f12				   FPULL      SET	0
      0  2f12					      opt_pbyte_pbyte_and	_detect_collisions.spr_coll_state, #64
      1  2f12
      2  2f12
      3  2f12
      4  2f12
      5  2f12
      6  2f12		       ad df 4a 	      lda	_detect_collisions.spr_coll_state
      7  2f15		       29 40		      and	#64
      8  2f17					      IF	!FPUSH
      9  2f17		       48		      pha
     10  2f18					      ENDIF
   5014  2f18				   FPUSH      SET	1
      0  2f18					      pbyte	#64
      1  2f18		       a9 40		      lda	#64
      2  2f1a				  -	      IF	!FPUSH
      3  2f1a				  -	      pha
      4  2f1a					      ENDIF
   5016  2f1a				   FPULL      SET	1
      0  2f1a					      cmpbeq
      1  2f1a				  -	      IF	!FPULL
      2  2f1a				  -	      pla
      3  2f1a					      ENDIF
      4  2f1a		       85 fc		      sta	R1
      5  2f1c		       68		      pla
      6  2f1d		       c5 fc		      cmp	R1
      7  2f1f		       f0 05		      beq	.pht
      0  2f21					      pzero
      1  2f21		       a9 00		      lda	#$00
      2  2f23				  -	      IF	!FPUSH
      3  2f23				  -	      pha
      4  2f23					      ENDIF
      9  2f23				  -	      IF	!FPUSH
     10  2f23				  -	      jmp	*+6
     11  2f23					      ELSE
     12  2f23		       4c 28 2f 	      jmp	*+5
     13  2f26					      ENDIF
      0  2f26				   .pht       pone
      1  2f26		       a9 01		      lda	#$01
      2  2f28				  -	      IF	!FPUSH
      3  2f28				  -	      pha
      4  2f28					      ENDIF
   5018  2f28				   FPUSH      SET	0
      0  2f28					      cond_stmt	_EI_14, _EL_14
      1  2f28				  -	      IF	!FPULL
      2  2f28				  -	      pla
      3  2f28					      ENDIF
      4  2f28		       d0 03		      bne	*+5
      5  2f2a				  -	      IFCONST	_EL_14
      6  2f2a				  -	      jmp	_EL_14
      7  2f2a					      ELSE
      8  2f2a		       4c c1 2f 	      jmp	_EI_14
      9  2f2d					      ENDIF
   5020  2f2d				   FPULL      SET	0
   5021  2f2d				   FPUSH      SET	1
      0  2f2d					      pbyte	#0
      1  2f2d		       a9 00		      lda	#0
      2  2f2f				  -	      IF	!FPUSH
      3  2f2f				  -	      pha
      4  2f2f					      ENDIF
   5023  2f2f				   FPULL      SET	1
   5024  2f2f				   FPUSH      SET	0
      0  2f2f					      plb2var	_bullet_on
      1  2f2f				  -	      IF	!FPULL
      2  2f2f				  -	      pla
      3  2f2f					      ENDIF
      4  2f2f		       8d b5 4a 	      sta	_bullet_on
   5026  2f2f				   FPULL      SET	0
      0  2f32					      peekb_const_addr	#53269
      1  2f32
      2  2f32
      3  2f32
      4  2f32		       d0 15	   .ad	      EQU	#53269
      5  2f32		       ad 15 d0 	      lda	.ad
      6  2f35					      IF	!FPUSH
      7  2f35		       48		      pha
      8  2f36					      ENDIF
   5028  2f36				   FPUSH      SET	1
      0  2f36					      pbyte	#253
      1  2f36		       a9 fd		      lda	#253
      2  2f38				  -	      IF	!FPUSH
      3  2f38				  -	      pha
      4  2f38					      ENDIF
   5030  2f38				   FPULL      SET	1
      0  2f38					      andb
      1  2f38				  -	      IF	!FPULL
      2  2f38				  -	      pla
      3  2f38					      ENDIF
      4  2f38		       85 fc		      sta	R1
      5  2f3a		       68		      pla
      6  2f3b		       25 fc		      and	R1
      7  2f3d				  -	      IF	!FPUSH
      8  2f3d				  -	      pha
      9  2f3d					      ENDIF
   5032  2f3d				   FPUSH      SET	0
      0  2f3d					      pokeb_const_addr	#53269
      1  2f3d
      2  2f3d
      3  2f3d
      4  2f3d		       d0 15	   .ad	      EQU	#53269
      5  2f3d				  -	      IF	!FPULL
      6  2f3d				  -	      pla
      7  2f3d					      ENDIF
      8  2f3d		       8d 15 d0 	      sta	.ad
   5034  2f3d				   FPULL      SET	0
   5035  2f3d				   FPUSH      SET	1
      0  2f40					      pbyte	#1
      1  2f40		       a9 01		      lda	#1
      2  2f42				  -	      IF	!FPUSH
      3  2f42				  -	      pha
      4  2f42					      ENDIF
   5037  2f42				   FPULL      SET	1
   5038  2f42				   FPUSH      SET	0
      0  2f42					      plb2var	_ufo_hit
      1  2f42				  -	      IF	!FPULL
      2  2f42				  -	      pla
      3  2f42					      ENDIF
      4  2f42		       8d c9 4a 	      sta	_ufo_hit
   5040  2f42				   FPULL      SET	0
   5041  2f42				   FPUSH      SET	1
      0  2f45					      opt_pwvar_pword_add	_score, #300
      1  2f45
      2  2f45
      3  2f45
      4  2f45		       ad bb 4a 	      lda	_score
      5  2f48		       18		      clc
      6  2f49		       69 2c		      adc	<#300
      7  2f4b				  -	      IF	!FPUSH
      8  2f4b				  -	      pha
      9  2f4b					      ELSE
     10  2f4b		       aa		      tax
     11  2f4c					      ENDIF
     12  2f4c		       ad bc 4a 	      lda	_score+1
     13  2f4f		       69 01		      adc	>#300
     14  2f51				  -	      IF	!FPUSH
     15  2f51				  -	      pha
     16  2f51					      ELSE
     17  2f51		       a8		      tay
     18  2f52		       8a		      txa
     19  2f53					      ENDIF
   5043  2f53				   FPULL      SET	1
   5044  2f53				   FPUSH      SET	0
      0  2f53					      plw2var	_score
      1  2f53				  -	      IF	!FPULL
      2  2f53				  -	      pla
      3  2f53				  -	      sta	_score+1
      4  2f53				  -	      pla
      5  2f53				  -	      sta	_score
      6  2f53					      ELSE
      7  2f53		       8d bb 4a 	      sta	_score
      8  2f56		       8c bc 4a 	      sty	_score+1
      9  2f59					      ENDIF
   5046  2f59				   FPULL      SET	0
   5047  2f59				   FPUSH      SET	1
      0  2f59					      pbyte	#247
      1  2f59		       a9 f7		      lda	#247
      2  2f5b				  -	      IF	!FPUSH
      3  2f5b				  -	      pha
      4  2f5b					      ENDIF
   5049  2f5b				   FPULL      SET	1
   5050  2f5b				   FPUSH      SET	0
      0  2f5b					      pokeb_const_addr	#2046
      1  2f5b
      2  2f5b
      3  2f5b
      4  2f5b		       07 fe	   .ad	      EQU	#2046
      5  2f5b				  -	      IF	!FPULL
      6  2f5b				  -	      pla
      7  2f5b					      ENDIF
      8  2f5b		       8d fe 07 	      sta	.ad
   5052  2f5b				   FPULL      SET	0
      0  2f5e					      pbyte	#0
      1  2f5e		       a9 00		      lda	#0
      2  2f60					      IF	!FPUSH
      3  2f60		       48		      pha
      4  2f61					      ENDIF
      0  2f61					      btow
      1  2f61		       a9 00		      lda	#$00
      2  2f63		       48		      pha
   5055  2f63				   FPUSH      SET	1
      0  2f64					      pword	#40
      1  2f64				  -	      IF	!FPUSH
      2  2f64				  -	      lda	#<#40
      3  2f64				  -	      pha
      4  2f64				  -	      lda	#>#40
      5  2f64				  -	      pha
      6  2f64					      ELSE
      7  2f64		       a9 28		      lda	#<#40
      8  2f66		       a0 00		      ldy	#>#40
      9  2f68					      ENDIF
   5057  2f68				   FPULL      SET	1
   5058  2f68				   FPUSH      SET	0
      0  2f68					      mulw
      1  2f68				  -	      IF	!FPULL
      2  2f68				  -	      pla
      3  2f68				  -	      sta	R1
      4  2f68				  -	      pla
      5  2f68				  -	      sta	R0
      6  2f68					      ELSE
      7  2f68		       85 fb		      sta	R0
      8  2f6a		       84 fc		      sty	R1
      9  2f6c					      ENDIF
     10  2f6c		       68		      pla
     11  2f6d		       85 fe		      sta	R3
     12  2f6f		       68		      pla
     13  2f70		       85 fd		      sta	R2
     14  2f72		       20 0d 08 	      jsr	NUCL_SMUL16
     15  2f75					      IF	!FPUSH
     16  2f75		       a5 fb		      lda	R0
     17  2f77		       48		      pha
     18  2f78		       a5 fc		      lda	R1
     19  2f7a		       48		      pha
     20  2f7b				  -	      ELSE
     21  2f7b				  -	      lda	R0
     22  2f7b				  -	      ldy	R1
     23  2f7b					      ENDIF
   5060  2f7b				   FPULL      SET	0
      0  2f7b					      pbyte	#6
      1  2f7b		       a9 06		      lda	#6
      2  2f7d					      IF	!FPUSH
      3  2f7d		       48		      pha
      4  2f7e					      ENDIF
      0  2f7e					      btow
      1  2f7e		       a9 00		      lda	#$00
      2  2f80		       48		      pha
      0  2f81					      addw
      1  2f81		       ba		      tsx
      2  2f82		       bd 02 01 	      lda.wx	stack+2
      3  2f85		       18		      clc
      4  2f86		       7d 04 01 	      adc.wx	stack+4
      5  2f89		       9d 04 01 	      sta.wx	stack+4
      6  2f8c		       68		      pla
      7  2f8d		       7d 03 01 	      adc.wx	stack+3
      8  2f90		       9d 03 01 	      sta.wx	stack+3
      9  2f93		       68		      pla
      0  2f94					      pword	#1024
      1  2f94					      IF	!FPUSH
      2  2f94		       a9 00		      lda	#<#1024
      3  2f96		       48		      pha
      4  2f97		       a9 04		      lda	#>#1024
      5  2f99		       48		      pha
      6  2f9a				  -	      ELSE
      7  2f9a				  -	      lda	#<#1024
      8  2f9a				  -	      ldy	#>#1024
      9  2f9a					      ENDIF
      0  2f9a					      addw
      1  2f9a		       ba		      tsx
      2  2f9b		       bd 02 01 	      lda.wx	stack+2
      3  2f9e		       18		      clc
      4  2f9f		       7d 04 01 	      adc.wx	stack+4
      5  2fa2		       9d 04 01 	      sta.wx	stack+4
      6  2fa5		       68		      pla
      7  2fa6		       7d 03 01 	      adc.wx	stack+3
      8  2fa9		       9d 03 01 	      sta.wx	stack+3
      9  2fac		       68		      pla
   5066  2fac				   FPUSH      SET	1
      0  2fad					      pwvar	_score
      1  2fad				  -	      IF	!FPUSH
      2  2fad				  -	      lda	_score
      3  2fad				  -	      pha
      4  2fad				  -	      lda	_score+1
      5  2fad				  -	      pha
      6  2fad					      ELSE
      7  2fad		       ad bb 4a 	      lda	_score
      8  2fb0		       ac bc 4a 	      ldy	_score+1
      9  2fb3					      ENDIF
   5068  2fb3
   5069  2fb3				   FPULL      SET	1
   5070  2fb3				   FPUSH      SET	0
      0  2fb3					      wat
      1  2fb3				  -	      IF	!FPULL
      2  2fb3				  -	      pla
      3  2fb3				  -	      sta	R3
      4  2fb3				  -	      pla
      5  2fb3				  -	      sta	R2
      6  2fb3					      ELSE
      7  2fb3		       85 fd		      sta	R2
      8  2fb5		       84 fe		      sty	R3
      9  2fb7					      ENDIF
     10  2fb7		       68		      pla
     11  2fb8		       85 46		      sta	RB
     12  2fba		       68		      pla
     13  2fbb		       85 45		      sta	RA
     14  2fbd		       20 1f 0a 	      jsr	STDLIB_OUTPUT_WORD
   5072  2fc0		       60		      rts
   5073  2fc1
   5074  2fc1
   5075  2fc1
   5076  2fc1
   5077  2fc1
   5078  2fc1
   5079  2fc1
   5080  2fc1				   _EI_14
   5081  2fc1		       60		      rts
   5082  2fc2
   5083  2fc2
   5084  2fc2
   5085  2fc2
   5086  2fc2
   5087  2fc2
   5088  2fc2
   5089  2fc2				   _Pdetect_collisions_end
   5090  2fc2		       4c 2d 32 	      jmp	_Pmove_ship_end
   5091  2fc5
   5092  2fc5
   5093  2fc5
   5094  2fc5
   5095  2fc5
   5096  2fc5
   5097  2fc5
   5098  2fc5				   _Pmove_ship
   5099  2fc5				   FPULL      SET	0
   5100  2fc5				   FPUSH      SET	1
      0  2fc5					      pbvar	_bullet_on
      0  2fc5					      pbyte	_bullet_on
      1  2fc5		       ad b5 4a 	      lda	_bullet_on
      2  2fc8				  -	      IF	!FPUSH
      3  2fc8				  -	      pha
      4  2fc8					      ENDIF
   5102  2fc8				   FPULL      SET	1
   5103  2fc8				   FPUSH      SET	0
      0  2fc8					      ongoto	_On_LB3, _On_HB3
      1  2fc8				  -	      IF	!FPULL
      2  2fc8				  -	      pla
      3  2fc8					      ENDIF
      4  2fc8		       aa		      tax
      5  2fc9		       bd de 49 	      lda.wx	_On_LB3
      6  2fcc		       8d d6 2f 	      sta	.selfmod_code+1
      7  2fcf		       bd e0 49 	      lda.wx	_On_HB3
      8  2fd2		       8d d7 2f 	      sta	.selfmod_code+2
      9  2fd5				   .selfmod_code
     10  2fd5		       4c 00 00 	      jmp	$0000
   5105  2fd8				   _Lmove_ship.bullet
      0  2fd8					      pbyte_pbyte_cmpblt_cond	_bullet_posy, #66, _EI_15, _EL_15
      1  2fd8
      2  2fd8
      3  2fd8		       ad b8 4a 	      lda	_bullet_posy
      4  2fdb		       c9 42		      cmp	#66
      5  2fdd		       90 03		      bcc	*+5
      6  2fdf				  -	      IFCONST	_EL_15
      7  2fdf				  -	      jmp	_EL_15
      8  2fdf					      ELSE
      9  2fdf		       4c f8 2f 	      jmp	_EI_15
     10  2fe2					      ENDIF
   5107  2fe2				   FPULL      SET	0
   5108  2fe2				   FPUSH      SET	1
      0  2fe2					      pbyte	#0
      1  2fe2		       a9 00		      lda	#0
      2  2fe4				  -	      IF	!FPUSH
      3  2fe4				  -	      pha
      4  2fe4					      ENDIF
   5110  2fe4				   FPULL      SET	1
   5111  2fe4				   FPUSH      SET	0
      0  2fe4					      plb2var	_bullet_on
      1  2fe4				  -	      IF	!FPULL
      2  2fe4				  -	      pla
      3  2fe4					      ENDIF
      4  2fe4		       8d b5 4a 	      sta	_bullet_on
   5113  2fe4				   FPULL      SET	0
      0  2fe7					      peekb_const_addr	#53269
      1  2fe7
      2  2fe7
      3  2fe7
      4  2fe7		       d0 15	   .ad	      EQU	#53269
      5  2fe7		       ad 15 d0 	      lda	.ad
      6  2fea					      IF	!FPUSH
      7  2fea		       48		      pha
      8  2feb					      ENDIF
   5115  2feb				   FPUSH      SET	1
      0  2feb					      pbyte	#253
      1  2feb		       a9 fd		      lda	#253
      2  2fed				  -	      IF	!FPUSH
      3  2fed				  -	      pha
      4  2fed					      ENDIF
   5117  2fed				   FPULL      SET	1
      0  2fed					      andb
      1  2fed				  -	      IF	!FPULL
      2  2fed				  -	      pla
      3  2fed					      ENDIF
      4  2fed		       85 fc		      sta	R1
      5  2fef		       68		      pla
      6  2ff0		       25 fc		      and	R1
      7  2ff2				  -	      IF	!FPUSH
      8  2ff2				  -	      pha
      9  2ff2					      ENDIF
   5119  2ff2				   FPUSH      SET	0
      0  2ff2					      pokeb_const_addr	#53269
      1  2ff2
      2  2ff2
      3  2ff2
      4  2ff2		       d0 15	   .ad	      EQU	#53269
      5  2ff2				  -	      IF	!FPULL
      6  2ff2				  -	      pla
      7  2ff2					      ENDIF
      8  2ff2		       8d 15 d0 	      sta	.ad
   5121  2ff5		       4c 07 30 	      jmp	_Lmove_ship.no_bullet
   5122  2ff8
   5123  2ff8
   5124  2ff8
   5125  2ff8
   5126  2ff8				   _EI_15
   5127  2ff8				   FPULL      SET	0
   5128  2ff8				   FPUSH      SET	1
      0  2ff8					      opt_pbyte_pbyte_sub	_bullet_posy, #4
      1  2ff8
      2  2ff8
      3  2ff8
      4  2ff8
      5  2ff8
      6  2ff8		       ad b8 4a 	      lda	_bullet_posy
      7  2ffb		       38		      sec
      8  2ffc		       e9 04		      sbc	#4
      9  2ffe				  -	      IF	!FPUSH
     10  2ffe				  -	      pha
     11  2ffe					      ENDIF
   5130  2ffe				   FPULL      SET	1
   5131  2ffe				   FPUSH      SET	0
      0  2ffe					      plb2var	_bullet_posy
      1  2ffe				  -	      IF	!FPULL
      2  2ffe				  -	      pla
      3  2ffe					      ENDIF
      4  2ffe		       8d b8 4a 	      sta	_bullet_posy
   5133  2ffe				   FPULL      SET	0
   5134  2ffe				   FPUSH      SET	1
      0  3001					      pbvar	_bullet_posy
      0  3001					      pbyte	_bullet_posy
      1  3001		       ad b8 4a 	      lda	_bullet_posy
      2  3004				  -	      IF	!FPUSH
      3  3004				  -	      pha
      4  3004					      ENDIF
   5136  3004				   FPULL      SET	1
   5137  3004				   FPUSH      SET	0
      0  3004					      pokeb_const_addr	#53251
      1  3004
      2  3004
      3  3004
      4  3004		       d0 03	   .ad	      EQU	#53251
      5  3004				  -	      IF	!FPULL
      6  3004				  -	      pla
      7  3004					      ENDIF
      8  3004		       8d 03 d0 	      sta	.ad
   5139  3007
   5140  3007
   5141  3007
   5142  3007
   5143  3007				   _Lmove_ship.no_bullet
   5144  3007				   FPULL      SET	0
   5145  3007				   FPUSH      SET	1
      0  3007					      peekb_const_addr	#56320
      1  3007
      2  3007
      3  3007
      4  3007		       dc 00	   .ad	      EQU	#56320
      5  3007		       ad 00 dc 	      lda	.ad
      6  300a				  -	      IF	!FPUSH
      7  300a				  -	      pha
      8  300a					      ENDIF
   5147  300a				   FPULL      SET	1
   5148  300a				   FPUSH      SET	0
      0  300a					      plb2var	_move_ship.joy
      1  300a				  -	      IF	!FPULL
      2  300a				  -	      pla
      3  300a					      ENDIF
      4  300a		       8d e7 4a 	      sta	_move_ship.joy
   5150  300a				   FPULL      SET	0
      0  300d					      opt_pbyte_pbyte_and	_move_ship.joy, #4
      1  300d
      2  300d
      3  300d
      4  300d
      5  300d
      6  300d		       ad e7 4a 	      lda	_move_ship.joy
      7  3010		       29 04		      and	#4
      8  3012					      IF	!FPUSH
      9  3012		       48		      pha
     10  3013					      ENDIF
   5152  3013				   FPUSH      SET	1
      0  3013					      pbyte	#0
      1  3013		       a9 00		      lda	#0
      2  3015				  -	      IF	!FPUSH
      3  3015				  -	      pha
      4  3015					      ENDIF
   5154  3015				   FPULL      SET	1
      0  3015					      cmpbeq
      1  3015				  -	      IF	!FPULL
      2  3015				  -	      pla
      3  3015					      ENDIF
      4  3015		       85 fc		      sta	R1
      5  3017		       68		      pla
      6  3018		       c5 fc		      cmp	R1
      7  301a		       f0 05		      beq	.pht
      0  301c					      pzero
      1  301c		       a9 00		      lda	#$00
      2  301e				  -	      IF	!FPUSH
      3  301e				  -	      pha
      4  301e					      ENDIF
      9  301e				  -	      IF	!FPUSH
     10  301e				  -	      jmp	*+6
     11  301e					      ELSE
     12  301e		       4c 23 30 	      jmp	*+5
     13  3021					      ENDIF
      0  3021				   .pht       pone
      1  3021		       a9 01		      lda	#$01
      2  3023				  -	      IF	!FPUSH
      3  3023				  -	      pha
      4  3023					      ENDIF
   5156  3023				   FPUSH      SET	0
      0  3023					      cond_stmt	_EI_16, _EL_16
      1  3023				  -	      IF	!FPULL
      2  3023				  -	      pla
      3  3023					      ENDIF
      4  3023		       d0 03		      bne	*+5
      5  3025					      IFCONST	_EL_16
      6  3025		       4c 6b 30 	      jmp	_EL_16
      7  3028				  -	      ELSE
      8  3028				  -	      jmp	_EI_16
      9  3028					      ENDIF
   5158  3028				   FPULL      SET	0
      0  3028					      pwvar	_ship_pos
      1  3028					      IF	!FPUSH
      2  3028		       ad b3 4a 	      lda	_ship_pos
      3  302b		       48		      pha
      4  302c		       ad b4 4a 	      lda	_ship_pos+1
      5  302f		       48		      pha
      6  3030				  -	      ELSE
      7  3030				  -	      lda	_ship_pos
      8  3030				  -	      ldy	_ship_pos+1
      9  3030					      ENDIF
      0  3030					      pbyte	#24
      1  3030		       a9 18		      lda	#24
      2  3032					      IF	!FPUSH
      3  3032		       48		      pha
      4  3033					      ENDIF
      0  3033					      btow
      1  3033		       a9 00		      lda	#$00
      2  3035		       48		      pha
   5162  3035				   FPUSH      SET	1
      0  3036					      cmpwgt
      1  3036		       ba		      tsx
      2  3037		       bd 02 01 	      lda.wx	stack+2
      3  303a		       dd 04 01 	      cmp.wx	stack+4
      4  303d		       bd 01 01 	      lda.wx	stack+1
      5  3040		       fd 03 01 	      sbc.wx	stack+3
      6  3043		       30 0a		      bmi	.pht
      7  3045		       e8		      inx
      8  3046		       e8		      inx
      9  3047		       e8		      inx
     10  3048		       e8		      inx
     11  3049		       9a		      txs
      0  304a					      pzero
      1  304a		       a9 00		      lda	#$00
      2  304c				  -	      IF	!FPUSH
      3  304c				  -	      pha
      4  304c					      ENDIF
     13  304c				  -	      IF	!FPUSH
     14  304c				  -	      jmp	*+11
     15  304c					      ELSE
     16  304c		       4c 56 30 	      jmp	*+10
     17  304f					      ENDIF
     18  304f		       e8	   .pht       inx
     19  3050		       e8		      inx
     20  3051		       e8		      inx
     21  3052		       e8		      inx
     22  3053		       9a		      txs
      0  3054					      pone
      1  3054		       a9 01		      lda	#$01
      2  3056				  -	      IF	!FPUSH
      3  3056				  -	      pha
      4  3056					      ENDIF
   5164  3056				   FPULL      SET	1
   5165  3056				   FPUSH      SET	0
      0  3056					      cond_stmt	_EI_65544, _EL_65544
      1  3056				  -	      IF	!FPULL
      2  3056				  -	      pla
      3  3056					      ENDIF
      4  3056		       d0 03		      bne	*+5
      5  3058				  -	      IFCONST	_EL_65544
      6  3058				  -	      jmp	_EL_65544
      7  3058					      ELSE
      8  3058		       4c 68 30 	      jmp	_EI_65544
      9  305b					      ENDIF
      0  305b					      decw	_ship_pos
      1  305b		       ce b3 4a 	      dec	_ship_pos
      2  305e		       a9 ff		      lda	#$ff
      3  3060		       cd b3 4a 	      cmp	_ship_pos
      4  3063		       d0 03		      bne	.skip
      5  3065		       ce b4 4a 	      dec	_ship_pos+1
      6  3068				   .skip
   5168  3068				   _EI_65544
   5169  3068		       4c c1 30 	      jmp	_EI_16
   5170  306b
   5171  306b
   5172  306b
   5173  306b
   5174  306b
   5175  306b
   5176  306b
   5177  306b				   _EL_16
   5178  306b				   FPULL      SET	0
      0  306b					      opt_pbyte_pbyte_and	_move_ship.joy, #8
      1  306b
      2  306b
      3  306b
      4  306b
      5  306b
      6  306b		       ad e7 4a 	      lda	_move_ship.joy
      7  306e		       29 08		      and	#8
      8  3070					      IF	!FPUSH
      9  3070		       48		      pha
     10  3071					      ENDIF
   5180  3071				   FPUSH      SET	1
      0  3071					      pbyte	#0
      1  3071		       a9 00		      lda	#0
      2  3073				  -	      IF	!FPUSH
      3  3073				  -	      pha
      4  3073					      ENDIF
   5182  3073				   FPULL      SET	1
      0  3073					      cmpbeq
      1  3073				  -	      IF	!FPULL
      2  3073				  -	      pla
      3  3073					      ENDIF
      4  3073		       85 fc		      sta	R1
      5  3075		       68		      pla
      6  3076		       c5 fc		      cmp	R1
      7  3078		       f0 05		      beq	.pht
      0  307a					      pzero
      1  307a		       a9 00		      lda	#$00
      2  307c				  -	      IF	!FPUSH
      3  307c				  -	      pha
      4  307c					      ENDIF
      9  307c				  -	      IF	!FPUSH
     10  307c				  -	      jmp	*+6
     11  307c					      ELSE
     12  307c		       4c 81 30 	      jmp	*+5
     13  307f					      ENDIF
      0  307f				   .pht       pone
      1  307f		       a9 01		      lda	#$01
      2  3081				  -	      IF	!FPUSH
      3  3081				  -	      pha
      4  3081					      ENDIF
   5184  3081				   FPUSH      SET	0
      0  3081					      cond_stmt	_EI_17, _EL_17
      1  3081				  -	      IF	!FPULL
      2  3081				  -	      pla
      3  3081					      ENDIF
      4  3081		       d0 03		      bne	*+5
      5  3083				  -	      IFCONST	_EL_17
      6  3083				  -	      jmp	_EL_17
      7  3083					      ELSE
      8  3083		       4c c1 30 	      jmp	_EI_17
      9  3086					      ENDIF
   5186  3086				   FPULL      SET	0
      0  3086					      pwvar	_ship_pos
      1  3086					      IF	!FPUSH
      2  3086		       ad b3 4a 	      lda	_ship_pos
      3  3089		       48		      pha
      4  308a		       ad b4 4a 	      lda	_ship_pos+1
      5  308d		       48		      pha
      6  308e				  -	      ELSE
      7  308e				  -	      lda	_ship_pos
      8  308e				  -	      ldy	_ship_pos+1
      9  308e					      ENDIF
      0  308e					      pword	#320
      1  308e					      IF	!FPUSH
      2  308e		       a9 40		      lda	#<#320
      3  3090		       48		      pha
      4  3091		       a9 01		      lda	#>#320
      5  3093		       48		      pha
      6  3094				  -	      ELSE
      7  3094				  -	      lda	#<#320
      8  3094				  -	      ldy	#>#320
      9  3094					      ENDIF
   5189  3094				   FPUSH      SET	1
      0  3094					      cmpwlt
      1  3094		       ba		      tsx
      2  3095		       bd 04 01 	      lda.wx	stack+4
      3  3098		       dd 02 01 	      cmp.wx	stack+2
      4  309b		       bd 03 01 	      lda.wx	stack+3
      5  309e		       fd 01 01 	      sbc.wx	stack+1
      6  30a1		       10 0a		      bpl	.phf
      7  30a3		       e8		      inx
      8  30a4		       e8		      inx
      9  30a5		       e8		      inx
     10  30a6		       e8		      inx
     11  30a7		       9a		      txs
      0  30a8					      pone
      1  30a8		       a9 01		      lda	#$01
      2  30aa				  -	      IF	!FPUSH
      3  30aa				  -	      pha
      4  30aa					      ENDIF
     13  30aa				  -	      IF	!FPUSH
     14  30aa				  -	      jmp	*+11
     15  30aa					      ELSE
     16  30aa		       4c b4 30 	      jmp	*+10
     17  30ad					      ENDIF
     18  30ad		       e8	   .phf       inx
     19  30ae		       e8		      inx
     20  30af		       e8		      inx
     21  30b0		       e8		      inx
     22  30b1		       9a		      txs
      0  30b2					      pzero
      1  30b2		       a9 00		      lda	#$00
      2  30b4				  -	      IF	!FPUSH
      3  30b4				  -	      pha
      4  30b4					      ENDIF
   5191  30b4				   FPULL      SET	1
   5192  30b4				   FPUSH      SET	0
      0  30b4					      cond_stmt	_EI_65545, _EL_65545
      1  30b4				  -	      IF	!FPULL
      2  30b4				  -	      pla
      3  30b4					      ENDIF
      4  30b4		       d0 03		      bne	*+5
      5  30b6				  -	      IFCONST	_EL_65545
      6  30b6				  -	      jmp	_EL_65545
      7  30b6					      ELSE
      8  30b6		       4c c1 30 	      jmp	_EI_65545
      9  30b9					      ENDIF
      0  30b9					      incw	_ship_pos
      1  30b9		       ee b3 4a 	      inc	_ship_pos
      2  30bc		       d0 03		      bne	.skip
      3  30be		       ee b4 4a 	      inc	_ship_pos+1
      4  30c1				   .skip
   5195  30c1				   _EI_65545
   5196  30c1
   5197  30c1
   5198  30c1
   5199  30c1
   5200  30c1
   5201  30c1
   5202  30c1
   5203  30c1				   _EI_17
   5204  30c1
   5205  30c1
   5206  30c1
   5207  30c1
   5208  30c1
   5209  30c1
   5210  30c1
   5211  30c1				   _EI_16
   5212  30c1		       20 e3 30 	      jsr	_Lmove_ship.move
   5213  30c1				   FPULL      SET	0
      0  30c4					      opt_pbyte_pbyte_and	_move_ship.joy, #16
      1  30c4
      2  30c4
      3  30c4
      4  30c4
      5  30c4
      6  30c4		       ad e7 4a 	      lda	_move_ship.joy
      7  30c7		       29 10		      and	#16
      8  30c9					      IF	!FPUSH
      9  30c9		       48		      pha
     10  30ca					      ENDIF
   5215  30ca				   FPUSH      SET	1
      0  30ca					      pbyte	#0
      1  30ca		       a9 00		      lda	#0
      2  30cc				  -	      IF	!FPUSH
      3  30cc				  -	      pha
      4  30cc					      ENDIF
   5217  30cc				   FPULL      SET	1
      0  30cc					      cmpbeq
      1  30cc				  -	      IF	!FPULL
      2  30cc				  -	      pla
      3  30cc					      ENDIF
      4  30cc		       85 fc		      sta	R1
      5  30ce		       68		      pla
      6  30cf		       c5 fc		      cmp	R1
      7  30d1		       f0 05		      beq	.pht
      0  30d3					      pzero
      1  30d3		       a9 00		      lda	#$00
      2  30d5				  -	      IF	!FPUSH
      3  30d5				  -	      pha
      4  30d5					      ENDIF
      9  30d5				  -	      IF	!FPUSH
     10  30d5				  -	      jmp	*+6
     11  30d5					      ELSE
     12  30d5		       4c da 30 	      jmp	*+5
     13  30d8					      ENDIF
      0  30d8				   .pht       pone
      1  30d8		       a9 01		      lda	#$01
      2  30da				  -	      IF	!FPUSH
      3  30da				  -	      pha
      4  30da					      ENDIF
   5219  30da				   FPUSH      SET	0
      0  30da					      cond_stmt	_EI_65546, _EL_65546
      1  30da				  -	      IF	!FPULL
      2  30da				  -	      pla
      3  30da					      ENDIF
      4  30da		       d0 03		      bne	*+5
      5  30dc				  -	      IFCONST	_EL_65546
      6  30dc				  -	      jmp	_EL_65546
      7  30dc					      ELSE
      8  30dc		       4c e2 30 	      jmp	_EI_65546
      9  30df					      ENDIF
   5221  30df		       20 63 31 	      jsr	_Lmove_ship.fire
   5222  30e2				   _EI_65546
   5223  30e2		       60		      rts
   5224  30e3
   5225  30e3
   5226  30e3
   5227  30e3
   5228  30e3
   5229  30e3
   5230  30e3
   5231  30e3				   _Lmove_ship.move
   5232  30e3				   FPULL      SET	0
      0  30e3					      pwvar	_ship_pos
      1  30e3					      IF	!FPUSH
      2  30e3		       ad b3 4a 	      lda	_ship_pos
      3  30e6		       48		      pha
      4  30e7		       ad b4 4a 	      lda	_ship_pos+1
      5  30ea		       48		      pha
      6  30eb				  -	      ELSE
      7  30eb				  -	      lda	_ship_pos
      8  30eb				  -	      ldy	_ship_pos+1
      9  30eb					      ENDIF
   5234  30eb				   FPUSH      SET	1
      0  30eb					      pword	#53248
      1  30eb				  -	      IF	!FPUSH
      2  30eb				  -	      lda	#<#53248
      3  30eb				  -	      pha
      4  30eb				  -	      lda	#>#53248
      5  30eb				  -	      pha
      6  30eb					      ELSE
      7  30eb		       a9 00		      lda	#<#53248
      8  30ed		       a0 d0		      ldy	#>#53248
      9  30ef					      ENDIF
   5236  30ef				   FPULL      SET	1
   5237  30ef				   FPUSH      SET	0
      0  30ef					      pokew
      1  30ef				  -	      IF	!FPULL
      2  30ef				  -	      pla
      3  30ef				  -	      sta	.selfmod_code+2
      4  30ef				  -	      pla
      5  30ef				  -	      sta	.selfmod_code+1
      6  30ef					      ELSE
      7  30ef		       8d f8 30 	      sta	.selfmod_code+1
      8  30f2		       8c f9 30 	      sty	.selfmod_code+2
      9  30f5					      ENDIF
     10  30f5		       68		      pla
     11  30f6		       68		      pla
     12  30f7				   .selfmod_code
     13  30f7		       8d 00 00 	      sta.w	$0000
   5239  30f7				   FPULL      SET	0
      0  30fa					      pwvar	_ship_pos
      1  30fa					      IF	!FPUSH
      2  30fa		       ad b3 4a 	      lda	_ship_pos
      3  30fd		       48		      pha
      4  30fe		       ad b4 4a 	      lda	_ship_pos+1
      5  3101		       48		      pha
      6  3102				  -	      ELSE
      7  3102				  -	      lda	_ship_pos
      8  3102				  -	      ldy	_ship_pos+1
      9  3102					      ENDIF
      0  3102					      pbyte	#255
      1  3102		       a9 ff		      lda	#255
      2  3104					      IF	!FPUSH
      3  3104		       48		      pha
      4  3105					      ENDIF
      0  3105					      btow
      1  3105		       a9 00		      lda	#$00
      2  3107		       48		      pha
   5243  3107				   FPUSH      SET	1
      0  3108					      cmpwgt
      1  3108		       ba		      tsx
      2  3109		       bd 02 01 	      lda.wx	stack+2
      3  310c		       dd 04 01 	      cmp.wx	stack+4
      4  310f		       bd 01 01 	      lda.wx	stack+1
      5  3112		       fd 03 01 	      sbc.wx	stack+3
      6  3115		       30 0a		      bmi	.pht
      7  3117		       e8		      inx
      8  3118		       e8		      inx
      9  3119		       e8		      inx
     10  311a		       e8		      inx
     11  311b		       9a		      txs
      0  311c					      pzero
      1  311c		       a9 00		      lda	#$00
      2  311e				  -	      IF	!FPUSH
      3  311e				  -	      pha
      4  311e					      ENDIF
     13  311e				  -	      IF	!FPUSH
     14  311e				  -	      jmp	*+11
     15  311e					      ELSE
     16  311e		       4c 28 31 	      jmp	*+10
     17  3121					      ENDIF
     18  3121		       e8	   .pht       inx
     19  3122		       e8		      inx
     20  3123		       e8		      inx
     21  3124		       e8		      inx
     22  3125		       9a		      txs
      0  3126					      pone
      1  3126		       a9 01		      lda	#$01
      2  3128				  -	      IF	!FPUSH
      3  3128				  -	      pha
      4  3128					      ENDIF
   5245  3128				   FPULL      SET	1
   5246  3128				   FPUSH      SET	0
      0  3128					      cond_stmt	_EI_18, _EL_18
      1  3128				  -	      IF	!FPULL
      2  3128				  -	      pla
      3  3128					      ENDIF
      4  3128		       d0 03		      bne	*+5
      5  312a					      IFCONST	_EL_18
      6  312a		       4c 54 31 	      jmp	_EL_18
      7  312d				  -	      ELSE
      8  312d				  -	      jmp	_EI_18
      9  312d					      ENDIF
   5248  312d				   FPULL      SET	0
   5249  312d				   FPUSH      SET	1
      0  312d					      pword	#53264
      1  312d				  -	      IF	!FPUSH
      2  312d				  -	      lda	#<#53264
      3  312d				  -	      pha
      4  312d				  -	      lda	#>#53264
      5  312d				  -	      pha
      6  312d					      ELSE
      7  312d		       a9 10		      lda	#<#53264
      8  312f		       a0 d0		      ldy	#>#53264
      9  3131					      ENDIF
   5251  3131				   FPULL      SET	1
   5252  3131				   FPUSH      SET	0
      0  3131					      peekb
      1  3131				  -	      IF	!FPULL
      2  3131				  -	      pla
      3  3131				  -	      sta	.selfmod_code+2
      4  3131				  -	      pla
      5  3131				  -	      sta	.selfmod_code+1
      6  3131					      ELSE
      7  3131		       8d 38 31 	      sta	.selfmod_code+1
      8  3134		       8c 39 31 	      sty	.selfmod_code+2
      9  3137					      ENDIF
     10  3137				   .selfmod_code
     11  3137		       ad 00 00 	      lda.w	$0000
     12  313a					      IF	!FPUSH
     13  313a		       48		      pha
     14  313b					      ENDIF
   5254  313b				   FPULL      SET	0
   5255  313b				   FPUSH      SET	1
      0  313b					      pbyte	#1
      1  313b		       a9 01		      lda	#1
      2  313d				  -	      IF	!FPUSH
      3  313d				  -	      pha
      4  313d					      ENDIF
   5257  313d				   FPULL      SET	1
   5258  313d				   FPUSH      SET	0
      0  313d					      orb
      1  313d				  -	      IF	!FPULL
      2  313d				  -	      pla
      3  313d					      ENDIF
      4  313d		       85 fc		      sta	R1
      5  313f		       68		      pla
      6  3140		       05 fc		      ora	R1
      7  3142					      IF	!FPUSH
      8  3142		       48		      pha
      9  3143					      ENDIF
   5260  3143				   FPULL      SET	0
   5261  3143				   FPUSH      SET	1
      0  3143					      pword	#53264
      1  3143				  -	      IF	!FPUSH
      2  3143				  -	      lda	#<#53264
      3  3143				  -	      pha
      4  3143				  -	      lda	#>#53264
      5  3143				  -	      pha
      6  3143					      ELSE
      7  3143		       a9 10		      lda	#<#53264
      8  3145		       a0 d0		      ldy	#>#53264
      9  3147					      ENDIF
   5263  3147				   FPULL      SET	1
   5264  3147				   FPUSH      SET	0
      0  3147					      pokeb
      1  3147				  -	      IF	!FPULL
      2  3147				  -	      pla
      3  3147				  -	      sta	.selfmod_code+2
      4  3147				  -	      pla
      5  3147				  -	      sta	.selfmod_code+1
      6  3147					      ELSE
      7  3147		       8d 4f 31 	      sta	.selfmod_code+1
      8  314a		       8c 50 31 	      sty	.selfmod_code+2
      9  314d					      ENDIF
     10  314d		       68		      pla
     11  314e				   .selfmod_code
     12  314e		       8d 00 00 	      sta.w	$0000
   5266  3151		       4c 62 31 	      jmp	_EI_18
   5267  3154				   _EL_18
   5268  3154				   FPULL      SET	0
      0  3154					      peekb_const_addr	#53264
      1  3154
      2  3154
      3  3154
      4  3154		       d0 10	   .ad	      EQU	#53264
      5  3154		       ad 10 d0 	      lda	.ad
      6  3157					      IF	!FPUSH
      7  3157		       48		      pha
      8  3158					      ENDIF
   5270  3158				   FPUSH      SET	1
      0  3158					      pbyte	#254
      1  3158		       a9 fe		      lda	#254
      2  315a				  -	      IF	!FPUSH
      3  315a				  -	      pha
      4  315a					      ENDIF
   5272  315a				   FPULL      SET	1
      0  315a					      andb
      1  315a				  -	      IF	!FPULL
      2  315a				  -	      pla
      3  315a					      ENDIF
      4  315a		       85 fc		      sta	R1
      5  315c		       68		      pla
      6  315d		       25 fc		      and	R1
      7  315f				  -	      IF	!FPUSH
      8  315f				  -	      pha
      9  315f					      ENDIF
   5274  315f				   FPUSH      SET	0
      0  315f					      pokeb_const_addr	#53264
      1  315f
      2  315f
      3  315f
      4  315f		       d0 10	   .ad	      EQU	#53264
      5  315f				  -	      IF	!FPULL
      6  315f				  -	      pla
      7  315f					      ENDIF
      8  315f		       8d 10 d0 	      sta	.ad
   5276  3162
   5277  3162
   5278  3162
   5279  3162
   5280  3162				   _EI_18
   5281  3162		       60		      rts
   5282  3163
   5283  3163
   5284  3163
   5285  3163
   5286  3163
   5287  3163
   5288  3163
   5289  3163				   _Lmove_ship.fire
      0  3163					      pbyte_pbyte_cmpbeq_cond	_bullet_on, #1, _EI_65547, _EL_65547
      1  3163
      2  3163
      3  3163		       ad b5 4a 	      lda	_bullet_on
      4  3166		       c9 01		      cmp	#1
      5  3168		       f0 03		      beq	*+5
      6  316a				  -	      IFCONST	_EL_65547
      7  316a				  -	      jmp	_EL_65547
      8  316a					      ELSE
      9  316a		       4c 6e 31 	      jmp	_EI_65547
     10  316d					      ENDIF
   5291  316d		       60		      rts
   5292  316e
   5293  316e
   5294  316e
   5295  316e
   5296  316e
   5297  316e
   5298  316e
   5299  316e				   _EI_65547
   5300  316e				   FPULL      SET	0
   5301  316e				   FPUSH      SET	1
      0  316e					      pbyte	#1
      1  316e		       a9 01		      lda	#1
      2  3170				  -	      IF	!FPUSH
      3  3170				  -	      pha
      4  3170					      ENDIF
   5303  3170				   FPULL      SET	1
   5304  3170				   FPUSH      SET	0
      0  3170					      plb2var	_bullet_on
      1  3170				  -	      IF	!FPULL
      2  3170				  -	      pla
      3  3170					      ENDIF
      4  3170		       8d b5 4a 	      sta	_bullet_on
   5306  3170				   FPULL      SET	0
   5307  3170				   FPUSH      SET	1
      0  3173					      opt_pwvar_pword_add	_ship_pos, #11
      1  3173
      2  3173
      3  3173
      4  3173		       ad b3 4a 	      lda	_ship_pos
      5  3176		       18		      clc
      6  3177		       69 0b		      adc	<#11
      7  3179				  -	      IF	!FPUSH
      8  3179				  -	      pha
      9  3179					      ELSE
     10  3179		       aa		      tax
     11  317a					      ENDIF
     12  317a		       ad b4 4a 	      lda	_ship_pos+1
     13  317d		       69 00		      adc	>#11
     14  317f				  -	      IF	!FPUSH
     15  317f				  -	      pha
     16  317f					      ELSE
     17  317f		       a8		      tay
     18  3180		       8a		      txa
     19  3181					      ENDIF
   5309  3181				   FPULL      SET	1
   5310  3181				   FPUSH      SET	0
      0  3181					      plw2var	_bullet_posx
      1  3181				  -	      IF	!FPULL
      2  3181				  -	      pla
      3  3181				  -	      sta	_bullet_posx+1
      4  3181				  -	      pla
      5  3181				  -	      sta	_bullet_posx
      6  3181					      ELSE
      7  3181		       8d b6 4a 	      sta	_bullet_posx
      8  3184		       8c b7 4a 	      sty	_bullet_posx+1
      9  3187					      ENDIF
   5312  3187				   FPULL      SET	0
   5313  3187				   FPUSH      SET	1
      0  3187					      pbyte	#235
      1  3187		       a9 eb		      lda	#235
      2  3189				  -	      IF	!FPUSH
      3  3189				  -	      pha
      4  3189					      ENDIF
   5315  3189				   FPULL      SET	1
   5316  3189				   FPUSH      SET	0
      0  3189					      plb2var	_bullet_posy
      1  3189				  -	      IF	!FPULL
      2  3189				  -	      pla
      3  3189					      ENDIF
      4  3189		       8d b8 4a 	      sta	_bullet_posy
   5318  3189				   FPULL      SET	0
      0  318c					      pwvar	_bullet_posx
      1  318c					      IF	!FPUSH
      2  318c		       ad b6 4a 	      lda	_bullet_posx
      3  318f		       48		      pha
      4  3190		       ad b7 4a 	      lda	_bullet_posx+1
      5  3193		       48		      pha
      6  3194				  -	      ELSE
      7  3194				  -	      lda	_bullet_posx
      8  3194				  -	      ldy	_bullet_posx+1
      9  3194					      ENDIF
   5320  3194				   FPUSH      SET	1
      0  3194					      pword	#53250
      1  3194				  -	      IF	!FPUSH
      2  3194				  -	      lda	#<#53250
      3  3194				  -	      pha
      4  3194				  -	      lda	#>#53250
      5  3194				  -	      pha
      6  3194					      ELSE
      7  3194		       a9 02		      lda	#<#53250
      8  3196		       a0 d0		      ldy	#>#53250
      9  3198					      ENDIF
   5322  3198				   FPULL      SET	1
   5323  3198				   FPUSH      SET	0
      0  3198					      pokew
      1  3198				  -	      IF	!FPULL
      2  3198				  -	      pla
      3  3198				  -	      sta	.selfmod_code+2
      4  3198				  -	      pla
      5  3198				  -	      sta	.selfmod_code+1
      6  3198					      ELSE
      7  3198		       8d a1 31 	      sta	.selfmod_code+1
      8  319b		       8c a2 31 	      sty	.selfmod_code+2
      9  319e					      ENDIF
     10  319e		       68		      pla
     11  319f		       68		      pla
     12  31a0				   .selfmod_code
     13  31a0		       8d 00 00 	      sta.w	$0000
   5325  31a0				   FPULL      SET	0
      0  31a3					      pbvar	_bullet_posy
      0  31a3					      pbyte	_bullet_posy
      1  31a3		       ad b8 4a 	      lda	_bullet_posy
      2  31a6					      IF	!FPUSH
      3  31a6		       48		      pha
      4  31a7					      ENDIF
   5327  31a7				   FPUSH      SET	1
      0  31a7					      pword	#53251
      1  31a7				  -	      IF	!FPUSH
      2  31a7				  -	      lda	#<#53251
      3  31a7				  -	      pha
      4  31a7				  -	      lda	#>#53251
      5  31a7				  -	      pha
      6  31a7					      ELSE
      7  31a7		       a9 03		      lda	#<#53251
      8  31a9		       a0 d0		      ldy	#>#53251
      9  31ab					      ENDIF
   5329  31ab				   FPULL      SET	1
   5330  31ab				   FPUSH      SET	0
      0  31ab					      pokeb
      1  31ab				  -	      IF	!FPULL
      2  31ab				  -	      pla
      3  31ab				  -	      sta	.selfmod_code+2
      4  31ab				  -	      pla
      5  31ab				  -	      sta	.selfmod_code+1
      6  31ab					      ELSE
      7  31ab		       8d b3 31 	      sta	.selfmod_code+1
      8  31ae		       8c b4 31 	      sty	.selfmod_code+2
      9  31b1					      ENDIF
     10  31b1		       68		      pla
     11  31b2				   .selfmod_code
     12  31b2		       8d 00 00 	      sta.w	$0000
   5332  31b2				   FPULL      SET	0
      0  31b5					      pwvar	_bullet_posx
      1  31b5					      IF	!FPUSH
      2  31b5		       ad b6 4a 	      lda	_bullet_posx
      3  31b8		       48		      pha
      4  31b9		       ad b7 4a 	      lda	_bullet_posx+1
      5  31bc		       48		      pha
      6  31bd				  -	      ELSE
      7  31bd				  -	      lda	_bullet_posx
      8  31bd				  -	      ldy	_bullet_posx+1
      9  31bd					      ENDIF
      0  31bd					      pbyte	#255
      1  31bd		       a9 ff		      lda	#255
      2  31bf					      IF	!FPUSH
      3  31bf		       48		      pha
      4  31c0					      ENDIF
      0  31c0					      btow
      1  31c0		       a9 00		      lda	#$00
      2  31c2		       48		      pha
   5336  31c2				   FPUSH      SET	1
      0  31c3					      cmpwgt
      1  31c3		       ba		      tsx
      2  31c4		       bd 02 01 	      lda.wx	stack+2
      3  31c7		       dd 04 01 	      cmp.wx	stack+4
      4  31ca		       bd 01 01 	      lda.wx	stack+1
      5  31cd		       fd 03 01 	      sbc.wx	stack+3
      6  31d0		       30 0a		      bmi	.pht
      7  31d2		       e8		      inx
      8  31d3		       e8		      inx
      9  31d4		       e8		      inx
     10  31d5		       e8		      inx
     11  31d6		       9a		      txs
      0  31d7					      pzero
      1  31d7		       a9 00		      lda	#$00
      2  31d9				  -	      IF	!FPUSH
      3  31d9				  -	      pha
      4  31d9					      ENDIF
     13  31d9				  -	      IF	!FPUSH
     14  31d9				  -	      jmp	*+11
     15  31d9					      ELSE
     16  31d9		       4c e3 31 	      jmp	*+10
     17  31dc					      ENDIF
     18  31dc		       e8	   .pht       inx
     19  31dd		       e8		      inx
     20  31de		       e8		      inx
     21  31df		       e8		      inx
     22  31e0		       9a		      txs
      0  31e1					      pone
      1  31e1		       a9 01		      lda	#$01
      2  31e3				  -	      IF	!FPUSH
      3  31e3				  -	      pha
      4  31e3					      ENDIF
   5338  31e3				   FPULL      SET	1
   5339  31e3				   FPUSH      SET	0
      0  31e3					      cond_stmt	_EI_19, _EL_19
      1  31e3				  -	      IF	!FPULL
      2  31e3				  -	      pla
      3  31e3					      ENDIF
      4  31e3		       d0 03		      bne	*+5
      5  31e5					      IFCONST	_EL_19
      6  31e5		       4c 0f 32 	      jmp	_EL_19
      7  31e8				  -	      ELSE
      8  31e8				  -	      jmp	_EI_19
      9  31e8					      ENDIF
   5341  31e8				   FPULL      SET	0
   5342  31e8				   FPUSH      SET	1
      0  31e8					      pword	#53264
      1  31e8				  -	      IF	!FPUSH
      2  31e8				  -	      lda	#<#53264
      3  31e8				  -	      pha
      4  31e8				  -	      lda	#>#53264
      5  31e8				  -	      pha
      6  31e8					      ELSE
      7  31e8		       a9 10		      lda	#<#53264
      8  31ea		       a0 d0		      ldy	#>#53264
      9  31ec					      ENDIF
   5344  31ec				   FPULL      SET	1
   5345  31ec				   FPUSH      SET	0
      0  31ec					      peekb
      1  31ec				  -	      IF	!FPULL
      2  31ec				  -	      pla
      3  31ec				  -	      sta	.selfmod_code+2
      4  31ec				  -	      pla
      5  31ec				  -	      sta	.selfmod_code+1
      6  31ec					      ELSE
      7  31ec		       8d f3 31 	      sta	.selfmod_code+1
      8  31ef		       8c f4 31 	      sty	.selfmod_code+2
      9  31f2					      ENDIF
     10  31f2				   .selfmod_code
     11  31f2		       ad 00 00 	      lda.w	$0000
     12  31f5					      IF	!FPUSH
     13  31f5		       48		      pha
     14  31f6					      ENDIF
   5347  31f6				   FPULL      SET	0
   5348  31f6				   FPUSH      SET	1
      0  31f6					      pbyte	#2
      1  31f6		       a9 02		      lda	#2
      2  31f8				  -	      IF	!FPUSH
      3  31f8				  -	      pha
      4  31f8					      ENDIF
   5350  31f8				   FPULL      SET	1
   5351  31f8				   FPUSH      SET	0
      0  31f8					      orb
      1  31f8				  -	      IF	!FPULL
      2  31f8				  -	      pla
      3  31f8					      ENDIF
      4  31f8		       85 fc		      sta	R1
      5  31fa		       68		      pla
      6  31fb		       05 fc		      ora	R1
      7  31fd					      IF	!FPUSH
      8  31fd		       48		      pha
      9  31fe					      ENDIF
   5353  31fe				   FPULL      SET	0
   5354  31fe				   FPUSH      SET	1
      0  31fe					      pword	#53264
      1  31fe				  -	      IF	!FPUSH
      2  31fe				  -	      lda	#<#53264
      3  31fe				  -	      pha
      4  31fe				  -	      lda	#>#53264
      5  31fe				  -	      pha
      6  31fe					      ELSE
      7  31fe		       a9 10		      lda	#<#53264
      8  3200		       a0 d0		      ldy	#>#53264
      9  3202					      ENDIF
   5356  3202				   FPULL      SET	1
   5357  3202				   FPUSH      SET	0
      0  3202					      pokeb
      1  3202				  -	      IF	!FPULL
      2  3202				  -	      pla
      3  3202				  -	      sta	.selfmod_code+2
      4  3202				  -	      pla
      5  3202				  -	      sta	.selfmod_code+1
      6  3202					      ELSE
      7  3202		       8d 0a 32 	      sta	.selfmod_code+1
      8  3205		       8c 0b 32 	      sty	.selfmod_code+2
      9  3208					      ENDIF
     10  3208		       68		      pla
     11  3209				   .selfmod_code
     12  3209		       8d 00 00 	      sta.w	$0000
   5359  320c		       4c 1d 32 	      jmp	_EI_19
   5360  320f				   _EL_19
   5361  320f				   FPULL      SET	0
      0  320f					      peekb_const_addr	#53264
      1  320f
      2  320f
      3  320f
      4  320f		       d0 10	   .ad	      EQU	#53264
      5  320f		       ad 10 d0 	      lda	.ad
      6  3212					      IF	!FPUSH
      7  3212		       48		      pha
      8  3213					      ENDIF
   5363  3213				   FPUSH      SET	1
      0  3213					      pbyte	#253
      1  3213		       a9 fd		      lda	#253
      2  3215				  -	      IF	!FPUSH
      3  3215				  -	      pha
      4  3215					      ENDIF
   5365  3215				   FPULL      SET	1
      0  3215					      andb
      1  3215				  -	      IF	!FPULL
      2  3215				  -	      pla
      3  3215					      ENDIF
      4  3215		       85 fc		      sta	R1
      5  3217		       68		      pla
      6  3218		       25 fc		      and	R1
      7  321a				  -	      IF	!FPUSH
      8  321a				  -	      pha
      9  321a					      ENDIF
   5367  321a				   FPUSH      SET	0
      0  321a					      pokeb_const_addr	#53264
      1  321a
      2  321a
      3  321a
      4  321a		       d0 10	   .ad	      EQU	#53264
      5  321a				  -	      IF	!FPULL
      6  321a				  -	      pla
      7  321a					      ENDIF
      8  321a		       8d 10 d0 	      sta	.ad
   5369  321d
   5370  321d
   5371  321d
   5372  321d
   5373  321d				   _EI_19
   5374  321d				   FPULL      SET	0
      0  321d					      peekb_const_addr	#53269
      1  321d
      2  321d
      3  321d
      4  321d		       d0 15	   .ad	      EQU	#53269
      5  321d		       ad 15 d0 	      lda	.ad
      6  3220					      IF	!FPUSH
      7  3220		       48		      pha
      8  3221					      ENDIF
   5376  3221				   FPUSH      SET	1
      0  3221					      pbyte	#2
      1  3221		       a9 02		      lda	#2
      2  3223				  -	      IF	!FPUSH
      3  3223				  -	      pha
      4  3223					      ENDIF
   5378  3223				   FPULL      SET	1
      0  3223					      orb
      1  3223				  -	      IF	!FPULL
      2  3223				  -	      pla
      3  3223					      ENDIF
      4  3223		       85 fc		      sta	R1
      5  3225		       68		      pla
      6  3226		       05 fc		      ora	R1
      7  3228				  -	      IF	!FPUSH
      8  3228				  -	      pha
      9  3228					      ENDIF
   5380  3228				   FPUSH      SET	0
      0  3228					      pokeb_const_addr	#53269
      1  3228
      2  3228
      3  3228
      4  3228		       d0 15	   .ad	      EQU	#53269
      5  3228				  -	      IF	!FPULL
      6  3228				  -	      pla
      7  3228					      ENDIF
      8  3228		       8d 15 d0 	      sta	.ad
   5382  322b		       60		      rts
   5383  322c		       60		      rts
   5384  322d
   5385  322d
   5386  322d
   5387  322d
   5388  322d				   _Pmove_ship_end
   5389  322d		       4c 96 34 	      jmp	_Penemy_shooting_end
   5390  3230
   5391  3230
   5392  3230
   5393  3230
   5394  3230
   5395  3230
   5396  3230
   5397  3230				   _Penemy_shooting
   5398  3230				   FPULL      SET	0
   5399  3230				   FPUSH      SET	1
      0  3230					      pbyte	#0
      1  3230		       a9 00		      lda	#0
      2  3232				  -	      IF	!FPUSH
      3  3232				  -	      pha
      4  3232					      ENDIF
   5401  3232				   FPULL      SET	1
   5402  3232				   FPUSH      SET	0
      0  3232					      plb2var	_enemy_shooting.i
      1  3232				  -	      IF	!FPULL
      2  3232				  -	      pla
      3  3232					      ENDIF
      4  3232		       8d e8 4a 	      sta	_enemy_shooting.i
   5404  3235				   _RP_3
   5405  3235				   FPULL      SET	0
      0  3235					      opt_pbyte_pbarray_fast	_enemy_shooting.i, _enemy_bullet_on
      1  3235
      2  3235
      3  3235
      4  3235		       ae e8 4a 	      ldx	_enemy_shooting.i
      5  3238		       bd a2 4a 	      lda	_enemy_bullet_on,x
      6  323b					      IF	!FPUSH
      7  323b		       48		      pha
      8  323c					      ENDIF
   5407  323c				   FPUSH      SET	1
      0  323c					      pbyte	#0
      1  323c		       a9 00		      lda	#0
      2  323e				  -	      IF	!FPUSH
      3  323e				  -	      pha
      4  323e					      ENDIF
   5409  323e				   FPULL      SET	1
      0  323e					      cmpbeq
      1  323e				  -	      IF	!FPULL
      2  323e				  -	      pla
      3  323e					      ENDIF
      4  323e		       85 fc		      sta	R1
      5  3240		       68		      pla
      6  3241		       c5 fc		      cmp	R1
      7  3243		       f0 05		      beq	.pht
      0  3245					      pzero
      1  3245		       a9 00		      lda	#$00
      2  3247				  -	      IF	!FPUSH
      3  3247				  -	      pha
      4  3247					      ENDIF
      9  3247				  -	      IF	!FPUSH
     10  3247				  -	      jmp	*+6
     11  3247					      ELSE
     12  3247		       4c 4c 32 	      jmp	*+5
     13  324a					      ENDIF
      0  324a				   .pht       pone
      1  324a		       a9 01		      lda	#$01
      2  324c				  -	      IF	!FPUSH
      3  324c				  -	      pha
      4  324c					      ENDIF
   5411  324c				   FPUSH      SET	0
      0  324c					      cond_stmt	_EI_65548, _EL_65548
      1  324c				  -	      IF	!FPULL
      2  324c				  -	      pla
      3  324c					      ENDIF
      4  324c		       d0 03		      bne	*+5
      5  324e				  -	      IFCONST	_EL_65548
      6  324e				  -	      jmp	_EL_65548
      7  324e					      ELSE
      8  324e		       4c 54 32 	      jmp	_EI_65548
      9  3251					      ENDIF
   5413  3251		       4c 62 32 	      jmp	_Lenemy_shooting.shoot
   5414  3254				   _EI_65548
      0  3254					      incb	_enemy_shooting.i
      1  3254		       ee e8 4a 	      inc	_enemy_shooting.i
      0  3257					      pbyte_pbyte_cmpbeq_cond	_enemy_shooting.i, #3, _RP_3, _void_
      1  3257
      2  3257
      3  3257		       ad e8 4a 	      lda	_enemy_shooting.i
      4  325a		       c9 03		      cmp	#3
      5  325c		       f0 03		      beq	*+5
      6  325e				  -	      IFCONST	_void_
      7  325e				  -	      jmp	_void_
      8  325e					      ELSE
      9  325e		       4c 35 32 	      jmp	_RP_3
     10  3261					      ENDIF
   5417  3261		       60		      rts
   5418  3262
   5419  3262
   5420  3262
   5421  3262
   5422  3262
   5423  3262
   5424  3262
   5425  3262				   _Lenemy_shooting.shoot
   5426  3262				   FPULL      SET	0
      0  3262					      rndb
      1  3262		       20 ad 0a 	      jsr	STDLIB_RND
      2  3265		       ad dd 0a 	      lda	random+1
      3  3268					      IF	!FPUSH
      4  3268		       48		      pha
      5  3269					      ENDIF
   5428  3269				   FPUSH      SET	1
      0  3269					      pbyte	#15
      1  3269		       a9 0f		      lda	#15
      2  326b				  -	      IF	!FPUSH
      3  326b				  -	      pha
      4  326b					      ENDIF
   5430  326b				   FPULL      SET	1
      0  326b					      andb
      1  326b				  -	      IF	!FPULL
      2  326b				  -	      pla
      3  326b					      ENDIF
      4  326b		       85 fc		      sta	R1
      5  326d		       68		      pla
      6  326e		       25 fc		      and	R1
      7  3270				  -	      IF	!FPUSH
      8  3270				  -	      pha
      9  3270					      ENDIF
   5432  3270				   FPUSH      SET	0
      0  3270					      plb2var	_enemy_shooting.col
      1  3270				  -	      IF	!FPULL
      2  3270				  -	      pla
      3  3270					      ENDIF
      4  3270		       8d e9 4a 	      sta	_enemy_shooting.col
      0  3273					      pbyte_pbyte_cmpbgt_cond	_enemy_shooting.col, #11, _EI_65549, _EL_65549
      1  3273
      2  3273
      3  3273		       a9 0b		      lda	#11
      4  3275		       cd e9 4a 	      cmp	_enemy_shooting.col
      5  3278		       90 05		      bcc	*+7
      6  327a		       f0 03		      beq	*+5
      7  327c				  -	      IFCONST	_EL_65549
      8  327c				  -	      jmp	_EL_65549
      9  327c					      ELSE
     10  327c		       4c 80 32 	      jmp	_EI_65549
     11  327f					      ENDIF
   5435  327f		       60		      rts
   5436  3280
   5437  3280
   5438  3280
   5439  3280
   5440  3280
   5441  3280
   5442  3280				   _EI_65549
   5443  3280				   FPULL      SET	0
   5444  3280				   FPUSH      SET	1
      0  3280					      pbyte	#4
      1  3280		       a9 04		      lda	#4
      2  3282				  -	      IF	!FPUSH
      3  3282				  -	      pha
      4  3282					      ENDIF
   5446  3282				   FPULL      SET	1
   5447  3282				   FPUSH      SET	0
      0  3282					      plb2var	_enemy_shooting.row
      1  3282				  -	      IF	!FPULL
      2  3282				  -	      pla
      3  3282					      ENDIF
      4  3282		       8d ea 4a 	      sta	_enemy_shooting.row
   5449  3285				   _RP_4
   5450  3285				   FPULL      SET	0
      0  3285					      pbvar	_enemy_shooting.row
      0  3285					      pbyte	_enemy_shooting.row
      1  3285		       ad ea 4a 	      lda	_enemy_shooting.row
      2  3288					      IF	!FPUSH
      3  3288		       48		      pha
      4  3289					      ENDIF
   5452  3289				   FPUSH      SET	1
      0  3289					      pbyte	#12
      1  3289		       a9 0c		      lda	#12
      2  328b				  -	      IF	!FPUSH
      3  328b				  -	      pha
      4  328b					      ENDIF
   5454  328b				   FPULL      SET	1
   5455  328b				   FPUSH      SET	0
      0  328b					      mulb
      1  328b				  -	      IF	!FPULL
      2  328b				  -	      pla
      3  328b					      ENDIF
      4  328b		       85 fc		      sta	R1
      5  328d		       68		      pla
      6  328e		       85 fd		      sta	R2
      7  3290		       a9 00		      lda	#$00
      8  3292		       f0 05		      beq	.enterLoop
      9  3294				   .doAdd
     10  3294		       18		      clc
     11  3295		       65 fc		      adc	R1
     12  3297				   .loop
     13  3297		       06 fc		      asl	R1
     14  3299				   .enterLoop
     15  3299		       46 fd		      lsr	R2
     16  329b		       b0 f7		      bcs	.doAdd
     17  329d		       d0 f8		      bne	.loop
     18  329f				   .end
     19  329f					      IF	!FPUSH
     20  329f		       48		      pha
     21  32a0					      ENDIF
   5457  32a0				   FPULL      SET	0
   5458  32a0				   FPUSH      SET	1
      0  32a0					      pbvar	_enemy_shooting.col
      0  32a0					      pbyte	_enemy_shooting.col
      1  32a0		       ad e9 4a 	      lda	_enemy_shooting.col
      2  32a3				  -	      IF	!FPUSH
      3  32a3				  -	      pha
      4  32a3					      ENDIF
   5460  32a3				   FPULL      SET	1
   5461  32a3				   FPUSH      SET	0
      0  32a3					      addb
      1  32a3				  -	      IF	!FPULL
      2  32a3				  -	      pla
      3  32a3					      ENDIF
      4  32a3		       85 fb		      sta	R0
      5  32a5		       68		      pla
      6  32a6		       18		      clc
      7  32a7		       65 fb		      adc	R0
      8  32a9					      IF	!FPUSH
      9  32a9		       48		      pha
     10  32aa					      ENDIF
   5463  32aa				   FPULL      SET	0
      0  32aa					      pbarray_fast	_enemy_map
      1  32aa					      IF	!FPULL
      2  32aa		       68		      pla
      3  32ab					      ENDIF
      4  32ab		       aa		      tax
      5  32ac		       bd 66 4a 	      lda	_enemy_map,x
      6  32af					      IF	!FPUSH
      7  32af		       48		      pha
      8  32b0					      ENDIF
   5465  32b0				   FPUSH      SET	1
      0  32b0					      pbyte	#255
      1  32b0		       a9 ff		      lda	#255
      2  32b2				  -	      IF	!FPUSH
      3  32b2				  -	      pha
      4  32b2					      ENDIF
   5467  32b2				   FPULL      SET	1
      0  32b2					      cmpbneq
      1  32b2				  -	      IF	!FPULL
      2  32b2				  -	      pla
      3  32b2					      ENDIF
      4  32b2		       85 fc		      sta	R1
      5  32b4		       68		      pla
      6  32b5		       c5 fc		      cmp	R1
      7  32b7		       d0 05		      bne	.pht
      0  32b9					      pzero
      1  32b9		       a9 00		      lda	#$00
      2  32bb				  -	      IF	!FPUSH
      3  32bb				  -	      pha
      4  32bb					      ENDIF
      9  32bb				  -	      IF	!FPUSH
     10  32bb				  -	      jmp	*+6
     11  32bb					      ELSE
     12  32bb		       4c c0 32 	      jmp	*+5
     13  32be					      ENDIF
      0  32be				   .pht       pone
      1  32be		       a9 01		      lda	#$01
      2  32c0				  -	      IF	!FPUSH
      3  32c0				  -	      pha
      4  32c0					      ENDIF
   5469  32c0				   FPUSH      SET	0
      0  32c0					      cond_stmt	_EI_20, _EL_20
      1  32c0				  -	      IF	!FPULL
      2  32c0				  -	      pla
      3  32c0					      ENDIF
      4  32c0		       d0 03		      bne	*+5
      5  32c2				  -	      IFCONST	_EL_20
      6  32c2				  -	      jmp	_EL_20
      7  32c2					      ELSE
      8  32c2		       4c 88 34 	      jmp	_EI_20
      9  32c5					      ENDIF
   5471  32c5				   FPULL      SET	0
      0  32c5					      pbyte	#1
      1  32c5		       a9 01		      lda	#1
      2  32c7					      IF	!FPUSH
      3  32c7		       48		      pha
      4  32c8					      ENDIF
   5473  32c8				   FPUSH      SET	1
      0  32c8					      pbvar	_enemy_shooting.i
      0  32c8					      pbyte	_enemy_shooting.i
      1  32c8		       ad e8 4a 	      lda	_enemy_shooting.i
      2  32cb				  -	      IF	!FPUSH
      3  32cb				  -	      pha
      4  32cb					      ENDIF
   5475  32cb				   FPULL      SET	1
   5476  32cb				   FPUSH      SET	0
      0  32cb					      plbarray_fast	_enemy_bullet_on
      1  32cb				  -	      IF	!FPULL
      2  32cb				  -	      pla
      3  32cb					      ENDIF
      4  32cb		       aa		      tax
      5  32cc		       68		      pla
      6  32cd		       9d a2 4a 	      sta	_enemy_bullet_on,x
   5478  32cd				   FPULL      SET	0
   5479  32cd				   FPUSH      SET	1
      0  32d0					      pbvar	_enemy_shooting.col
      0  32d0					      pbyte	_enemy_shooting.col
      1  32d0		       ad e9 4a 	      lda	_enemy_shooting.col
      2  32d3				  -	      IF	!FPUSH
      3  32d3				  -	      pha
      4  32d3					      ENDIF
   5481  32d3				   FPULL      SET	1
   5482  32d3				   FPUSH      SET	0
      0  32d3					      lshiftbc	1
      1  32d3				  -	      IF	!FPULL
      2  32d3				  -	      pla
      3  32d3					      ENDIF
      4  32d3					      REPEAT	1
      5  32d3		       0a		      asl
      6  32d4					      REPEND
      7  32d4					      IF	!FPUSH
      8  32d4		       48		      pha
      9  32d5					      ENDIF
   5484  32d5				   FPULL      SET	0
   5485  32d5				   FPUSH      SET	1
      0  32d5					      pbvar	_enemy_posx
      0  32d5					      pbyte	_enemy_posx
      1  32d5		       ad af 4a 	      lda	_enemy_posx
      2  32d8				  -	      IF	!FPUSH
      3  32d8				  -	      pha
      4  32d8					      ENDIF
   5487  32d8				   FPULL      SET	1
   5488  32d8				   FPUSH      SET	0
      0  32d8					      addb
      1  32d8				  -	      IF	!FPULL
      2  32d8				  -	      pla
      3  32d8					      ENDIF
      4  32d8		       85 fb		      sta	R0
      5  32da		       68		      pla
      6  32db		       18		      clc
      7  32dc		       65 fb		      adc	R0
      8  32de					      IF	!FPUSH
      9  32de		       48		      pha
     10  32df					      ENDIF
      0  32df					      btow
      1  32df		       a9 00		      lda	#$00
      2  32e1		       48		      pha
   5491  32e1				   FPULL      SET	0
      0  32e2					      pbyte	#8
      1  32e2		       a9 08		      lda	#8
      2  32e4					      IF	!FPUSH
      3  32e4		       48		      pha
      4  32e5					      ENDIF
      0  32e5					      btow
      1  32e5		       a9 00		      lda	#$00
      2  32e7		       48		      pha
      0  32e8					      mulw
      1  32e8					      IF	!FPULL
      2  32e8		       68		      pla
      3  32e9		       85 fc		      sta	R1
      4  32eb		       68		      pla
      5  32ec		       85 fb		      sta	R0
      6  32ee				  -	      ELSE
      7  32ee				  -	      sta	R0
      8  32ee				  -	      sty	R1
      9  32ee					      ENDIF
     10  32ee		       68		      pla
     11  32ef		       85 fe		      sta	R3
     12  32f1		       68		      pla
     13  32f2		       85 fd		      sta	R2
     14  32f4		       20 0d 08 	      jsr	NUCL_SMUL16
     15  32f7					      IF	!FPUSH
     16  32f7		       a5 fb		      lda	R0
     17  32f9		       48		      pha
     18  32fa		       a5 fc		      lda	R1
     19  32fc		       48		      pha
     20  32fd				  -	      ELSE
     21  32fd				  -	      lda	R0
     22  32fd				  -	      ldy	R1
     23  32fd					      ENDIF
      0  32fd					      pbyte	#32
      1  32fd		       a9 20		      lda	#32
      2  32ff					      IF	!FPUSH
      3  32ff		       48		      pha
      4  3300					      ENDIF
      0  3300					      btow
      1  3300		       a9 00		      lda	#$00
      2  3302		       48		      pha
      0  3303					      addw
      1  3303		       ba		      tsx
      2  3304		       bd 02 01 	      lda.wx	stack+2
      3  3307		       18		      clc
      4  3308		       7d 04 01 	      adc.wx	stack+4
      5  330b		       9d 04 01 	      sta.wx	stack+4
      6  330e		       68		      pla
      7  330f		       7d 03 01 	      adc.wx	stack+3
      8  3312		       9d 03 01 	      sta.wx	stack+3
      9  3315		       68		      pla
      0  3316					      pbvar	_enemy_shooting.i
      0  3316					      pbyte	_enemy_shooting.i
      1  3316		       ad e8 4a 	      lda	_enemy_shooting.i
      2  3319					      IF	!FPUSH
      3  3319		       48		      pha
      4  331a					      ENDIF
      0  331a					      btow
      1  331a		       a9 00		      lda	#$00
      2  331c		       48		      pha
      0  331d					      dblw
      1  331d		       ba		      tsx
      2  331e		       1e 02 01 	      asl.wx	stack+2
      3  3321		       3e 01 01 	      rol.wx	stack+1
      0  3324					      plwarray	_enemy_bullet_posx
      1  3324					      IF	!FPULL
      2  3324		       68		      pla
      3  3325		       85 fc		      sta	R1
      4  3327		       68		      pla
      5  3328		       85 fb		      sta	R0
      6  332a				  -	      ELSE
      7  332a				  -	      sta	R0
      8  332a				  -	      sty	R1
      9  332a					      ENDIF
     10  332a		       a9 a5		      lda	#<_enemy_bullet_posx
     11  332c		       18		      clc
     12  332d		       65 fb		      adc	R0
     13  332f		       85 fb		      sta	R0
     14  3331		       a9 4a		      lda	#>_enemy_bullet_posx
     15  3333		       65 fc		      adc	R1
     16  3335		       85 fc		      sta	R1
     17  3337		       a0 01		      ldy	#$01
     18  3339		       68		      pla
     19  333a		       91 fb		      sta	(R0),y
     20  333c		       88		      dey
     21  333d		       68		      pla
     22  333e		       91 fb		      sta	(R0),y
   5502  333e				   FPUSH      SET	1
      0  3340					      pbvar	_enemy_shooting.row
      0  3340					      pbyte	_enemy_shooting.row
      1  3340		       ad ea 4a 	      lda	_enemy_shooting.row
      2  3343				  -	      IF	!FPUSH
      3  3343				  -	      pha
      4  3343					      ENDIF
   5504  3343				   FPULL      SET	1
   5505  3343				   FPUSH      SET	0
      0  3343					      lshiftbc	1
      1  3343				  -	      IF	!FPULL
      2  3343				  -	      pla
      3  3343					      ENDIF
      4  3343					      REPEAT	1
      5  3343		       0a		      asl
      6  3344					      REPEND
      7  3344					      IF	!FPUSH
      8  3344		       48		      pha
      9  3345					      ENDIF
   5507  3345				   FPULL      SET	0
   5508  3345				   FPUSH      SET	1
      0  3345					      pbvar	_enemy_posy
      0  3345					      pbyte	_enemy_posy
      1  3345		       ad b0 4a 	      lda	_enemy_posy
      2  3348				  -	      IF	!FPUSH
      3  3348				  -	      pha
      4  3348					      ENDIF
   5510  3348				   FPULL      SET	1
   5511  3348				   FPUSH      SET	0
      0  3348					      addb
      1  3348				  -	      IF	!FPULL
      2  3348				  -	      pla
      3  3348					      ENDIF
      4  3348		       85 fb		      sta	R0
      5  334a		       68		      pla
      6  334b		       18		      clc
      7  334c		       65 fb		      adc	R0
      8  334e					      IF	!FPUSH
      9  334e		       48		      pha
     10  334f					      ENDIF
   5513  334f				   FPULL      SET	0
   5514  334f				   FPUSH      SET	1
      0  334f					      pbyte	#8
      1  334f		       a9 08		      lda	#8
      2  3351				  -	      IF	!FPUSH
      3  3351				  -	      pha
      4  3351					      ENDIF
   5516  3351				   FPULL      SET	1
   5517  3351				   FPUSH      SET	0
      0  3351					      mulb
      1  3351				  -	      IF	!FPULL
      2  3351				  -	      pla
      3  3351					      ENDIF
      4  3351		       85 fc		      sta	R1
      5  3353		       68		      pla
      6  3354		       85 fd		      sta	R2
      7  3356		       a9 00		      lda	#$00
      8  3358		       f0 05		      beq	.enterLoop
      9  335a				   .doAdd
     10  335a		       18		      clc
     11  335b		       65 fc		      adc	R1
     12  335d				   .loop
     13  335d		       06 fc		      asl	R1
     14  335f				   .enterLoop
     15  335f		       46 fd		      lsr	R2
     16  3361		       b0 f7		      bcs	.doAdd
     17  3363		       d0 f8		      bne	.loop
     18  3365				   .end
     19  3365					      IF	!FPUSH
     20  3365		       48		      pha
     21  3366					      ENDIF
   5519  3366				   FPULL      SET	0
   5520  3366				   FPUSH      SET	1
      0  3366					      pbyte	#101
      1  3366		       a9 65		      lda	#101
      2  3368				  -	      IF	!FPUSH
      3  3368				  -	      pha
      4  3368					      ENDIF
   5522  3368				   FPULL      SET	1
   5523  3368				   FPUSH      SET	0
      0  3368					      addb
      1  3368				  -	      IF	!FPULL
      2  3368				  -	      pla
      3  3368					      ENDIF
      4  3368		       85 fb		      sta	R0
      5  336a		       68		      pla
      6  336b		       18		      clc
      7  336c		       65 fb		      adc	R0
      8  336e					      IF	!FPUSH
      9  336e		       48		      pha
     10  336f					      ENDIF
   5525  336f				   FPULL      SET	0
   5526  336f				   FPUSH      SET	1
      0  336f					      pbvar	_enemy_shooting.i
      0  336f					      pbyte	_enemy_shooting.i
      1  336f		       ad e8 4a 	      lda	_enemy_shooting.i
      2  3372				  -	      IF	!FPUSH
      3  3372				  -	      pha
      4  3372					      ENDIF
   5528  3372				   FPULL      SET	1
   5529  3372				   FPUSH      SET	0
      0  3372					      plbarray_fast	_enemy_bullet_posy
      1  3372				  -	      IF	!FPULL
      2  3372				  -	      pla
      3  3372					      ENDIF
      4  3372		       aa		      tax
      5  3373		       68		      pla
      6  3374		       9d ab 4a 	      sta	_enemy_bullet_posy,x
   5531  3374				   FPULL      SET	0
      0  3377					      pword	#53252
      1  3377					      IF	!FPUSH
      2  3377		       a9 04		      lda	#<#53252
      3  3379		       48		      pha
      4  337a		       a9 d0		      lda	#>#53252
      5  337c		       48		      pha
      6  337d				  -	      ELSE
      7  337d				  -	      lda	#<#53252
      8  337d				  -	      ldy	#>#53252
      9  337d					      ENDIF
   5533  337d				   FPUSH      SET	1
      0  337d					      pbvar	_enemy_shooting.i
      0  337d					      pbyte	_enemy_shooting.i
      1  337d		       ad e8 4a 	      lda	_enemy_shooting.i
      2  3380				  -	      IF	!FPUSH
      3  3380				  -	      pha
      4  3380					      ENDIF
   5535  3380				   FPULL      SET	1
   5536  3380				   FPUSH      SET	0
      0  3380					      lshiftbc	1
      1  3380				  -	      IF	!FPULL
      2  3380				  -	      pla
      3  3380					      ENDIF
      4  3380					      REPEAT	1
      5  3380		       0a		      asl
      6  3381					      REPEND
      7  3381					      IF	!FPUSH
      8  3381		       48		      pha
      9  3382					      ENDIF
      0  3382					      btow
      1  3382		       a9 00		      lda	#$00
      2  3384		       48		      pha
      0  3385					      addw
      1  3385		       ba		      tsx
      2  3386		       bd 02 01 	      lda.wx	stack+2
      3  3389		       18		      clc
      4  338a		       7d 04 01 	      adc.wx	stack+4
      5  338d		       9d 04 01 	      sta.wx	stack+4
      6  3390		       68		      pla
      7  3391		       7d 03 01 	      adc.wx	stack+3
      8  3394		       9d 03 01 	      sta.wx	stack+3
      9  3397		       68		      pla
   5540  3397				   FPULL      SET	0
      0  3398					      plw2var	_enemy_shooting.addr
      1  3398					      IF	!FPULL
      2  3398		       68		      pla
      3  3399		       8d ec 4a 	      sta	_enemy_shooting.addr+1
      4  339c		       68		      pla
      5  339d		       8d eb 4a 	      sta	_enemy_shooting.addr
      6  33a0				  -	      ELSE
      7  33a0				  -	      sta	_enemy_shooting.addr
      8  33a0				  -	      sty	_enemy_shooting.addr+1
      9  33a0					      ENDIF
      0  33a0					      pbvar	_enemy_shooting.i
      0  33a0					      pbyte	_enemy_shooting.i
      1  33a0		       ad e8 4a 	      lda	_enemy_shooting.i
      2  33a3					      IF	!FPUSH
      3  33a3		       48		      pha
      4  33a4					      ENDIF
      0  33a4					      btow
      1  33a4		       a9 00		      lda	#$00
      2  33a6		       48		      pha
      0  33a7					      dblw
      1  33a7		       ba		      tsx
      2  33a8		       1e 02 01 	      asl.wx	stack+2
      3  33ab		       3e 01 01 	      rol.wx	stack+1
      0  33ae					      pwarray	_enemy_bullet_posx
      1  33ae					      IF	!FPULL
      2  33ae		       68		      pla
      3  33af		       85 fc		      sta	R1
      4  33b1		       68		      pla
      5  33b2		       85 fb		      sta	R0
      6  33b4				  -	      ELSE
      7  33b4				  -	      sta	R0
      8  33b4				  -	      sty	R1
      9  33b4					      ENDIF
     10  33b4		       a9 a5		      lda	#<_enemy_bullet_posx
     11  33b6		       18		      clc
     12  33b7		       65 fb		      adc	R0
     13  33b9		       85 fb		      sta	R0
     14  33bb		       a9 4a		      lda	#>_enemy_bullet_posx
     15  33bd		       65 fc		      adc	R1
     16  33bf		       85 fc		      sta	R1
     17  33c1					      IF	!FPUSH
     18  33c1		       a0 00		      ldy	#$00
     19  33c3		       b1 fb		      lda	(R0),y
     20  33c5		       48		      pha
     21  33c6		       c8		      iny
     22  33c7		       b1 fb		      lda	(R0),y
     23  33c9		       48		      pha
     24  33ca				  -	      ELSE
     25  33ca				  -	      ldy	#$00
     26  33ca				  -	      lda	(R0),y
     27  33ca				  -	      tax
     28  33ca				  -	      iny
     29  33ca				  -	      lda	(R0),y
     30  33ca				  -	      tay
     31  33ca				  -	      txa
     32  33ca					      ENDIF
   5546  33ca				   FPUSH      SET	1
      0  33ca					      pwvar	_enemy_shooting.addr
      1  33ca				  -	      IF	!FPUSH
      2  33ca				  -	      lda	_enemy_shooting.addr
      3  33ca				  -	      pha
      4  33ca				  -	      lda	_enemy_shooting.addr+1
      5  33ca				  -	      pha
      6  33ca					      ELSE
      7  33ca		       ad eb 4a 	      lda	_enemy_shooting.addr
      8  33cd		       ac ec 4a 	      ldy	_enemy_shooting.addr+1
      9  33d0					      ENDIF
   5548  33d0				   FPULL      SET	1
   5549  33d0				   FPUSH      SET	0
      0  33d0					      pokew
      1  33d0				  -	      IF	!FPULL
      2  33d0				  -	      pla
      3  33d0				  -	      sta	.selfmod_code+2
      4  33d0				  -	      pla
      5  33d0				  -	      sta	.selfmod_code+1
      6  33d0					      ELSE
      7  33d0		       8d d9 33 	      sta	.selfmod_code+1
      8  33d3		       8c da 33 	      sty	.selfmod_code+2
      9  33d6					      ENDIF
     10  33d6		       68		      pla
     11  33d7		       68		      pla
     12  33d8				   .selfmod_code
     13  33d8		       8d 00 00 	      sta.w	$0000
      0  33db					      incw	_enemy_shooting.addr
      1  33db		       ee eb 4a 	      inc	_enemy_shooting.addr
      2  33de		       d0 03		      bne	.skip
      3  33e0		       ee ec 4a 	      inc	_enemy_shooting.addr+1
      4  33e3				   .skip
   5552  33e3				   FPULL      SET	0
      0  33e3					      pbvar	_enemy_shooting.i
      0  33e3					      pbyte	_enemy_shooting.i
      1  33e3		       ad e8 4a 	      lda	_enemy_shooting.i
      2  33e6					      IF	!FPUSH
      3  33e6		       48		      pha
      4  33e7					      ENDIF
      0  33e7					      pbarray_fast	_enemy_bullet_posy
      1  33e7					      IF	!FPULL
      2  33e7		       68		      pla
      3  33e8					      ENDIF
      4  33e8		       aa		      tax
      5  33e9		       bd ab 4a 	      lda	_enemy_bullet_posy,x
      6  33ec					      IF	!FPUSH
      7  33ec		       48		      pha
      8  33ed					      ENDIF
   5555  33ed				   FPUSH      SET	1
      0  33ed					      pwvar	_enemy_shooting.addr
      1  33ed				  -	      IF	!FPUSH
      2  33ed				  -	      lda	_enemy_shooting.addr
      3  33ed				  -	      pha
      4  33ed				  -	      lda	_enemy_shooting.addr+1
      5  33ed				  -	      pha
      6  33ed					      ELSE
      7  33ed		       ad eb 4a 	      lda	_enemy_shooting.addr
      8  33f0		       ac ec 4a 	      ldy	_enemy_shooting.addr+1
      9  33f3					      ENDIF
   5557  33f3				   FPULL      SET	1
   5558  33f3				   FPUSH      SET	0
      0  33f3					      pokeb
      1  33f3				  -	      IF	!FPULL
      2  33f3				  -	      pla
      3  33f3				  -	      sta	.selfmod_code+2
      4  33f3				  -	      pla
      5  33f3				  -	      sta	.selfmod_code+1
      6  33f3					      ELSE
      7  33f3		       8d fb 33 	      sta	.selfmod_code+1
      8  33f6		       8c fc 33 	      sty	.selfmod_code+2
      9  33f9					      ENDIF
     10  33f9		       68		      pla
     11  33fa				   .selfmod_code
     12  33fa		       8d 00 00 	      sta.w	$0000
   5560  33fa				   FPULL      SET	0
      0  33fd					      opt_pbyte_pbyte_add	_enemy_shooting.i, #2
      1  33fd
      2  33fd
      3  33fd
      4  33fd
      5  33fd
      6  33fd		       ad e8 4a 	      lda	_enemy_shooting.i
      7  3400		       18		      clc
      8  3401		       69 02		      adc	#2
      9  3403					      IF	!FPUSH
     10  3403		       48		      pha
     11  3404					      ENDIF
   5562  3404				   FPUSH      SET	1
      0  3404					      pbarray_fast	_bits
      1  3404					      IF	!FPULL
      2  3404		       68		      pla
      3  3405					      ENDIF
      4  3405		       aa		      tax
      5  3406		       bd b5 49 	      lda	_bits,x
      6  3409				  -	      IF	!FPUSH
      7  3409				  -	      pha
      8  3409					      ENDIF
   5564  3409				   FPULL      SET	1
   5565  3409				   FPUSH      SET	0
      0  3409					      plb2var	_enemy_shooting.bit
      1  3409				  -	      IF	!FPULL
      2  3409				  -	      pla
      3  3409					      ENDIF
      4  3409		       8d ed 4a 	      sta	_enemy_shooting.bit
   5567  3409				   FPULL      SET	0
      0  340c					      pwvar	_bullet_posx
      1  340c					      IF	!FPUSH
      2  340c		       ad b6 4a 	      lda	_bullet_posx
      3  340f		       48		      pha
      4  3410		       ad b7 4a 	      lda	_bullet_posx+1
      5  3413		       48		      pha
      6  3414				  -	      ELSE
      7  3414				  -	      lda	_bullet_posx
      8  3414				  -	      ldy	_bullet_posx+1
      9  3414					      ENDIF
      0  3414					      pbyte	#255
      1  3414		       a9 ff		      lda	#255
      2  3416					      IF	!FPUSH
      3  3416		       48		      pha
      4  3417					      ENDIF
      0  3417					      btow
      1  3417		       a9 00		      lda	#$00
      2  3419		       48		      pha
   5571  3419				   FPUSH      SET	1
      0  341a					      cmpwgt
      1  341a		       ba		      tsx
      2  341b		       bd 02 01 	      lda.wx	stack+2
      3  341e		       dd 04 01 	      cmp.wx	stack+4
      4  3421		       bd 01 01 	      lda.wx	stack+1
      5  3424		       fd 03 01 	      sbc.wx	stack+3
      6  3427		       30 0a		      bmi	.pht
      7  3429		       e8		      inx
      8  342a		       e8		      inx
      9  342b		       e8		      inx
     10  342c		       e8		      inx
     11  342d		       9a		      txs
      0  342e					      pzero
      1  342e		       a9 00		      lda	#$00
      2  3430				  -	      IF	!FPUSH
      3  3430				  -	      pha
      4  3430					      ENDIF
     13  3430				  -	      IF	!FPUSH
     14  3430				  -	      jmp	*+11
     15  3430					      ELSE
     16  3430		       4c 3a 34 	      jmp	*+10
     17  3433					      ENDIF
     18  3433		       e8	   .pht       inx
     19  3434		       e8		      inx
     20  3435		       e8		      inx
     21  3436		       e8		      inx
     22  3437		       9a		      txs
      0  3438					      pone
      1  3438		       a9 01		      lda	#$01
      2  343a				  -	      IF	!FPUSH
      3  343a				  -	      pha
      4  343a					      ENDIF
   5573  343a				   FPULL      SET	1
   5574  343a				   FPUSH      SET	0
      0  343a					      cond_stmt	_EI_21, _EL_21
      1  343a				  -	      IF	!FPULL
      2  343a				  -	      pla
      3  343a					      ENDIF
      4  343a		       d0 03		      bne	*+5
      5  343c					      IFCONST	_EL_21
      6  343c		       4c 67 34 	      jmp	_EL_21
      7  343f				  -	      ELSE
      8  343f				  -	      jmp	_EI_21
      9  343f					      ENDIF
   5576  343f				   FPULL      SET	0
   5577  343f				   FPUSH      SET	1
      0  343f					      pword	#53264
      1  343f				  -	      IF	!FPUSH
      2  343f				  -	      lda	#<#53264
      3  343f				  -	      pha
      4  343f				  -	      lda	#>#53264
      5  343f				  -	      pha
      6  343f					      ELSE
      7  343f		       a9 10		      lda	#<#53264
      8  3441		       a0 d0		      ldy	#>#53264
      9  3443					      ENDIF
   5579  3443				   FPULL      SET	1
   5580  3443				   FPUSH      SET	0
      0  3443					      peekb
      1  3443				  -	      IF	!FPULL
      2  3443				  -	      pla
      3  3443				  -	      sta	.selfmod_code+2
      4  3443				  -	      pla
      5  3443				  -	      sta	.selfmod_code+1
      6  3443					      ELSE
      7  3443		       8d 4a 34 	      sta	.selfmod_code+1
      8  3446		       8c 4b 34 	      sty	.selfmod_code+2
      9  3449					      ENDIF
     10  3449				   .selfmod_code
     11  3449		       ad 00 00 	      lda.w	$0000
     12  344c					      IF	!FPUSH
     13  344c		       48		      pha
     14  344d					      ENDIF
   5582  344d				   FPULL      SET	0
   5583  344d				   FPUSH      SET	1
      0  344d					      pbvar	_enemy_shooting.bit
      0  344d					      pbyte	_enemy_shooting.bit
      1  344d		       ad ed 4a 	      lda	_enemy_shooting.bit
      2  3450				  -	      IF	!FPUSH
      3  3450				  -	      pha
      4  3450					      ENDIF
   5585  3450				   FPULL      SET	1
   5586  3450				   FPUSH      SET	0
      0  3450					      orb
      1  3450				  -	      IF	!FPULL
      2  3450				  -	      pla
      3  3450					      ENDIF
      4  3450		       85 fc		      sta	R1
      5  3452		       68		      pla
      6  3453		       05 fc		      ora	R1
      7  3455					      IF	!FPUSH
      8  3455		       48		      pha
      9  3456					      ENDIF
   5588  3456				   FPULL      SET	0
   5589  3456				   FPUSH      SET	1
      0  3456					      pword	#53264
      1  3456				  -	      IF	!FPUSH
      2  3456				  -	      lda	#<#53264
      3  3456				  -	      pha
      4  3456				  -	      lda	#>#53264
      5  3456				  -	      pha
      6  3456					      ELSE
      7  3456		       a9 10		      lda	#<#53264
      8  3458		       a0 d0		      ldy	#>#53264
      9  345a					      ENDIF
   5591  345a				   FPULL      SET	1
   5592  345a				   FPUSH      SET	0
      0  345a					      pokeb
      1  345a				  -	      IF	!FPULL
      2  345a				  -	      pla
      3  345a				  -	      sta	.selfmod_code+2
      4  345a				  -	      pla
      5  345a				  -	      sta	.selfmod_code+1
      6  345a					      ELSE
      7  345a		       8d 62 34 	      sta	.selfmod_code+1
      8  345d		       8c 63 34 	      sty	.selfmod_code+2
      9  3460					      ENDIF
     10  3460		       68		      pla
     11  3461				   .selfmod_code
     12  3461		       8d 00 00 	      sta.w	$0000
   5594  3464		       4c 78 34 	      jmp	_EI_21
   5595  3467				   _EL_21
   5596  3467				   FPULL      SET	0
      0  3467					      peekb_const_addr	#53264
      1  3467
      2  3467
      3  3467
      4  3467		       d0 10	   .ad	      EQU	#53264
      5  3467		       ad 10 d0 	      lda	.ad
      6  346a					      IF	!FPUSH
      7  346a		       48		      pha
      8  346b					      ENDIF
   5598  346b				   FPUSH      SET	1
      0  346b					      opt_pbyte_pbyte_xor	_enemy_shooting.bit, #255
      1  346b
      2  346b
      3  346b
      4  346b
      5  346b
      6  346b		       ad ed 4a 	      lda	_enemy_shooting.bit
      7  346e		       49 ff		      eor	#255
      8  3470				  -	      IF	!FPUSH
      9  3470				  -	      pha
     10  3470					      ENDIF
   5600  3470				   FPULL      SET	1
      0  3470					      andb
      1  3470				  -	      IF	!FPULL
      2  3470				  -	      pla
      3  3470					      ENDIF
      4  3470		       85 fc		      sta	R1
      5  3472		       68		      pla
      6  3473		       25 fc		      and	R1
      7  3475				  -	      IF	!FPUSH
      8  3475				  -	      pha
      9  3475					      ENDIF
   5602  3475				   FPUSH      SET	0
      0  3475					      pokeb_const_addr	#53264
      1  3475
      2  3475
      3  3475
      4  3475		       d0 10	   .ad	      EQU	#53264
      5  3475				  -	      IF	!FPULL
      6  3475				  -	      pla
      7  3475					      ENDIF
      8  3475		       8d 10 d0 	      sta	.ad
   5604  3478
   5605  3478
   5606  3478
   5607  3478
   5608  3478
   5609  3478
   5610  3478
   5611  3478				   _EI_21
   5612  3478				   FPULL      SET	0
      0  3478					      peekb_const_addr	#53269
      1  3478
      2  3478
      3  3478
      4  3478		       d0 15	   .ad	      EQU	#53269
      5  3478		       ad 15 d0 	      lda	.ad
      6  347b					      IF	!FPUSH
      7  347b		       48		      pha
      8  347c					      ENDIF
   5614  347c				   FPUSH      SET	1
      0  347c					      pbvar	_enemy_shooting.bit
      0  347c					      pbyte	_enemy_shooting.bit
      1  347c		       ad ed 4a 	      lda	_enemy_shooting.bit
      2  347f				  -	      IF	!FPUSH
      3  347f				  -	      pha
      4  347f					      ENDIF
   5616  347f				   FPULL      SET	1
      0  347f					      orb
      1  347f				  -	      IF	!FPULL
      2  347f				  -	      pla
      3  347f					      ENDIF
      4  347f		       85 fc		      sta	R1
      5  3481		       68		      pla
      6  3482		       05 fc		      ora	R1
      7  3484				  -	      IF	!FPUSH
      8  3484				  -	      pha
      9  3484					      ENDIF
   5618  3484				   FPUSH      SET	0
      0  3484					      pokeb_const_addr	#53269
      1  3484
      2  3484
      3  3484
      4  3484		       d0 15	   .ad	      EQU	#53269
      5  3484				  -	      IF	!FPULL
      6  3484				  -	      pla
      7  3484					      ENDIF
      8  3484		       8d 15 d0 	      sta	.ad
   5620  3487		       60		      rts
   5621  3488
   5622  3488
   5623  3488
   5624  3488
   5625  3488				   _EI_20
      0  3488					      decb	_enemy_shooting.row
      1  3488		       ce ea 4a 	      dec	_enemy_shooting.row
      0  348b					      pbyte_pbyte_cmpbeq_cond	_enemy_shooting.row, #255, _RP_4, _void_
      1  348b
      2  348b
      3  348b		       ad ea 4a 	      lda	_enemy_shooting.row
      4  348e		       c9 ff		      cmp	#255
      5  3490		       f0 03		      beq	*+5
      6  3492				  -	      IFCONST	_void_
      7  3492				  -	      jmp	_void_
      8  3492					      ELSE
      9  3492		       4c 85 32 	      jmp	_RP_4
     10  3495					      ENDIF
   5628  3495		       60		      rts
   5629  3496
   5630  3496
   5631  3496
   5632  3496
   5633  3496
   5634  3496
   5635  3496
   5636  3496				   _Penemy_shooting_end
   5637  3496		       4c 80 35 	      jmp	_Pmove_enemy_bullets_end
   5638  3499
   5639  3499
   5640  3499
   5641  3499
   5642  3499
   5643  3499
   5644  3499
   5645  3499				   _Pmove_enemy_bullets
   5646  3499				   FPULL      SET	0
   5647  3499				   FPUSH      SET	1
      0  3499					      pbyte	#0
      1  3499		       a9 00		      lda	#0
      2  349b				  -	      IF	!FPUSH
      3  349b				  -	      pha
      4  349b					      ENDIF
   5649  349b				   FPULL      SET	1
   5650  349b				   FPUSH      SET	0
      0  349b					      plb2var	_move_enemy_bullets.i
      1  349b				  -	      IF	!FPULL
      2  349b				  -	      pla
      3  349b					      ENDIF
      4  349b		       8d ee 4a 	      sta	_move_enemy_bullets.i
   5652  349b				   FPULL      SET	0
      0  349e					      pbyte	#2
      1  349e		       a9 02		      lda	#2
      2  34a0					      IF	!FPUSH
      3  34a0		       48		      pha
      4  34a1					      ENDIF
      0  34a1					      for
      1  34a1
      2  34a1
      3  34a1				   .addr
      4  34a1		       a9 a1		      lda	#<.addr
      5  34a3		       48		      pha
      6  34a4		       a9 34		      lda	#>.addr
      7  34a6		       48		      pha
      0  34a7					      opt_pbyte_pbarray_fast	_move_enemy_bullets.i, _enemy_bullet_on
      1  34a7
      2  34a7
      3  34a7
      4  34a7		       ae ee 4a 	      ldx	_move_enemy_bullets.i
      5  34aa		       bd a2 4a 	      lda	_enemy_bullet_on,x
      6  34ad					      IF	!FPUSH
      7  34ad		       48		      pha
      8  34ae					      ENDIF
   5656  34ae				   FPUSH      SET	1
      0  34ae					      pbyte	#1
      1  34ae		       a9 01		      lda	#1
      2  34b0				  -	      IF	!FPUSH
      3  34b0				  -	      pha
      4  34b0					      ENDIF
   5658  34b0				   FPULL      SET	1
      0  34b0					      cmpbeq
      1  34b0				  -	      IF	!FPULL
      2  34b0				  -	      pla
      3  34b0					      ENDIF
      4  34b0		       85 fc		      sta	R1
      5  34b2		       68		      pla
      6  34b3		       c5 fc		      cmp	R1
      7  34b5		       f0 05		      beq	.pht
      0  34b7					      pzero
      1  34b7		       a9 00		      lda	#$00
      2  34b9				  -	      IF	!FPUSH
      3  34b9				  -	      pha
      4  34b9					      ENDIF
      9  34b9				  -	      IF	!FPUSH
     10  34b9				  -	      jmp	*+6
     11  34b9					      ELSE
     12  34b9		       4c be 34 	      jmp	*+5
     13  34bc					      ENDIF
      0  34bc				   .pht       pone
      1  34bc		       a9 01		      lda	#$01
      2  34be				  -	      IF	!FPUSH
      3  34be				  -	      pha
      4  34be					      ENDIF
   5660  34be				   FPUSH      SET	0
      0  34be					      cond_stmt	_EI_22, _EL_22
      1  34be				  -	      IF	!FPULL
      2  34be				  -	      pla
      3  34be					      ENDIF
      4  34be		       d0 03		      bne	*+5
      5  34c0				  -	      IFCONST	_EL_22
      6  34c0				  -	      jmp	_EL_22
      7  34c0					      ELSE
      8  34c0		       4c 65 35 	      jmp	_EI_22
      9  34c3					      ENDIF
   5662  34c3				   FPULL      SET	0
      0  34c3					      opt_pbyte_pbarray_fast	_move_enemy_bullets.i, _enemy_bullet_posy
      1  34c3
      2  34c3
      3  34c3
      4  34c3		       ae ee 4a 	      ldx	_move_enemy_bullets.i
      5  34c6		       bd ab 4a 	      lda	_enemy_bullet_posy,x
      6  34c9					      IF	!FPUSH
      7  34c9		       48		      pha
      8  34ca					      ENDIF
   5664  34ca				   FPUSH      SET	1
      0  34ca					      pbyte	#2
      1  34ca		       a9 02		      lda	#2
      2  34cc				  -	      IF	!FPUSH
      3  34cc				  -	      pha
      4  34cc					      ENDIF
   5666  34cc				   FPULL      SET	1
   5667  34cc				   FPUSH      SET	0
      0  34cc					      addb
      1  34cc				  -	      IF	!FPULL
      2  34cc				  -	      pla
      3  34cc					      ENDIF
      4  34cc		       85 fb		      sta	R0
      5  34ce		       68		      pla
      6  34cf		       18		      clc
      7  34d0		       65 fb		      adc	R0
      8  34d2					      IF	!FPUSH
      9  34d2		       48		      pha
     10  34d3					      ENDIF
   5669  34d3				   FPULL      SET	0
   5670  34d3				   FPUSH      SET	1
      0  34d3					      pbvar	_move_enemy_bullets.i
      0  34d3					      pbyte	_move_enemy_bullets.i
      1  34d3		       ad ee 4a 	      lda	_move_enemy_bullets.i
      2  34d6				  -	      IF	!FPUSH
      3  34d6				  -	      pha
      4  34d6					      ENDIF
   5672  34d6				   FPULL      SET	1
   5673  34d6				   FPUSH      SET	0
      0  34d6					      plbarray_fast	_enemy_bullet_posy
      1  34d6				  -	      IF	!FPULL
      2  34d6				  -	      pla
      3  34d6					      ENDIF
      4  34d6		       aa		      tax
      5  34d7		       68		      pla
      6  34d8		       9d ab 4a 	      sta	_enemy_bullet_posy,x
   5675  34d8				   FPULL      SET	0
      0  34db					      opt_pbyte_pbarray_fast	_move_enemy_bullets.i, _enemy_bullet_posy
      1  34db
      2  34db
      3  34db
      4  34db		       ae ee 4a 	      ldx	_move_enemy_bullets.i
      5  34de		       bd ab 4a 	      lda	_enemy_bullet_posy,x
      6  34e1					      IF	!FPUSH
      7  34e1		       48		      pha
      8  34e2					      ENDIF
   5677  34e2				   FPUSH      SET	1
      0  34e2					      pbyte	#250
      1  34e2		       a9 fa		      lda	#250
      2  34e4				  -	      IF	!FPUSH
      3  34e4				  -	      pha
      4  34e4					      ENDIF
   5679  34e4				   FPULL      SET	1
      0  34e4					      cmpblt
      1  34e4				  -	      IF	!FPULL
      2  34e4				  -	      pla
      3  34e4					      ENDIF
      4  34e4		       85 fc		      sta	R1
      5  34e6		       68		      pla
      6  34e7		       c5 fc		      cmp	R1
      7  34e9		       b0 05		      bcs	.phf
      0  34eb					      pone
      1  34eb		       a9 01		      lda	#$01
      2  34ed				  -	      IF	!FPUSH
      3  34ed				  -	      pha
      4  34ed					      ENDIF
      9  34ed				  -	      IF	!FPUSH
     10  34ed				  -	      jmp	*+6
     11  34ed					      ELSE
     12  34ed		       4c f2 34 	      jmp	*+5
     13  34f0					      ENDIF
      0  34f0				   .phf       pzero
      1  34f0		       a9 00		      lda	#$00
      2  34f2				  -	      IF	!FPUSH
      3  34f2				  -	      pha
      4  34f2					      ENDIF
   5681  34f2				   FPUSH      SET	0
      0  34f2					      cond_stmt	_EI_23, _EL_23
      1  34f2				  -	      IF	!FPULL
      2  34f2				  -	      pla
      3  34f2					      ENDIF
      4  34f2		       d0 03		      bne	*+5
      5  34f4					      IFCONST	_EL_23
      6  34f4		       4c 3a 35 	      jmp	_EL_23
      7  34f7				  -	      ELSE
      8  34f7				  -	      jmp	_EI_23
      9  34f7					      ENDIF
   5683  34f7				   FPULL      SET	0
      0  34f7					      pword	#53253
      1  34f7					      IF	!FPUSH
      2  34f7		       a9 05		      lda	#<#53253
      3  34f9		       48		      pha
      4  34fa		       a9 d0		      lda	#>#53253
      5  34fc		       48		      pha
      6  34fd				  -	      ELSE
      7  34fd				  -	      lda	#<#53253
      8  34fd				  -	      ldy	#>#53253
      9  34fd					      ENDIF
   5685  34fd				   FPUSH      SET	1
      0  34fd					      pbvar	_move_enemy_bullets.i
      0  34fd					      pbyte	_move_enemy_bullets.i
      1  34fd		       ad ee 4a 	      lda	_move_enemy_bullets.i
      2  3500				  -	      IF	!FPUSH
      3  3500				  -	      pha
      4  3500					      ENDIF
   5687  3500				   FPULL      SET	1
   5688  3500				   FPUSH      SET	0
      0  3500					      lshiftbc	1
      1  3500				  -	      IF	!FPULL
      2  3500				  -	      pla
      3  3500					      ENDIF
      4  3500					      REPEAT	1
      5  3500		       0a		      asl
      6  3501					      REPEND
      7  3501					      IF	!FPUSH
      8  3501		       48		      pha
      9  3502					      ENDIF
      0  3502					      btow
      1  3502		       a9 00		      lda	#$00
      2  3504		       48		      pha
      0  3505					      addw
      1  3505		       ba		      tsx
      2  3506		       bd 02 01 	      lda.wx	stack+2
      3  3509		       18		      clc
      4  350a		       7d 04 01 	      adc.wx	stack+4
      5  350d		       9d 04 01 	      sta.wx	stack+4
      6  3510		       68		      pla
      7  3511		       7d 03 01 	      adc.wx	stack+3
      8  3514		       9d 03 01 	      sta.wx	stack+3
      9  3517		       68		      pla
   5692  3517				   FPULL      SET	0
      0  3518					      plw2var	_move_enemy_bullets.addr
      1  3518					      IF	!FPULL
      2  3518		       68		      pla
      3  3519		       8d f0 4a 	      sta	_move_enemy_bullets.addr+1
      4  351c		       68		      pla
      5  351d		       8d ef 4a 	      sta	_move_enemy_bullets.addr
      6  3520				  -	      ELSE
      7  3520				  -	      sta	_move_enemy_bullets.addr
      8  3520				  -	      sty	_move_enemy_bullets.addr+1
      9  3520					      ENDIF
      0  3520					      opt_pbyte_pbarray_fast	_move_enemy_bullets.i, _enemy_bullet_posy
      1  3520
      2  3520
      3  3520
      4  3520		       ae ee 4a 	      ldx	_move_enemy_bullets.i
      5  3523		       bd ab 4a 	      lda	_enemy_bullet_posy,x
      6  3526					      IF	!FPUSH
      7  3526		       48		      pha
      8  3527					      ENDIF
   5695  3527				   FPUSH      SET	1
      0  3527					      pwvar	_move_enemy_bullets.addr
      1  3527				  -	      IF	!FPUSH
      2  3527				  -	      lda	_move_enemy_bullets.addr
      3  3527				  -	      pha
      4  3527				  -	      lda	_move_enemy_bullets.addr+1
      5  3527				  -	      pha
      6  3527					      ELSE
      7  3527		       ad ef 4a 	      lda	_move_enemy_bullets.addr
      8  352a		       ac f0 4a 	      ldy	_move_enemy_bullets.addr+1
      9  352d					      ENDIF
   5697  352d				   FPULL      SET	1
   5698  352d				   FPUSH      SET	0
      0  352d					      pokeb
      1  352d				  -	      IF	!FPULL
      2  352d				  -	      pla
      3  352d				  -	      sta	.selfmod_code+2
      4  352d				  -	      pla
      5  352d				  -	      sta	.selfmod_code+1
      6  352d					      ELSE
      7  352d		       8d 35 35 	      sta	.selfmod_code+1
      8  3530		       8c 36 35 	      sty	.selfmod_code+2
      9  3533					      ENDIF
     10  3533		       68		      pla
     11  3534				   .selfmod_code
     12  3534		       8d 00 00 	      sta.w	$0000
   5700  3537		       4c 65 35 	      jmp	_EI_23
   5701  353a				   _EL_23
   5702  353a				   FPULL      SET	0
      0  353a					      pbyte	#0
      1  353a		       a9 00		      lda	#0
      2  353c					      IF	!FPUSH
      3  353c		       48		      pha
      4  353d					      ENDIF
   5704  353d				   FPUSH      SET	1
      0  353d					      pbvar	_move_enemy_bullets.i
      0  353d					      pbyte	_move_enemy_bullets.i
      1  353d		       ad ee 4a 	      lda	_move_enemy_bullets.i
      2  3540				  -	      IF	!FPUSH
      3  3540				  -	      pha
      4  3540					      ENDIF
   5706  3540				   FPULL      SET	1
   5707  3540				   FPUSH      SET	0
      0  3540					      plbarray_fast	_enemy_bullet_on
      1  3540				  -	      IF	!FPULL
      2  3540				  -	      pla
      3  3540					      ENDIF
      4  3540		       aa		      tax
      5  3541		       68		      pla
      6  3542		       9d a2 4a 	      sta	_enemy_bullet_on,x
   5709  3542				   FPULL      SET	0
      0  3545					      opt_pbyte_pbyte_add	_move_enemy_bullets.i, #2
      1  3545
      2  3545
      3  3545
      4  3545
      5  3545
      6  3545		       ad ee 4a 	      lda	_move_enemy_bullets.i
      7  3548		       18		      clc
      8  3549		       69 02		      adc	#2
      9  354b					      IF	!FPUSH
     10  354b		       48		      pha
     11  354c					      ENDIF
   5711  354c				   FPUSH      SET	1
      0  354c					      pbarray_fast	_bits
      1  354c					      IF	!FPULL
      2  354c		       68		      pla
      3  354d					      ENDIF
      4  354d		       aa		      tax
      5  354e		       bd b5 49 	      lda	_bits,x
      6  3551				  -	      IF	!FPUSH
      7  3551				  -	      pha
      8  3551					      ENDIF
   5713  3551				   FPULL      SET	1
   5714  3551				   FPUSH      SET	0
      0  3551					      plb2var	_move_enemy_bullets.bit
      1  3551				  -	      IF	!FPULL
      2  3551				  -	      pla
      3  3551					      ENDIF
      4  3551		       8d f1 4a 	      sta	_move_enemy_bullets.bit
   5716  3551				   FPULL      SET	0
      0  3554					      peekb_const_addr	#53269
      1  3554
      2  3554
      3  3554
      4  3554		       d0 15	   .ad	      EQU	#53269
      5  3554		       ad 15 d0 	      lda	.ad
      6  3557					      IF	!FPUSH
      7  3557		       48		      pha
      8  3558					      ENDIF
   5718  3558				   FPUSH      SET	1
      0  3558					      opt_pbyte_pbyte_xor	_move_enemy_bullets.bit, #255
      1  3558
      2  3558
      3  3558
      4  3558
      5  3558
      6  3558		       ad f1 4a 	      lda	_move_enemy_bullets.bit
      7  355b		       49 ff		      eor	#255
      8  355d				  -	      IF	!FPUSH
      9  355d				  -	      pha
     10  355d					      ENDIF
   5720  355d				   FPULL      SET	1
      0  355d					      andb
      1  355d				  -	      IF	!FPULL
      2  355d				  -	      pla
      3  355d					      ENDIF
      4  355d		       85 fc		      sta	R1
      5  355f		       68		      pla
      6  3560		       25 fc		      and	R1
      7  3562				  -	      IF	!FPUSH
      8  3562				  -	      pha
      9  3562					      ENDIF
   5722  3562				   FPUSH      SET	0
      0  3562					      pokeb_const_addr	#53269
      1  3562
      2  3562
      3  3562
      4  3562		       d0 15	   .ad	      EQU	#53269
      5  3562				  -	      IF	!FPULL
      6  3562				  -	      pla
      7  3562					      ENDIF
      8  3562		       8d 15 d0 	      sta	.ad
   5724  3565
   5725  3565
   5726  3565
   5727  3565
   5728  3565				   _EI_23
   5729  3565
   5730  3565
   5731  3565
   5732  3565
   5733  3565
   5734  3565
   5735  3565
   5736  3565				   _EI_22
      0  3565					      nextb	_move_enemy_bullets.i
      1  3565
      2  3565		       ee ee 4a 	      inc	_move_enemy_bullets.i
      3  3568
      4  3568		       f0 15		      beq	.end
      5  356a				   .skip
      6  356a
      7  356a		       68		      pla
      8  356b		       8d 7e 35 	      sta	.selfmod_code+2
      9  356e		       68		      pla
     10  356f		       8d 7d 35 	      sta	.selfmod_code+1
     11  3572
     12  3572		       68		      pla
     13  3573		       cd ee 4a 	      cmp	_move_enemy_bullets.i
     14  3576		       b0 03		      bcs	.jump_back
     15  3578		       4c 7f 35 	      jmp	.end
     16  357b				   .jump_back
     17  357b
     18  357b		       48		      pha
     19  357c				   .selfmod_code
     20  357c		       4c 00 00 	      jmp	$0000
     21  357f				   .end
   5738  357f		       60		      rts
   5739  3580
   5740  3580
   5741  3580
   5742  3580
   5743  3580
   5744  3580
   5745  3580
   5746  3580				   _Pmove_enemy_bullets_end
   5747  3580		       4c 2f 37 	      jmp	_Pmove_ufo_end
   5748  3583
   5749  3583
   5750  3583
   5751  3583
   5752  3583
   5753  3583
   5754  3583
   5755  3583				   _Pmove_ufo
      0  3583					      pbyte_pbyte_cmpbeq_cond	_ufo_hit, #1, _EI_24, _EL_24
      1  3583
      2  3583
      3  3583		       ad c9 4a 	      lda	_ufo_hit
      4  3586		       c9 01		      cmp	#1
      5  3588		       f0 03		      beq	*+5
      6  358a				  -	      IFCONST	_EL_24
      7  358a				  -	      jmp	_EL_24
      8  358a					      ELSE
      9  358a		       4c ff 35 	      jmp	_EI_24
     10  358d					      ENDIF
      0  358d					      incw	_framecount_ufo
      1  358d		       ee ca 4a 	      inc	_framecount_ufo
      2  3590		       d0 03		      bne	.skip
      3  3592		       ee cb 4a 	      inc	_framecount_ufo+1
      4  3595				   .skip
   5758  3595				   FPULL      SET	0
      0  3595					      pwvar	_framecount_ufo
      1  3595					      IF	!FPUSH
      2  3595		       ad ca 4a 	      lda	_framecount_ufo
      3  3598		       48		      pha
      4  3599		       ad cb 4a 	      lda	_framecount_ufo+1
      5  359c		       48		      pha
      6  359d				  -	      ELSE
      7  359d				  -	      lda	_framecount_ufo
      8  359d				  -	      ldy	_framecount_ufo+1
      9  359d					      ENDIF
      0  359d					      pbyte	#75
      1  359d		       a9 4b		      lda	#75
      2  359f					      IF	!FPUSH
      3  359f		       48		      pha
      4  35a0					      ENDIF
      0  35a0					      btow
      1  35a0		       a9 00		      lda	#$00
      2  35a2		       48		      pha
   5762  35a2				   FPUSH      SET	1
      0  35a3					      cmpwgte
      1  35a3		       ba		      tsx
      2  35a4		       bd 04 01 	      lda.wx	stack+4
      3  35a7		       dd 02 01 	      cmp.wx	stack+2
      4  35aa		       bd 03 01 	      lda.wx	stack+3
      5  35ad		       fd 01 01 	      sbc.wx	stack+1
      6  35b0		       10 0a		      bpl	.pht
      7  35b2		       e8		      inx
      8  35b3		       e8		      inx
      9  35b4		       e8		      inx
     10  35b5		       e8		      inx
     11  35b6		       9a		      txs
      0  35b7					      pzero
      1  35b7		       a9 00		      lda	#$00
      2  35b9				  -	      IF	!FPUSH
      3  35b9				  -	      pha
      4  35b9					      ENDIF
     13  35b9				  -	      IF	!FPUSH
     14  35b9				  -	      jmp	*+11
     15  35b9					      ELSE
     16  35b9		       4c c3 35 	      jmp	*+10
     17  35bc					      ENDIF
     18  35bc		       e8	   .pht       inx
     19  35bd		       e8		      inx
     20  35be		       e8		      inx
     21  35bf		       e8		      inx
     22  35c0		       9a		      txs
      0  35c1					      pone
      1  35c1		       a9 01		      lda	#$01
      2  35c3				  -	      IF	!FPUSH
      3  35c3				  -	      pha
      4  35c3					      ENDIF
   5764  35c3				   FPULL      SET	1
   5765  35c3				   FPUSH      SET	0
      0  35c3					      cond_stmt	_EI_25, _EL_25
      1  35c3				  -	      IF	!FPULL
      2  35c3				  -	      pla
      3  35c3					      ENDIF
      4  35c3		       d0 03		      bne	*+5
      5  35c5				  -	      IFCONST	_EL_25
      6  35c5				  -	      jmp	_EL_25
      7  35c5					      ELSE
      8  35c5		       4c fe 35 	      jmp	_EI_25
      9  35c8					      ENDIF
   5767  35c8				   FPULL      SET	0
   5768  35c8				   FPUSH      SET	1
      0  35c8					      pbyte	#0
      1  35c8		       a9 00		      lda	#0
      2  35ca				  -	      IF	!FPUSH
      3  35ca				  -	      pha
      4  35ca					      ENDIF
   5770  35ca				   FPULL      SET	1
   5771  35ca				   FPUSH      SET	0
      0  35ca					      plb2var	_ufo_on
      1  35ca				  -	      IF	!FPULL
      2  35ca				  -	      pla
      3  35ca					      ENDIF
      4  35ca		       8d c6 4a 	      sta	_ufo_on
   5773  35ca				   FPULL      SET	0
   5774  35ca				   FPUSH      SET	1
      0  35cd					      pword	#370
      1  35cd				  -	      IF	!FPUSH
      2  35cd				  -	      lda	#<#370
      3  35cd				  -	      pha
      4  35cd				  -	      lda	#>#370
      5  35cd				  -	      pha
      6  35cd					      ELSE
      7  35cd		       a9 72		      lda	#<#370
      8  35cf		       a0 01		      ldy	#>#370
      9  35d1					      ENDIF
   5776  35d1				   FPULL      SET	1
   5777  35d1				   FPUSH      SET	0
      0  35d1					      plw2var	_ufo_pos
      1  35d1				  -	      IF	!FPULL
      2  35d1				  -	      pla
      3  35d1				  -	      sta	_ufo_pos+1
      4  35d1				  -	      pla
      5  35d1				  -	      sta	_ufo_pos
      6  35d1					      ELSE
      7  35d1		       8d c7 4a 	      sta	_ufo_pos
      8  35d4		       8c c8 4a 	      sty	_ufo_pos+1
      9  35d7					      ENDIF
   5779  35d7		       20 ae 36 	      jsr	_Lmove_ufo.pos_ufo
   5780  35d7				   FPULL      SET	0
      0  35da					      pbyte	#0
      1  35da		       a9 00		      lda	#0
      2  35dc					      IF	!FPUSH
      3  35dc		       48		      pha
      4  35dd					      ENDIF
      0  35dd					      btow
      1  35dd		       a9 00		      lda	#$00
      2  35df		       48		      pha
      0  35e0					      plw2var	_framecount_ufo
      1  35e0					      IF	!FPULL
      2  35e0		       68		      pla
      3  35e1		       8d cb 4a 	      sta	_framecount_ufo+1
      4  35e4		       68		      pla
      5  35e5		       8d ca 4a 	      sta	_framecount_ufo
      6  35e8				  -	      ELSE
      7  35e8				  -	      sta	_framecount_ufo
      8  35e8				  -	      sty	_framecount_ufo+1
      9  35e8					      ENDIF
   5784  35e8				   FPUSH      SET	1
      0  35e8					      pbyte	#0
      1  35e8		       a9 00		      lda	#0
      2  35ea				  -	      IF	!FPUSH
      3  35ea				  -	      pha
      4  35ea					      ENDIF
   5786  35ea				   FPULL      SET	1
   5787  35ea				   FPUSH      SET	0
      0  35ea					      plb2var	_ufo_hit
      1  35ea				  -	      IF	!FPULL
      2  35ea				  -	      pla
      3  35ea					      ENDIF
      4  35ea		       8d c9 4a 	      sta	_ufo_hit
   5789  35ea				   FPULL      SET	0
      0  35ed					      pbyte	#246
      1  35ed		       a9 f6		      lda	#246
      2  35ef					      IF	!FPUSH
      3  35ef		       48		      pha
      4  35f0					      ENDIF
   5791  35f0				   FPUSH      SET	1
      0  35f0					      pword	#2046
      1  35f0				  -	      IF	!FPUSH
      2  35f0				  -	      lda	#<#2046
      3  35f0				  -	      pha
      4  35f0				  -	      lda	#>#2046
      5  35f0				  -	      pha
      6  35f0					      ELSE
      7  35f0		       a9 fe		      lda	#<#2046
      8  35f2		       a0 07		      ldy	#>#2046
      9  35f4					      ENDIF
   5793  35f4				   FPULL      SET	1
   5794  35f4				   FPUSH      SET	0
      0  35f4					      pokeb
      1  35f4				  -	      IF	!FPULL
      2  35f4				  -	      pla
      3  35f4				  -	      sta	.selfmod_code+2
      4  35f4				  -	      pla
      5  35f4				  -	      sta	.selfmod_code+1
      6  35f4					      ELSE
      7  35f4		       8d fc 35 	      sta	.selfmod_code+1
      8  35f7		       8c fd 35 	      sty	.selfmod_code+2
      9  35fa					      ENDIF
     10  35fa		       68		      pla
     11  35fb				   .selfmod_code
     12  35fb		       8d 00 00 	      sta.w	$0000
   5796  35fe				   _EI_25
   5797  35fe		       60		      rts
   5798  35ff
   5799  35ff
   5800  35ff
   5801  35ff
   5802  35ff
   5803  35ff
   5804  35ff
   5805  35ff				   _EI_24
      0  35ff					      pbyte_pbyte_cmpbeq_cond	_ufo_on, #1, _EI_26, _EL_26
      1  35ff
      2  35ff
      3  35ff		       ad c6 4a 	      lda	_ufo_on
      4  3602		       c9 01		      cmp	#1
      5  3604		       f0 03		      beq	*+5
      6  3606					      IFCONST	_EL_26
      7  3606		       4c 55 36 	      jmp	_EL_26
      8  3609				  -	      ELSE
      9  3609				  -	      jmp	_EI_26
     10  3609					      ENDIF
      0  3609					      decw	_ufo_pos
      1  3609		       ce c7 4a 	      dec	_ufo_pos
      2  360c		       a9 ff		      lda	#$ff
      3  360e		       cd c7 4a 	      cmp	_ufo_pos
      4  3611		       d0 03		      bne	.skip
      5  3613		       ce c8 4a 	      dec	_ufo_pos+1
      6  3616				   .skip
   5808  3616				   FPULL      SET	0
      0  3616					      pwvar	_ufo_pos
      1  3616					      IF	!FPUSH
      2  3616		       ad c7 4a 	      lda	_ufo_pos
      3  3619		       48		      pha
      4  361a		       ad c8 4a 	      lda	_ufo_pos+1
      5  361d		       48		      pha
      6  361e				  -	      ELSE
      7  361e				  -	      lda	_ufo_pos
      8  361e				  -	      ldy	_ufo_pos+1
      9  361e					      ENDIF
      0  361e					      pbyte	#8
      1  361e		       a9 08		      lda	#8
      2  3620					      IF	!FPUSH
      3  3620		       48		      pha
      4  3621					      ENDIF
      0  3621					      btow
      1  3621		       a9 00		      lda	#$00
      2  3623		       48		      pha
   5812  3623				   FPUSH      SET	1
      0  3624					      cmpwlt
      1  3624		       ba		      tsx
      2  3625		       bd 04 01 	      lda.wx	stack+4
      3  3628		       dd 02 01 	      cmp.wx	stack+2
      4  362b		       bd 03 01 	      lda.wx	stack+3
      5  362e		       fd 01 01 	      sbc.wx	stack+1
      6  3631		       10 0a		      bpl	.phf
      7  3633		       e8		      inx
      8  3634		       e8		      inx
      9  3635		       e8		      inx
     10  3636		       e8		      inx
     11  3637		       9a		      txs
      0  3638					      pone
      1  3638		       a9 01		      lda	#$01
      2  363a				  -	      IF	!FPUSH
      3  363a				  -	      pha
      4  363a					      ENDIF
     13  363a				  -	      IF	!FPUSH
     14  363a				  -	      jmp	*+11
     15  363a					      ELSE
     16  363a		       4c 44 36 	      jmp	*+10
     17  363d					      ENDIF
     18  363d		       e8	   .phf       inx
     19  363e		       e8		      inx
     20  363f		       e8		      inx
     21  3640		       e8		      inx
     22  3641		       9a		      txs
      0  3642					      pzero
      1  3642		       a9 00		      lda	#$00
      2  3644				  -	      IF	!FPUSH
      3  3644				  -	      pha
      4  3644					      ENDIF
   5814  3644				   FPULL      SET	1
   5815  3644				   FPUSH      SET	0
      0  3644					      cond_stmt	_EI_65550, _EL_65550
      1  3644				  -	      IF	!FPULL
      2  3644				  -	      pla
      3  3644					      ENDIF
      4  3644		       d0 03		      bne	*+5
      5  3646				  -	      IFCONST	_EL_65550
      6  3646				  -	      jmp	_EL_65550
      7  3646					      ELSE
      8  3646		       4c 4f 36 	      jmp	_EI_65550
      9  3649					      ENDIF
   5817  3649				   FPULL      SET	0
   5818  3649				   FPUSH      SET	1
      0  3649					      pbyte	#0
      1  3649		       a9 00		      lda	#0
      2  364b				  -	      IF	!FPUSH
      3  364b				  -	      pha
      4  364b					      ENDIF
   5820  364b				   FPULL      SET	1
   5821  364b				   FPUSH      SET	0
      0  364b					      plb2var	_ufo_on
      1  364b				  -	      IF	!FPULL
      2  364b				  -	      pla
      3  364b					      ENDIF
      4  364b		       8d c6 4a 	      sta	_ufo_on
   5823  364e		       60		      rts
   5824  364f				   _EI_65550
   5825  364f		       20 ae 36 	      jsr	_Lmove_ufo.pos_ufo
   5826  3652		       4c ad 36 	      jmp	_EI_26
   5827  3655
   5828  3655
   5829  3655
   5830  3655
   5831  3655
   5832  3655
   5833  3655
   5834  3655				   _EL_26
      0  3655					      incw	_framecount_ufo
      1  3655		       ee ca 4a 	      inc	_framecount_ufo
      2  3658		       d0 03		      bne	.skip
      3  365a		       ee cb 4a 	      inc	_framecount_ufo+1
      4  365d				   .skip
   5836  365d				   FPULL      SET	0
      0  365d					      pwvar	_framecount_ufo
      1  365d					      IF	!FPUSH
      2  365d		       ad ca 4a 	      lda	_framecount_ufo
      3  3660		       48		      pha
      4  3661		       ad cb 4a 	      lda	_framecount_ufo+1
      5  3664		       48		      pha
      6  3665				  -	      ELSE
      7  3665				  -	      lda	_framecount_ufo
      8  3665				  -	      ldy	_framecount_ufo+1
      9  3665					      ENDIF
      0  3665					      pword	#1000
      1  3665					      IF	!FPUSH
      2  3665		       a9 e8		      lda	#<#1000
      3  3667		       48		      pha
      4  3668		       a9 03		      lda	#>#1000
      5  366a		       48		      pha
      6  366b				  -	      ELSE
      7  366b				  -	      lda	#<#1000
      8  366b				  -	      ldy	#>#1000
      9  366b					      ENDIF
   5839  366b				   FPUSH      SET	1
      0  366b					      cmpwgte
      1  366b		       ba		      tsx
      2  366c		       bd 04 01 	      lda.wx	stack+4
      3  366f		       dd 02 01 	      cmp.wx	stack+2
      4  3672		       bd 03 01 	      lda.wx	stack+3
      5  3675		       fd 01 01 	      sbc.wx	stack+1
      6  3678		       10 0a		      bpl	.pht
      7  367a		       e8		      inx
      8  367b		       e8		      inx
      9  367c		       e8		      inx
     10  367d		       e8		      inx
     11  367e		       9a		      txs
      0  367f					      pzero
      1  367f		       a9 00		      lda	#$00
      2  3681				  -	      IF	!FPUSH
      3  3681				  -	      pha
      4  3681					      ENDIF
     13  3681				  -	      IF	!FPUSH
     14  3681				  -	      jmp	*+11
     15  3681					      ELSE
     16  3681		       4c 8b 36 	      jmp	*+10
     17  3684					      ENDIF
     18  3684		       e8	   .pht       inx
     19  3685		       e8		      inx
     20  3686		       e8		      inx
     21  3687		       e8		      inx
     22  3688		       9a		      txs
      0  3689					      pone
      1  3689		       a9 01		      lda	#$01
      2  368b				  -	      IF	!FPUSH
      3  368b				  -	      pha
      4  368b					      ENDIF
   5841  368b				   FPULL      SET	1
   5842  368b				   FPUSH      SET	0
      0  368b					      cond_stmt	_EI_27, _EL_27
      1  368b				  -	      IF	!FPULL
      2  368b				  -	      pla
      3  368b					      ENDIF
      4  368b		       d0 03		      bne	*+5
      5  368d				  -	      IFCONST	_EL_27
      6  368d				  -	      jmp	_EL_27
      7  368d					      ELSE
      8  368d		       4c ad 36 	      jmp	_EI_27
      9  3690					      ENDIF
   5844  3690				   FPULL      SET	0
   5845  3690				   FPUSH      SET	1
      0  3690					      pbyte	#1
      1  3690		       a9 01		      lda	#1
      2  3692				  -	      IF	!FPUSH
      3  3692				  -	      pha
      4  3692					      ENDIF
   5847  3692				   FPULL      SET	1
   5848  3692				   FPUSH      SET	0
      0  3692					      plb2var	_ufo_on
      1  3692				  -	      IF	!FPULL
      2  3692				  -	      pla
      3  3692					      ENDIF
      4  3692		       8d c6 4a 	      sta	_ufo_on
   5850  3692				   FPULL      SET	0
   5851  3692				   FPUSH      SET	1
      0  3695					      pword	#370
      1  3695				  -	      IF	!FPUSH
      2  3695				  -	      lda	#<#370
      3  3695				  -	      pha
      4  3695				  -	      lda	#>#370
      5  3695				  -	      pha
      6  3695					      ELSE
      7  3695		       a9 72		      lda	#<#370
      8  3697		       a0 01		      ldy	#>#370
      9  3699					      ENDIF
   5853  3699				   FPULL      SET	1
   5854  3699				   FPUSH      SET	0
      0  3699					      plw2var	_ufo_pos
      1  3699				  -	      IF	!FPULL
      2  3699				  -	      pla
      3  3699				  -	      sta	_ufo_pos+1
      4  3699				  -	      pla
      5  3699				  -	      sta	_ufo_pos
      6  3699					      ELSE
      7  3699		       8d c7 4a 	      sta	_ufo_pos
      8  369c		       8c c8 4a 	      sty	_ufo_pos+1
      9  369f					      ENDIF
   5856  369f				   FPULL      SET	0
      0  369f					      pbyte	#0
      1  369f		       a9 00		      lda	#0
      2  36a1					      IF	!FPUSH
      3  36a1		       48		      pha
      4  36a2					      ENDIF
      0  36a2					      btow
      1  36a2		       a9 00		      lda	#$00
      2  36a4		       48		      pha
      0  36a5					      plw2var	_framecount_ufo
      1  36a5					      IF	!FPULL
      2  36a5		       68		      pla
      3  36a6		       8d cb 4a 	      sta	_framecount_ufo+1
      4  36a9		       68		      pla
      5  36aa		       8d ca 4a 	      sta	_framecount_ufo
      6  36ad				  -	      ELSE
      7  36ad				  -	      sta	_framecount_ufo
      8  36ad				  -	      sty	_framecount_ufo+1
      9  36ad					      ENDIF
   5860  36ad				   _EI_27
   5861  36ad
   5862  36ad
   5863  36ad
   5864  36ad
   5865  36ad
   5866  36ad
   5867  36ad
   5868  36ad				   _EI_26
   5869  36ad		       60		      rts
   5870  36ae
   5871  36ae
   5872  36ae
   5873  36ae
   5874  36ae
   5875  36ae
   5876  36ae
   5877  36ae				   _Lmove_ufo.pos_ufo
      0  36ae					      pwvar	_ufo_pos
      1  36ae					      IF	!FPUSH
      2  36ae		       ad c7 4a 	      lda	_ufo_pos
      3  36b1		       48		      pha
      4  36b2		       ad c8 4a 	      lda	_ufo_pos+1
      5  36b5		       48		      pha
      6  36b6				  -	      ELSE
      7  36b6				  -	      lda	_ufo_pos
      8  36b6				  -	      ldy	_ufo_pos+1
      9  36b6					      ENDIF
   5879  36b6				   FPUSH      SET	1
      0  36b6					      pword	#53260
      1  36b6				  -	      IF	!FPUSH
      2  36b6				  -	      lda	#<#53260
      3  36b6				  -	      pha
      4  36b6				  -	      lda	#>#53260
      5  36b6				  -	      pha
      6  36b6					      ELSE
      7  36b6		       a9 0c		      lda	#<#53260
      8  36b8		       a0 d0		      ldy	#>#53260
      9  36ba					      ENDIF
   5881  36ba				   FPULL      SET	1
   5882  36ba				   FPUSH      SET	0
      0  36ba					      pokew
      1  36ba				  -	      IF	!FPULL
      2  36ba				  -	      pla
      3  36ba				  -	      sta	.selfmod_code+2
      4  36ba				  -	      pla
      5  36ba				  -	      sta	.selfmod_code+1
      6  36ba					      ELSE
      7  36ba		       8d c3 36 	      sta	.selfmod_code+1
      8  36bd		       8c c4 36 	      sty	.selfmod_code+2
      9  36c0					      ENDIF
     10  36c0		       68		      pla
     11  36c1		       68		      pla
     12  36c2				   .selfmod_code
     13  36c2		       8d 00 00 	      sta.w	$0000
   5884  36c2				   FPULL      SET	0
      0  36c5					      pwvar	_ufo_pos
      1  36c5					      IF	!FPUSH
      2  36c5		       ad c7 4a 	      lda	_ufo_pos
      3  36c8		       48		      pha
      4  36c9		       ad c8 4a 	      lda	_ufo_pos+1
      5  36cc		       48		      pha
      6  36cd				  -	      ELSE
      7  36cd				  -	      lda	_ufo_pos
      8  36cd				  -	      ldy	_ufo_pos+1
      9  36cd					      ENDIF
      0  36cd					      pbyte	#255
      1  36cd		       a9 ff		      lda	#255
      2  36cf					      IF	!FPUSH
      3  36cf		       48		      pha
      4  36d0					      ENDIF
      0  36d0					      btow
      1  36d0		       a9 00		      lda	#$00
      2  36d2		       48		      pha
   5888  36d2				   FPUSH      SET	1
      0  36d3					      cmpwgt
      1  36d3		       ba		      tsx
      2  36d4		       bd 02 01 	      lda.wx	stack+2
      3  36d7		       dd 04 01 	      cmp.wx	stack+4
      4  36da		       bd 01 01 	      lda.wx	stack+1
      5  36dd		       fd 03 01 	      sbc.wx	stack+3
      6  36e0		       30 0a		      bmi	.pht
      7  36e2		       e8		      inx
      8  36e3		       e8		      inx
      9  36e4		       e8		      inx
     10  36e5		       e8		      inx
     11  36e6		       9a		      txs
      0  36e7					      pzero
      1  36e7		       a9 00		      lda	#$00
      2  36e9				  -	      IF	!FPUSH
      3  36e9				  -	      pha
      4  36e9					      ENDIF
     13  36e9				  -	      IF	!FPUSH
     14  36e9				  -	      jmp	*+11
     15  36e9					      ELSE
     16  36e9		       4c f3 36 	      jmp	*+10
     17  36ec					      ENDIF
     18  36ec		       e8	   .pht       inx
     19  36ed		       e8		      inx
     20  36ee		       e8		      inx
     21  36ef		       e8		      inx
     22  36f0		       9a		      txs
      0  36f1					      pone
      1  36f1		       a9 01		      lda	#$01
      2  36f3				  -	      IF	!FPUSH
      3  36f3				  -	      pha
      4  36f3					      ENDIF
   5890  36f3				   FPULL      SET	1
   5891  36f3				   FPUSH      SET	0
      0  36f3					      cond_stmt	_EI_28, _EL_28
      1  36f3				  -	      IF	!FPULL
      2  36f3				  -	      pla
      3  36f3					      ENDIF
      4  36f3		       d0 03		      bne	*+5
      5  36f5					      IFCONST	_EL_28
      6  36f5		       4c 1f 37 	      jmp	_EL_28
      7  36f8				  -	      ELSE
      8  36f8				  -	      jmp	_EI_28
      9  36f8					      ENDIF
   5893  36f8				   FPULL      SET	0
   5894  36f8				   FPUSH      SET	1
      0  36f8					      pword	#53264
      1  36f8				  -	      IF	!FPUSH
      2  36f8				  -	      lda	#<#53264
      3  36f8				  -	      pha
      4  36f8				  -	      lda	#>#53264
      5  36f8				  -	      pha
      6  36f8					      ELSE
      7  36f8		       a9 10		      lda	#<#53264
      8  36fa		       a0 d0		      ldy	#>#53264
      9  36fc					      ENDIF
   5896  36fc				   FPULL      SET	1
   5897  36fc				   FPUSH      SET	0
      0  36fc					      peekb
      1  36fc				  -	      IF	!FPULL
      2  36fc				  -	      pla
      3  36fc				  -	      sta	.selfmod_code+2
      4  36fc				  -	      pla
      5  36fc				  -	      sta	.selfmod_code+1
      6  36fc					      ELSE
      7  36fc		       8d 03 37 	      sta	.selfmod_code+1
      8  36ff		       8c 04 37 	      sty	.selfmod_code+2
      9  3702					      ENDIF
     10  3702				   .selfmod_code
     11  3702		       ad 00 00 	      lda.w	$0000
     12  3705					      IF	!FPUSH
     13  3705		       48		      pha
     14  3706					      ENDIF
   5899  3706				   FPULL      SET	0
   5900  3706				   FPUSH      SET	1
      0  3706					      pbyte	#64
      1  3706		       a9 40		      lda	#64
      2  3708				  -	      IF	!FPUSH
      3  3708				  -	      pha
      4  3708					      ENDIF
   5902  3708				   FPULL      SET	1
   5903  3708				   FPUSH      SET	0
      0  3708					      orb
      1  3708				  -	      IF	!FPULL
      2  3708				  -	      pla
      3  3708					      ENDIF
      4  3708		       85 fc		      sta	R1
      5  370a		       68		      pla
      6  370b		       05 fc		      ora	R1
      7  370d					      IF	!FPUSH
      8  370d		       48		      pha
      9  370e					      ENDIF
   5905  370e				   FPULL      SET	0
   5906  370e				   FPUSH      SET	1
      0  370e					      pword	#53264
      1  370e				  -	      IF	!FPUSH
      2  370e				  -	      lda	#<#53264
      3  370e				  -	      pha
      4  370e				  -	      lda	#>#53264
      5  370e				  -	      pha
      6  370e					      ELSE
      7  370e		       a9 10		      lda	#<#53264
      8  3710		       a0 d0		      ldy	#>#53264
      9  3712					      ENDIF
   5908  3712				   FPULL      SET	1
   5909  3712				   FPUSH      SET	0
      0  3712					      pokeb
      1  3712				  -	      IF	!FPULL
      2  3712				  -	      pla
      3  3712				  -	      sta	.selfmod_code+2
      4  3712				  -	      pla
      5  3712				  -	      sta	.selfmod_code+1
      6  3712					      ELSE
      7  3712		       8d 1a 37 	      sta	.selfmod_code+1
      8  3715		       8c 1b 37 	      sty	.selfmod_code+2
      9  3718					      ENDIF
     10  3718		       68		      pla
     11  3719				   .selfmod_code
     12  3719		       8d 00 00 	      sta.w	$0000
   5911  371c		       4c 2d 37 	      jmp	_EI_28
   5912  371f				   _EL_28
   5913  371f				   FPULL      SET	0
      0  371f					      peekb_const_addr	#53264
      1  371f
      2  371f
      3  371f
      4  371f		       d0 10	   .ad	      EQU	#53264
      5  371f		       ad 10 d0 	      lda	.ad
      6  3722					      IF	!FPUSH
      7  3722		       48		      pha
      8  3723					      ENDIF
   5915  3723				   FPUSH      SET	1
      0  3723					      pbyte	#191
      1  3723		       a9 bf		      lda	#191
      2  3725				  -	      IF	!FPUSH
      3  3725				  -	      pha
      4  3725					      ENDIF
   5917  3725				   FPULL      SET	1
      0  3725					      andb
      1  3725				  -	      IF	!FPULL
      2  3725				  -	      pla
      3  3725					      ENDIF
      4  3725		       85 fc		      sta	R1
      5  3727		       68		      pla
      6  3728		       25 fc		      and	R1
      7  372a				  -	      IF	!FPUSH
      8  372a				  -	      pha
      9  372a					      ENDIF
   5919  372a				   FPUSH      SET	0
      0  372a					      pokeb_const_addr	#53264
      1  372a
      2  372a
      3  372a
      4  372a		       d0 10	   .ad	      EQU	#53264
      5  372a				  -	      IF	!FPULL
      6  372a				  -	      pla
      7  372a					      ENDIF
      8  372a		       8d 10 d0 	      sta	.ad
   5921  372d
   5922  372d
   5923  372d
   5924  372d
   5925  372d				   _EI_28
   5926  372d		       60		      rts
   5927  372e		       60		      rts
   5928  372f
   5929  372f
   5930  372f
   5931  372f
   5932  372f
   5933  372f
   5934  372f
   5935  372f				   _Pmove_ufo_end
   5936  4000					      org	$4000
   5937  4000		       4c 69 40 	      jmp	_Plazy_routines_end
   5938  4003
   5939  4003
   5940  4003
   5941  4003
   5942  4003
   5943  4003
   5944  4003
   5945  4003				   _Plazy_routines
   5946  4003				   FPULL      SET	0
      0  4003					      pbyte	#0
      1  4003		       a9 00		      lda	#0
      2  4005					      IF	!FPUSH
      3  4005		       48		      pha
      4  4006					      ENDIF
      0  4006					      btow
      1  4006		       a9 00		      lda	#$00
      2  4008		       48		      pha
   5949  4008				   FPUSH      SET	1
      0  4009					      pword	#40
      1  4009				  -	      IF	!FPUSH
      2  4009				  -	      lda	#<#40
      3  4009				  -	      pha
      4  4009				  -	      lda	#>#40
      5  4009				  -	      pha
      6  4009					      ELSE
      7  4009		       a9 28		      lda	#<#40
      8  400b		       a0 00		      ldy	#>#40
      9  400d					      ENDIF
   5951  400d				   FPULL      SET	1
   5952  400d				   FPUSH      SET	0
      0  400d					      mulw
      1  400d				  -	      IF	!FPULL
      2  400d				  -	      pla
      3  400d				  -	      sta	R1
      4  400d				  -	      pla
      5  400d				  -	      sta	R0
      6  400d					      ELSE
      7  400d		       85 fb		      sta	R0
      8  400f		       84 fc		      sty	R1
      9  4011					      ENDIF
     10  4011		       68		      pla
     11  4012		       85 fe		      sta	R3
     12  4014		       68		      pla
     13  4015		       85 fd		      sta	R2
     14  4017		       20 0d 08 	      jsr	NUCL_SMUL16
     15  401a					      IF	!FPUSH
     16  401a		       a5 fb		      lda	R0
     17  401c		       48		      pha
     18  401d		       a5 fc		      lda	R1
     19  401f		       48		      pha
     20  4020				  -	      ELSE
     21  4020				  -	      lda	R0
     22  4020				  -	      ldy	R1
     23  4020					      ENDIF
   5954  4020				   FPULL      SET	0
      0  4020					      pbyte	#6
      1  4020		       a9 06		      lda	#6
      2  4022					      IF	!FPUSH
      3  4022		       48		      pha
      4  4023					      ENDIF
      0  4023					      btow
      1  4023		       a9 00		      lda	#$00
      2  4025		       48		      pha
      0  4026					      addw
      1  4026		       ba		      tsx
      2  4027		       bd 02 01 	      lda.wx	stack+2
      3  402a		       18		      clc
      4  402b		       7d 04 01 	      adc.wx	stack+4
      5  402e		       9d 04 01 	      sta.wx	stack+4
      6  4031		       68		      pla
      7  4032		       7d 03 01 	      adc.wx	stack+3
      8  4035		       9d 03 01 	      sta.wx	stack+3
      9  4038		       68		      pla
      0  4039					      pword	#1024
      1  4039					      IF	!FPUSH
      2  4039		       a9 00		      lda	#<#1024
      3  403b		       48		      pha
      4  403c		       a9 04		      lda	#>#1024
      5  403e		       48		      pha
      6  403f				  -	      ELSE
      7  403f				  -	      lda	#<#1024
      8  403f				  -	      ldy	#>#1024
      9  403f					      ENDIF
      0  403f					      addw
      1  403f		       ba		      tsx
      2  4040		       bd 02 01 	      lda.wx	stack+2
      3  4043		       18		      clc
      4  4044		       7d 04 01 	      adc.wx	stack+4
      5  4047		       9d 04 01 	      sta.wx	stack+4
      6  404a		       68		      pla
      7  404b		       7d 03 01 	      adc.wx	stack+3
      8  404e		       9d 03 01 	      sta.wx	stack+3
      9  4051		       68		      pla
   5960  4051				   FPUSH      SET	1
      0  4052					      pwvar	_score
      1  4052				  -	      IF	!FPUSH
      2  4052				  -	      lda	_score
      3  4052				  -	      pha
      4  4052				  -	      lda	_score+1
      5  4052				  -	      pha
      6  4052					      ELSE
      7  4052		       ad bb 4a 	      lda	_score
      8  4055		       ac bc 4a 	      ldy	_score+1
      9  4058					      ENDIF
   5962  4058
   5963  4058				   FPULL      SET	1
   5964  4058				   FPUSH      SET	0
      0  4058					      wat
      1  4058				  -	      IF	!FPULL
      2  4058				  -	      pla
      3  4058				  -	      sta	R3
      4  4058				  -	      pla
      5  4058				  -	      sta	R2
      6  4058					      ELSE
      7  4058		       85 fd		      sta	R2
      8  405a		       84 fe		      sty	R3
      9  405c					      ENDIF
     10  405c		       68		      pla
     11  405d		       85 46		      sta	RB
     12  405f		       68		      pla
     13  4060		       85 45		      sta	RA
     14  4062		       20 1f 0a 	      jsr	STDLIB_OUTPUT_WORD
   5966  4065		       20 1f 18 	      jsr	_Pupdate_enemy_map_bottom
   5967  4068		       60		      rts
   5968  4069
   5969  4069
   5970  4069
   5971  4069
   5972  4069
   5973  4069
   5974  4069
   5975  4069				   _Plazy_routines_end
   5976  4069
   5977  4069
   5978  4069
   5979  4069
   5980  4069
   5981  4069
   5982  4069
   5983  4069				   _Lmain
   5984  4069				   FPULL      SET	0
   5985  4069				   FPUSH      SET	1
      0  4069					      pbyte	#0
      1  4069		       a9 00		      lda	#0
      2  406b				  -	      IF	!FPUSH
      3  406b				  -	      pha
      4  406b					      ENDIF
   5987  406b				   FPULL      SET	1
   5988  406b				   FPUSH      SET	0
      0  406b					      plb2var	_init_charset.animphase
      1  406b				  -	      IF	!FPULL
      2  406b				  -	      pla
      3  406b					      ENDIF
      4  406b		       8d d6 4a 	      sta	_init_charset.animphase
   5990  406e		       20 71 15 	      jsr	_Pinit_charset
   5991  4071		       20 75 16 	      jsr	_Pinit_sprites
   5992  4071				   FPULL      SET	0
   5993  4071				   FPUSH      SET	1
      0  4074					      pbyte	#24
      1  4074		       a9 18		      lda	#24
      2  4076				  -	      IF	!FPUSH
      3  4076				  -	      pha
      4  4076					      ENDIF
   5995  4076				   FPULL      SET	1
   5996  4076				   FPUSH      SET	0
      0  4076					      pokeb_const_addr	#53272
      1  4076
      2  4076
      3  4076
      4  4076		       d0 18	   .ad	      EQU	#53272
      5  4076				  -	      IF	!FPULL
      6  4076				  -	      pla
      7  4076					      ENDIF
      8  4076		       8d 18 d0 	      sta	.ad
   5998  4076				   FPULL      SET	0
   5999  4076				   FPUSH      SET	1
      0  4079					      pbyte	#0
      1  4079		       a9 00		      lda	#0
      2  407b				  -	      IF	!FPUSH
      3  407b				  -	      pha
      4  407b					      ENDIF
   6001  407b				   FPULL      SET	1
   6002  407b				   FPUSH      SET	0
      0  407b					      pokeb_const_addr	#53280
      1  407b
      2  407b
      3  407b
      4  407b		       d0 20	   .ad	      EQU	#53280
      5  407b				  -	      IF	!FPULL
      6  407b				  -	      pla
      7  407b					      ENDIF
      8  407b		       8d 20 d0 	      sta	.ad
   6004  407b				   FPULL      SET	0
   6005  407b				   FPUSH      SET	1
      0  407e					      pbyte	#0
      1  407e		       a9 00		      lda	#0
      2  4080				  -	      IF	!FPUSH
      3  4080				  -	      pha
      4  4080					      ENDIF
   6007  4080				   FPULL      SET	1
   6008  4080				   FPUSH      SET	0
      0  4080					      pokeb_const_addr	#53281
      1  4080
      2  4080
      3  4080
      4  4080		       d0 21	   .ad	      EQU	#53281
      5  4080				  -	      IF	!FPULL
      6  4080				  -	      pla
      7  4080					      ENDIF
      8  4080		       8d 21 d0 	      sta	.ad
   6010  4083		       78		      sei
   6011  4084		       20 d6 0d 	      jsr	_Pload_level
   6012  4087		       20 4f 10 	      jsr	_Pdraw_scene
   6013  408a		       20 c9 46 	      jsr	_Lfirst_start
   6014  408d
   6015  408d
   6016  408d
   6017  408d
   6018  408d				   _Lset
   6019  408d				   FPULL      SET	0
      0  408d					      pbyte	#0
      1  408d		       a9 00		      lda	#0
      2  408f					      IF	!FPUSH
      3  408f		       48		      pha
      4  4090					      ENDIF
      0  4090					      btow
      1  4090		       a9 00		      lda	#$00
      2  4092		       48		      pha
      0  4093					      plw2var	_score
      1  4093					      IF	!FPULL
      2  4093		       68		      pla
      3  4094		       8d bc 4a 	      sta	_score+1
      4  4097		       68		      pla
      5  4098		       8d bb 4a 	      sta	_score
      6  409b				  -	      ELSE
      7  409b				  -	      sta	_score
      8  409b				  -	      sty	_score+1
      9  409b					      ENDIF
   6023  409b				   FPUSH      SET	1
      0  409b					      pbyte	#3
      1  409b		       a9 03		      lda	#3
      2  409d				  -	      IF	!FPUSH
      3  409d				  -	      pha
      4  409d					      ENDIF
   6025  409d				   FPULL      SET	1
   6026  409d				   FPUSH      SET	0
      0  409d					      plb2var	_lives
      1  409d				  -	      IF	!FPULL
      2  409d				  -	      pla
      3  409d					      ENDIF
      4  409d		       8d bd 4a 	      sta	_lives
   6028  409d				   FPULL      SET	0
   6029  409d				   FPUSH      SET	1
      0  40a0					      pbyte	#15
      1  40a0		       a9 0f		      lda	#15
      2  40a2				  -	      IF	!FPUSH
      3  40a2				  -	      pha
      4  40a2					      ENDIF
   6031  40a2				   FPULL      SET	1
   6032  40a2				   FPUSH      SET	0
      0  40a2					      plb2var	_game_speed
      1  40a2				  -	      IF	!FPULL
      2  40a2				  -	      pla
      3  40a2					      ENDIF
      4  40a2		       8d bf 4a 	      sta	_game_speed
   6034  40a5				   _Llevel
   6035  40a5		       20 d6 0d 	      jsr	_Pload_level
   6036  40a8		       20 4f 10 	      jsr	_Pdraw_scene
   6037  40a8				   FPULL      SET	0
   6038  40a8				   FPUSH      SET	1
      0  40ab					      pbyte	#60
      1  40ab		       a9 3c		      lda	#60
      2  40ad				  -	      IF	!FPUSH
      3  40ad				  -	      pha
      4  40ad					      ENDIF
   6040  40ad				   FPULL      SET	1
   6041  40ad				   FPUSH      SET	0
      0  40ad					      plb2var	_enemies_alive
      1  40ad				  -	      IF	!FPULL
      2  40ad				  -	      pla
      3  40ad					      ENDIF
      4  40ad		       8d c0 4a 	      sta	_enemies_alive
   6043  40ad				   FPULL      SET	0
   6044  40ad				   FPUSH      SET	1
      0  40b0					      pbyte	#8
      1  40b0		       a9 08		      lda	#8
      2  40b2				  -	      IF	!FPUSH
      3  40b2				  -	      pha
      4  40b2					      ENDIF
   6046  40b2				   FPULL      SET	1
   6047  40b2				   FPUSH      SET	0
      0  40b2					      plb2var	_enemy_posx
      1  40b2				  -	      IF	!FPULL
      2  40b2				  -	      pla
      3  40b2					      ENDIF
      4  40b2		       8d af 4a 	      sta	_enemy_posx
   6049  40b2				   FPULL      SET	0
   6050  40b2				   FPUSH      SET	1
      0  40b5					      pbyte	#0
      1  40b5		       a9 00		      lda	#0
      2  40b7				  -	      IF	!FPUSH
      3  40b7				  -	      pha
      4  40b7					      ENDIF
   6052  40b7				   FPULL      SET	1
   6053  40b7				   FPUSH      SET	0
      0  40b7					      plb2var	_enemy_posy
      1  40b7				  -	      IF	!FPULL
      2  40b7				  -	      pla
      3  40b7					      ENDIF
      4  40b7		       8d b0 4a 	      sta	_enemy_posy
   6055  40b7				   FPULL      SET	0
   6056  40b7				   FPUSH      SET	1
      0  40ba					      pbyte	#13
      1  40ba		       a9 0d		      lda	#13
      2  40bc				  -	      IF	!FPUSH
      3  40bc				  -	      pha
      4  40bc					      ENDIF
   6058  40bc				   FPULL      SET	1
   6059  40bc				   FPUSH      SET	0
      0  40bc					      plb2var	_bottom_row
      1  40bc				  -	      IF	!FPULL
      2  40bc				  -	      pla
      3  40bc					      ENDIF
      4  40bc		       8d b1 4a 	      sta	_bottom_row
   6061  40bc				   FPULL      SET	0
   6062  40bc				   FPUSH      SET	1
      0  40bf					      pbyte	#1
      1  40bf		       a9 01		      lda	#1
      2  40c1				  -	      IF	!FPUSH
      3  40c1				  -	      pha
      4  40c1					      ENDIF
   6064  40c1				   FPULL      SET	1
   6065  40c1				   FPUSH      SET	0
      0  40c1					      plb2var	_enemy_dir
      1  40c1				  -	      IF	!FPULL
      2  40c1				  -	      pla
      3  40c1					      ENDIF
      4  40c1		       8d b2 4a 	      sta	_enemy_dir
   6067  40c1				   FPULL      SET	0
      0  40c4					      pbyte	#176
      1  40c4		       a9 b0		      lda	#176
      2  40c6					      IF	!FPUSH
      3  40c6		       48		      pha
      4  40c7					      ENDIF
      0  40c7					      btow
      1  40c7		       a9 00		      lda	#$00
      2  40c9		       48		      pha
      0  40ca					      plw2var	_ship_pos
      1  40ca					      IF	!FPULL
      2  40ca		       68		      pla
      3  40cb		       8d b4 4a 	      sta	_ship_pos+1
      4  40ce		       68		      pla
      5  40cf		       8d b3 4a 	      sta	_ship_pos
      6  40d2				  -	      ELSE
      7  40d2				  -	      sta	_ship_pos
      8  40d2				  -	      sty	_ship_pos+1
      9  40d2					      ENDIF
   6071  40d2				   FPUSH      SET	1
      0  40d2					      pbyte	#0
      1  40d2		       a9 00		      lda	#0
      2  40d4				  -	      IF	!FPUSH
      3  40d4				  -	      pha
      4  40d4					      ENDIF
   6073  40d4				   FPULL      SET	1
   6074  40d4				   FPUSH      SET	0
      0  40d4					      plb2var	_bullet_on
      1  40d4				  -	      IF	!FPULL
      2  40d4				  -	      pla
      3  40d4					      ENDIF
      4  40d4		       8d b5 4a 	      sta	_bullet_on
   6076  40d4				   FPULL      SET	0
      0  40d7					      pbyte	#0
      1  40d7		       a9 00		      lda	#0
      2  40d9					      IF	!FPUSH
      3  40d9		       48		      pha
      4  40da					      ENDIF
      0  40da					      btow
      1  40da		       a9 00		      lda	#$00
      2  40dc		       48		      pha
      0  40dd					      plw2var	_bullet_posx
      1  40dd					      IF	!FPULL
      2  40dd		       68		      pla
      3  40de		       8d b7 4a 	      sta	_bullet_posx+1
      4  40e1		       68		      pla
      5  40e2		       8d b6 4a 	      sta	_bullet_posx
      6  40e5				  -	      ELSE
      7  40e5				  -	      sta	_bullet_posx
      8  40e5				  -	      sty	_bullet_posx+1
      9  40e5					      ENDIF
   6080  40e5				   FPUSH      SET	1
      0  40e5					      pbyte	#0
      1  40e5		       a9 00		      lda	#0
      2  40e7				  -	      IF	!FPUSH
      3  40e7				  -	      pha
      4  40e7					      ENDIF
   6082  40e7				   FPULL      SET	1
   6083  40e7				   FPUSH      SET	0
      0  40e7					      plb2var	_bullet_posy
      1  40e7				  -	      IF	!FPULL
      2  40e7				  -	      pla
      3  40e7					      ENDIF
      4  40e7		       8d b8 4a 	      sta	_bullet_posy
   6085  40e7				   FPULL      SET	0
      0  40ea					      pbyte	#0
      1  40ea		       a9 00		      lda	#0
      2  40ec					      IF	!FPUSH
      3  40ec		       48		      pha
      4  40ed					      ENDIF
      0  40ed					      btow
      1  40ed		       a9 00		      lda	#$00
      2  40ef		       48		      pha
      0  40f0					      plw2var	_last_killed_enemy
      1  40f0					      IF	!FPULL
      2  40f0		       68		      pla
      3  40f1		       8d ba 4a 	      sta	_last_killed_enemy+1
      4  40f4		       68		      pla
      5  40f5		       8d b9 4a 	      sta	_last_killed_enemy
      6  40f8				  -	      ELSE
      7  40f8				  -	      sta	_last_killed_enemy
      8  40f8				  -	      sty	_last_killed_enemy+1
      9  40f8					      ENDIF
      0  40f8					      decb	_game_speed
      1  40f8		       ce bf 4a 	      dec	_game_speed
   6090  40f8				   FPUSH      SET	1
      0  40fb					      pbvar	_game_speed
      0  40fb					      pbyte	_game_speed
      1  40fb		       ad bf 4a 	      lda	_game_speed
      2  40fe				  -	      IF	!FPUSH
      3  40fe				  -	      pha
      4  40fe					      ENDIF
   6092  40fe				   FPULL      SET	1
   6093  40fe				   FPUSH      SET	0
      0  40fe					      plb2var	_speed
      1  40fe				  -	      IF	!FPULL
      2  40fe				  -	      pla
      3  40fe					      ENDIF
      4  40fe		       8d be 4a 	      sta	_speed
   6095  40fe				   FPULL      SET	0
   6096  40fe				   FPUSH      SET	1
      0  4101					      pbyte	#60
      1  4101		       a9 3c		      lda	#60
      2  4103				  -	      IF	!FPUSH
      3  4103				  -	      pha
      4  4103					      ENDIF
   6098  4103				   FPULL      SET	1
   6099  4103				   FPUSH      SET	0
      0  4103					      plb2var	_enemies_alive
      1  4103				  -	      IF	!FPULL
      2  4103				  -	      pla
      3  4103					      ENDIF
      4  4103		       8d c0 4a 	      sta	_enemies_alive
   6101  4103				   FPULL      SET	0
   6102  4103				   FPUSH      SET	1
      0  4106					      pbyte	#210
      1  4106		       a9 d2		      lda	#210
      2  4108				  -	      IF	!FPUSH
      3  4108				  -	      pha
      4  4108					      ENDIF
   6104  4108				   FPULL      SET	1
   6105  4108				   FPUSH      SET	0
      0  4108					      plb2var	_scroll_bottom_limit
      1  4108				  -	      IF	!FPULL
      2  4108				  -	      pla
      3  4108					      ENDIF
      4  4108		       8d c1 4a 	      sta	_scroll_bottom_limit
   6107  4108				   FPULL      SET	0
   6108  4108				   FPUSH      SET	1
      0  410b					      pword	#344
      1  410b				  -	      IF	!FPUSH
      2  410b				  -	      lda	#<#344
      3  410b				  -	      pha
      4  410b				  -	      lda	#>#344
      5  410b				  -	      pha
      6  410b					      ELSE
      7  410b		       a9 58		      lda	#<#344
      8  410d		       a0 01		      ldy	#>#344
      9  410f					      ENDIF
   6110  410f				   FPULL      SET	1
   6111  410f				   FPUSH      SET	0
      0  410f					      plw2var	_enemy_map_length
      1  410f				  -	      IF	!FPULL
      2  410f				  -	      pla
      3  410f				  -	      sta	_enemy_map_length+1
      4  410f				  -	      pla
      5  410f				  -	      sta	_enemy_map_length
      6  410f					      ELSE
      7  410f		       8d c2 4a 	      sta	_enemy_map_length
      8  4112		       8c c3 4a 	      sty	_enemy_map_length+1
      9  4115					      ENDIF
   6113  4115				   FPULL      SET	0
   6114  4115				   FPUSH      SET	1
      0  4115					      pword	#370
      1  4115				  -	      IF	!FPUSH
      2  4115				  -	      lda	#<#370
      3  4115				  -	      pha
      4  4115				  -	      lda	#>#370
      5  4115				  -	      pha
      6  4115					      ELSE
      7  4115		       a9 72		      lda	#<#370
      8  4117		       a0 01		      ldy	#>#370
      9  4119					      ENDIF
   6116  4119				   FPULL      SET	1
   6117  4119				   FPUSH      SET	0
      0  4119					      plw2var	_ufo_pos
      1  4119				  -	      IF	!FPULL
      2  4119				  -	      pla
      3  4119				  -	      sta	_ufo_pos+1
      4  4119				  -	      pla
      5  4119				  -	      sta	_ufo_pos
      6  4119					      ELSE
      7  4119		       8d c7 4a 	      sta	_ufo_pos
      8  411c		       8c c8 4a 	      sty	_ufo_pos+1
      9  411f					      ENDIF
   6119  411f				   FPULL      SET	0
   6120  411f				   FPUSH      SET	1
      0  411f					      pbyte	#0
      1  411f		       a9 00		      lda	#0
      2  4121				  -	      IF	!FPUSH
      3  4121				  -	      pha
      4  4121					      ENDIF
   6122  4121				   FPULL      SET	1
   6123  4121				   FPUSH      SET	0
      0  4121					      plb2var	_ufo_on
      1  4121				  -	      IF	!FPULL
      2  4121				  -	      pla
      3  4121					      ENDIF
      4  4121		       8d c6 4a 	      sta	_ufo_on
   6125  4121				   FPULL      SET	0
   6126  4121				   FPUSH      SET	1
      0  4124					      pbyte	#0
      1  4124		       a9 00		      lda	#0
      2  4126				  -	      IF	!FPUSH
      3  4126				  -	      pha
      4  4126					      ENDIF
   6128  4126				   FPULL      SET	1
   6129  4126				   FPUSH      SET	0
      0  4126					      plb2var	_ufo_hit
      1  4126				  -	      IF	!FPULL
      2  4126				  -	      pla
      3  4126					      ENDIF
      4  4126		       8d c9 4a 	      sta	_ufo_hit
   6131  4126				   FPULL      SET	0
   6132  4126				   FPUSH      SET	1
      0  4129					      pword	#500
      1  4129				  -	      IF	!FPUSH
      2  4129				  -	      lda	#<#500
      3  4129				  -	      pha
      4  4129				  -	      lda	#>#500
      5  4129				  -	      pha
      6  4129					      ELSE
      7  4129		       a9 f4		      lda	#<#500
      8  412b		       a0 01		      ldy	#>#500
      9  412d					      ENDIF
   6134  412d				   FPULL      SET	1
   6135  412d				   FPUSH      SET	0
      0  412d					      plw2var	_framecount_ufo
      1  412d				  -	      IF	!FPULL
      2  412d				  -	      pla
      3  412d				  -	      sta	_framecount_ufo+1
      4  412d				  -	      pla
      5  412d				  -	      sta	_framecount_ufo
      6  412d					      ELSE
      7  412d		       8d ca 4a 	      sta	_framecount_ufo
      8  4130		       8c cb 4a 	      sty	_framecount_ufo+1
      9  4133					      ENDIF
   6137  4133				   FPULL      SET	0
      0  4133					      pbyte	#246
      1  4133		       a9 f6		      lda	#246
      2  4135					      IF	!FPUSH
      3  4135		       48		      pha
      4  4136					      ENDIF
   6139  4136				   FPUSH      SET	1
      0  4136					      pword	#2046
      1  4136				  -	      IF	!FPUSH
      2  4136				  -	      lda	#<#2046
      3  4136				  -	      pha
      4  4136				  -	      lda	#>#2046
      5  4136				  -	      pha
      6  4136					      ELSE
      7  4136		       a9 fe		      lda	#<#2046
      8  4138		       a0 07		      ldy	#>#2046
      9  413a					      ENDIF
   6141  413a				   FPULL      SET	1
   6142  413a				   FPUSH      SET	0
      0  413a					      pokeb
      1  413a				  -	      IF	!FPULL
      2  413a				  -	      pla
      3  413a				  -	      sta	.selfmod_code+2
      4  413a				  -	      pla
      5  413a				  -	      sta	.selfmod_code+1
      6  413a					      ELSE
      7  413a		       8d 42 41 	      sta	.selfmod_code+1
      8  413d		       8c 43 41 	      sty	.selfmod_code+2
      9  4140					      ENDIF
     10  4140		       68		      pla
     11  4141				   .selfmod_code
     12  4141		       8d 00 00 	      sta.w	$0000
   6144  4141				   FPULL      SET	0
      0  4144					      pbyte	#0
      1  4144		       a9 00		      lda	#0
      2  4146					      IF	!FPUSH
      3  4146		       48		      pha
      4  4147					      ENDIF
   6146  4147				   FPUSH      SET	1
      0  4147					      pword	#53260
      1  4147				  -	      IF	!FPUSH
      2  4147				  -	      lda	#<#53260
      3  4147				  -	      pha
      4  4147				  -	      lda	#>#53260
      5  4147				  -	      pha
      6  4147					      ELSE
      7  4147		       a9 0c		      lda	#<#53260
      8  4149		       a0 d0		      ldy	#>#53260
      9  414b					      ENDIF
   6148  414b				   FPULL      SET	1
   6149  414b				   FPUSH      SET	0
      0  414b					      pokeb
      1  414b				  -	      IF	!FPULL
      2  414b				  -	      pla
      3  414b				  -	      sta	.selfmod_code+2
      4  414b				  -	      pla
      5  414b				  -	      sta	.selfmod_code+1
      6  414b					      ELSE
      7  414b		       8d 53 41 	      sta	.selfmod_code+1
      8  414e		       8c 54 41 	      sty	.selfmod_code+2
      9  4151					      ENDIF
     10  4151		       68		      pla
     11  4152				   .selfmod_code
     12  4152		       8d 00 00 	      sta.w	$0000
   6151  4155				   _Lgame
   6152  4155				   FPULL      SET	0
   6153  4155				   FPUSH      SET	1
      0  4155					      pbyte	#0
      1  4155		       a9 00		      lda	#0
      2  4157				  -	      IF	!FPUSH
      3  4157				  -	      pha
      4  4157					      ENDIF
   6155  4157				   FPULL      SET	1
   6156  4157				   FPUSH      SET	0
      0  4157					      plb2var	_framecount
      1  4157				  -	      IF	!FPULL
      2  4157				  -	      pla
      3  4157					      ENDIF
      4  4157		       8d d7 4a 	      sta	_framecount
   6158  4157				   FPULL      SET	0
   6159  4157				   FPUSH      SET	1
      0  415a					      pbyte	#0
      1  415a		       a9 00		      lda	#0
      2  415c				  -	      IF	!FPUSH
      3  415c				  -	      pha
      4  415c					      ENDIF
   6161  415c				   FPULL      SET	1
   6162  415c				   FPUSH      SET	0
      0  415c					      plb2var	_framecount_shooting
      1  415c				  -	      IF	!FPULL
      2  415c				  -	      pla
      3  415c					      ENDIF
      4  415c		       8d f2 4a 	      sta	_framecount_shooting
   6164  415c				   FPULL      SET	0
   6165  415c				   FPUSH      SET	1
      0  415f					      pbyte	#0
      1  415f		       a9 00		      lda	#0
      2  4161				  -	      IF	!FPUSH
      3  4161				  -	      pha
      4  4161					      ENDIF
   6167  4161				   FPULL      SET	1
   6168  4161				   FPUSH      SET	0
      0  4161					      plb2var	_event
      1  4161				  -	      IF	!FPULL
      2  4161				  -	      pla
      3  4161					      ENDIF
      4  4161		       8d f3 4a 	      sta	_event
   6170  4161				   FPULL      SET	0
      0  4164					      pbyte	#176
      1  4164		       a9 b0		      lda	#176
      2  4166					      IF	!FPUSH
      3  4166		       48		      pha
      4  4167					      ENDIF
      0  4167					      btow
      1  4167		       a9 00		      lda	#$00
      2  4169		       48		      pha
      0  416a					      plw2var	_ship_pos
      1  416a					      IF	!FPULL
      2  416a		       68		      pla
      3  416b		       8d b4 4a 	      sta	_ship_pos+1
      4  416e		       68		      pla
      5  416f		       8d b3 4a 	      sta	_ship_pos
      6  4172				  -	      ELSE
      7  4172				  -	      sta	_ship_pos
      8  4172				  -	      sty	_ship_pos+1
      9  4172					      ENDIF
      0  4172					      pwvar	_ship_pos
      1  4172					      IF	!FPUSH
      2  4172		       ad b3 4a 	      lda	_ship_pos
      3  4175		       48		      pha
      4  4176		       ad b4 4a 	      lda	_ship_pos+1
      5  4179		       48		      pha
      6  417a				  -	      ELSE
      7  417a				  -	      lda	_ship_pos
      8  417a				  -	      ldy	_ship_pos+1
      9  417a					      ENDIF
   6175  417a				   FPUSH      SET	1
      0  417a					      pword	#53248
      1  417a				  -	      IF	!FPUSH
      2  417a				  -	      lda	#<#53248
      3  417a				  -	      pha
      4  417a				  -	      lda	#>#53248
      5  417a				  -	      pha
      6  417a					      ELSE
      7  417a		       a9 00		      lda	#<#53248
      8  417c		       a0 d0		      ldy	#>#53248
      9  417e					      ENDIF
   6177  417e				   FPULL      SET	1
   6178  417e				   FPUSH      SET	0
      0  417e					      pokew
      1  417e				  -	      IF	!FPULL
      2  417e				  -	      pla
      3  417e				  -	      sta	.selfmod_code+2
      4  417e				  -	      pla
      5  417e				  -	      sta	.selfmod_code+1
      6  417e					      ELSE
      7  417e		       8d 87 41 	      sta	.selfmod_code+1
      8  4181		       8c 88 41 	      sty	.selfmod_code+2
      9  4184					      ENDIF
     10  4184		       68		      pla
     11  4185		       68		      pla
     12  4186				   .selfmod_code
     13  4186		       8d 00 00 	      sta.w	$0000
   6180  4186				   FPULL      SET	0
      0  4189					      pwvar	_ship_pos
      1  4189					      IF	!FPUSH
      2  4189		       ad b3 4a 	      lda	_ship_pos
      3  418c		       48		      pha
      4  418d		       ad b4 4a 	      lda	_ship_pos+1
      5  4190		       48		      pha
      6  4191				  -	      ELSE
      7  4191				  -	      lda	_ship_pos
      8  4191				  -	      ldy	_ship_pos+1
      9  4191					      ENDIF
      0  4191					      pbyte	#255
      1  4191		       a9 ff		      lda	#255
      2  4193					      IF	!FPUSH
      3  4193		       48		      pha
      4  4194					      ENDIF
      0  4194					      btow
      1  4194		       a9 00		      lda	#$00
      2  4196		       48		      pha
   6184  4196				   FPUSH      SET	1
      0  4197					      cmpwgt
      1  4197		       ba		      tsx
      2  4198		       bd 02 01 	      lda.wx	stack+2
      3  419b		       dd 04 01 	      cmp.wx	stack+4
      4  419e		       bd 01 01 	      lda.wx	stack+1
      5  41a1		       fd 03 01 	      sbc.wx	stack+3
      6  41a4		       30 0a		      bmi	.pht
      7  41a6		       e8		      inx
      8  41a7		       e8		      inx
      9  41a8		       e8		      inx
     10  41a9		       e8		      inx
     11  41aa		       9a		      txs
      0  41ab					      pzero
      1  41ab		       a9 00		      lda	#$00
      2  41ad				  -	      IF	!FPUSH
      3  41ad				  -	      pha
      4  41ad					      ENDIF
     13  41ad				  -	      IF	!FPUSH
     14  41ad				  -	      jmp	*+11
     15  41ad					      ELSE
     16  41ad		       4c b7 41 	      jmp	*+10
     17  41b0					      ENDIF
     18  41b0		       e8	   .pht       inx
     19  41b1		       e8		      inx
     20  41b2		       e8		      inx
     21  41b3		       e8		      inx
     22  41b4		       9a		      txs
      0  41b5					      pone
      1  41b5		       a9 01		      lda	#$01
      2  41b7				  -	      IF	!FPUSH
      3  41b7				  -	      pha
      4  41b7					      ENDIF
   6186  41b7				   FPULL      SET	1
   6187  41b7				   FPUSH      SET	0
      0  41b7					      cond_stmt	_EI_29, _EL_29
      1  41b7				  -	      IF	!FPULL
      2  41b7				  -	      pla
      3  41b7					      ENDIF
      4  41b7		       d0 03		      bne	*+5
      5  41b9					      IFCONST	_EL_29
      6  41b9		       4c e3 41 	      jmp	_EL_29
      7  41bc				  -	      ELSE
      8  41bc				  -	      jmp	_EI_29
      9  41bc					      ENDIF
   6189  41bc				   FPULL      SET	0
   6190  41bc				   FPUSH      SET	1
      0  41bc					      pword	#53264
      1  41bc				  -	      IF	!FPUSH
      2  41bc				  -	      lda	#<#53264
      3  41bc				  -	      pha
      4  41bc				  -	      lda	#>#53264
      5  41bc				  -	      pha
      6  41bc					      ELSE
      7  41bc		       a9 10		      lda	#<#53264
      8  41be		       a0 d0		      ldy	#>#53264
      9  41c0					      ENDIF
   6192  41c0				   FPULL      SET	1
   6193  41c0				   FPUSH      SET	0
      0  41c0					      peekb
      1  41c0				  -	      IF	!FPULL
      2  41c0				  -	      pla
      3  41c0				  -	      sta	.selfmod_code+2
      4  41c0				  -	      pla
      5  41c0				  -	      sta	.selfmod_code+1
      6  41c0					      ELSE
      7  41c0		       8d c7 41 	      sta	.selfmod_code+1
      8  41c3		       8c c8 41 	      sty	.selfmod_code+2
      9  41c6					      ENDIF
     10  41c6				   .selfmod_code
     11  41c6		       ad 00 00 	      lda.w	$0000
     12  41c9					      IF	!FPUSH
     13  41c9		       48		      pha
     14  41ca					      ENDIF
   6195  41ca				   FPULL      SET	0
   6196  41ca				   FPUSH      SET	1
      0  41ca					      pbyte	#1
      1  41ca		       a9 01		      lda	#1
      2  41cc				  -	      IF	!FPUSH
      3  41cc				  -	      pha
      4  41cc					      ENDIF
   6198  41cc				   FPULL      SET	1
   6199  41cc				   FPUSH      SET	0
      0  41cc					      orb
      1  41cc				  -	      IF	!FPULL
      2  41cc				  -	      pla
      3  41cc					      ENDIF
      4  41cc		       85 fc		      sta	R1
      5  41ce		       68		      pla
      6  41cf		       05 fc		      ora	R1
      7  41d1					      IF	!FPUSH
      8  41d1		       48		      pha
      9  41d2					      ENDIF
   6201  41d2				   FPULL      SET	0
   6202  41d2				   FPUSH      SET	1
      0  41d2					      pword	#53264
      1  41d2				  -	      IF	!FPUSH
      2  41d2				  -	      lda	#<#53264
      3  41d2				  -	      pha
      4  41d2				  -	      lda	#>#53264
      5  41d2				  -	      pha
      6  41d2					      ELSE
      7  41d2		       a9 10		      lda	#<#53264
      8  41d4		       a0 d0		      ldy	#>#53264
      9  41d6					      ENDIF
   6204  41d6				   FPULL      SET	1
   6205  41d6				   FPUSH      SET	0
      0  41d6					      pokeb
      1  41d6				  -	      IF	!FPULL
      2  41d6				  -	      pla
      3  41d6				  -	      sta	.selfmod_code+2
      4  41d6				  -	      pla
      5  41d6				  -	      sta	.selfmod_code+1
      6  41d6					      ELSE
      7  41d6		       8d de 41 	      sta	.selfmod_code+1
      8  41d9		       8c df 41 	      sty	.selfmod_code+2
      9  41dc					      ENDIF
     10  41dc		       68		      pla
     11  41dd				   .selfmod_code
     12  41dd		       8d 00 00 	      sta.w	$0000
   6207  41e0		       4c f1 41 	      jmp	_EI_29
   6208  41e3				   _EL_29
   6209  41e3				   FPULL      SET	0
      0  41e3					      peekb_const_addr	#53264
      1  41e3
      2  41e3
      3  41e3
      4  41e3		       d0 10	   .ad	      EQU	#53264
      5  41e3		       ad 10 d0 	      lda	.ad
      6  41e6					      IF	!FPUSH
      7  41e6		       48		      pha
      8  41e7					      ENDIF
   6211  41e7				   FPUSH      SET	1
      0  41e7					      pbyte	#254
      1  41e7		       a9 fe		      lda	#254
      2  41e9				  -	      IF	!FPUSH
      3  41e9				  -	      pha
      4  41e9					      ENDIF
   6213  41e9				   FPULL      SET	1
      0  41e9					      andb
      1  41e9				  -	      IF	!FPULL
      2  41e9				  -	      pla
      3  41e9					      ENDIF
      4  41e9		       85 fc		      sta	R1
      5  41eb		       68		      pla
      6  41ec		       25 fc		      and	R1
      7  41ee				  -	      IF	!FPUSH
      8  41ee				  -	      pha
      9  41ee					      ENDIF
   6215  41ee				   FPUSH      SET	0
      0  41ee					      pokeb_const_addr	#53264
      1  41ee
      2  41ee
      3  41ee
      4  41ee		       d0 10	   .ad	      EQU	#53264
      5  41ee				  -	      IF	!FPULL
      6  41ee				  -	      pla
      7  41ee					      ENDIF
      8  41ee		       8d 10 d0 	      sta	.ad
   6217  41f1
   6218  41f1
   6219  41f1
   6220  41f1
   6221  41f1				   _EI_29
   6222  41f1				   FPULL      SET	0
   6223  41f1				   FPUSH      SET	1
      0  41f1					      pbyte	#0
      1  41f1		       a9 00		      lda	#0
      2  41f3				  -	      IF	!FPUSH
      3  41f3				  -	      pha
      4  41f3					      ENDIF
   6225  41f3				   FPULL      SET	1
   6226  41f3				   FPUSH      SET	0
      0  41f3					      plb2var	_i
      1  41f3				  -	      IF	!FPULL
      2  41f3				  -	      pla
      3  41f3					      ENDIF
      4  41f3		       8d f4 4a 	      sta	_i
   6228  41f3				   FPULL      SET	0
      0  41f6					      pbyte	#15
      1  41f6		       a9 0f		      lda	#15
      2  41f8					      IF	!FPUSH
      3  41f8		       48		      pha
      4  41f9					      ENDIF
      0  41f9					      for
      1  41f9
      2  41f9
      3  41f9				   .addr
      4  41f9		       a9 f9		      lda	#<.addr
      5  41fb		       48		      pha
      6  41fc		       a9 41		      lda	#>.addr
      7  41fe		       48		      pha
   6231  41fe				   FPUSH      SET	1
      0  41ff					      opt_pbyte_pbyte_and	_i, #1
      1  41ff
      2  41ff
      3  41ff
      4  41ff
      5  41ff
      6  41ff		       ad f4 4a 	      lda	_i
      7  4202		       29 01		      and	#1
      8  4204				  -	      IF	!FPUSH
      9  4204				  -	      pha
     10  4204					      ENDIF
   6233  4204				   FPULL      SET	1
   6234  4204				   FPUSH      SET	0
      0  4204					      pokeb_const_addr	#53269
      1  4204
      2  4204
      3  4204
      4  4204		       d0 15	   .ad	      EQU	#53269
      5  4204				  -	      IF	!FPULL
      6  4204				  -	      pla
      7  4204					      ENDIF
      8  4204		       8d 15 d0 	      sta	.ad
   6236  4204				   FPULL      SET	0
   6237  4204				   FPUSH      SET	1
      0  4207					      pbyte	#0
      1  4207		       a9 00		      lda	#0
      2  4209				  -	      IF	!FPUSH
      3  4209				  -	      pha
      4  4209					      ENDIF
   6239  4209				   FPULL      SET	1
   6240  4209				   FPUSH      SET	0
      0  4209					      plb2var	_j
      1  4209				  -	      IF	!FPULL
      2  4209				  -	      pla
      3  4209					      ENDIF
      4  4209		       8d f5 4a 	      sta	_j
   6242  4209				   FPULL      SET	0
      0  420c					      pbyte	#25
      1  420c		       a9 19		      lda	#25
      2  420e					      IF	!FPUSH
      3  420e		       48		      pha
      4  420f					      ENDIF
      0  420f					      for
      1  420f
      2  420f
      3  420f				   .addr
      4  420f		       a9 0f		      lda	#<.addr
      5  4211		       48		      pha
      6  4212		       a9 42		      lda	#>.addr
      7  4214		       48		      pha
   6245  4214				   FPUSH      SET	1
      0  4215					      pbyte	#0
      1  4215		       a9 00		      lda	#0
      2  4217				  -	      IF	!FPUSH
      3  4217				  -	      pha
      4  4217					      ENDIF
   6247  4217				   FPULL      SET	1
   6248  4217				   FPUSH      SET	0
      0  4217					      watchc	53266
      1  4217				  -	      IF	!FPULL
      2  4217				  -	      pla
      3  4217					      ENDIF
      4  4217				   .again
      5  4217		       cd 12 d0 	      cmp	53266
      6  421a		       d0 fb		      bne	.again
      0  421c					      nextb	_j
      1  421c
      2  421c		       ee f5 4a 	      inc	_j
      3  421f
      4  421f		       f0 15		      beq	.end
      5  4221				   .skip
      6  4221
      7  4221		       68		      pla
      8  4222		       8d 35 42 	      sta	.selfmod_code+2
      9  4225		       68		      pla
     10  4226		       8d 34 42 	      sta	.selfmod_code+1
     11  4229
     12  4229		       68		      pla
     13  422a		       cd f5 4a 	      cmp	_j
     14  422d		       b0 03		      bcs	.jump_back
     15  422f		       4c 36 42 	      jmp	.end
     16  4232				   .jump_back
     17  4232
     18  4232		       48		      pha
     19  4233				   .selfmod_code
     20  4233		       4c 00 00 	      jmp	$0000
     21  4236				   .end
      0  4236					      nextb	_i
      1  4236
      2  4236		       ee f4 4a 	      inc	_i
      3  4239
      4  4239		       f0 15		      beq	.end
      5  423b				   .skip
      6  423b
      7  423b		       68		      pla
      8  423c		       8d 4f 42 	      sta	.selfmod_code+2
      9  423f		       68		      pla
     10  4240		       8d 4e 42 	      sta	.selfmod_code+1
     11  4243
     12  4243		       68		      pla
     13  4244		       cd f4 4a 	      cmp	_i
     14  4247		       b0 03		      bcs	.jump_back
     15  4249		       4c 50 42 	      jmp	.end
     16  424c				   .jump_back
     17  424c
     18  424c		       48		      pha
     19  424d				   .selfmod_code
     20  424d		       4c 00 00 	      jmp	$0000
     21  4250				   .end
   6252  4250				   FPULL      SET	0
   6253  4250				   FPUSH      SET	1
      0  4250					      pbyte	#65
      1  4250		       a9 41		      lda	#65
      2  4252				  -	      IF	!FPUSH
      3  4252				  -	      pha
      4  4252					      ENDIF
   6255  4252				   FPULL      SET	1
   6256  4252				   FPUSH      SET	0
      0  4252					      pokeb_const_addr	#53269
      1  4252
      2  4252
      3  4252
      4  4252		       d0 15	   .ad	      EQU	#53269
      5  4252				  -	      IF	!FPULL
      6  4252				  -	      pla
      7  4252					      ENDIF
      8  4252		       8d 15 d0 	      sta	.ad
   6258  4255
   6259  4255
   6260  4255
   6261  4255
   6262  4255				   _Lloop
   6263  4255		       20 83 35 	      jsr	_Pmove_ufo
   6264  4255				   FPULL      SET	0
   6265  4255				   FPUSH      SET	1
      0  4258					      pbyte	#50
      1  4258		       a9 32		      lda	#50
      2  425a				  -	      IF	!FPUSH
      3  425a				  -	      pha
      4  425a					      ENDIF
   6267  425a				   FPULL      SET	1
   6268  425a				   FPUSH      SET	0
      0  425a					      watchc	53266
      1  425a				  -	      IF	!FPULL
      2  425a				  -	      pla
      3  425a					      ENDIF
      4  425a				   .again
      5  425a		       cd 12 d0 	      cmp	53266
      6  425d		       d0 fb		      bne	.again
   6270  425d				   FPULL      SET	0
   6271  425d				   FPUSH      SET	1
      0  425f					      pbyte	#200
      1  425f		       a9 c8		      lda	#200
      2  4261				  -	      IF	!FPUSH
      3  4261				  -	      pha
      4  4261					      ENDIF
   6273  4261				   FPULL      SET	1
   6274  4261				   FPUSH      SET	0
      0  4261					      pokeb_const_addr	#53270
      1  4261
      2  4261
      3  4261
      4  4261		       d0 16	   .ad	      EQU	#53270
      5  4261				  -	      IF	!FPULL
      6  4261				  -	      pla
      7  4261					      ENDIF
      8  4261		       8d 16 d0 	      sta	.ad
   6276  4261				   FPULL      SET	0
   6277  4261				   FPUSH      SET	1
      0  4264					      pbyte	#58
      1  4264		       a9 3a		      lda	#58
      2  4266				  -	      IF	!FPUSH
      3  4266				  -	      pha
      4  4266					      ENDIF
   6279  4266				   FPULL      SET	1
   6280  4266				   FPUSH      SET	0
      0  4266					      watchc	53266
      1  4266				  -	      IF	!FPULL
      2  4266				  -	      pla
      3  4266					      ENDIF
      4  4266				   .again
      5  4266		       cd 12 d0 	      cmp	53266
      6  4269		       d0 fb		      bne	.again
   6282  4269				   FPULL      SET	0
   6283  4269				   FPUSH      SET	1
      0  426b					      opt_pbyte_pbyte_or	_scroll, #200
      1  426b
      2  426b
      3  426b
      4  426b
      5  426b
      6  426b		       ad ae 4a 	      lda	_scroll
      7  426e		       09 c8		      ora	#200
      8  4270				  -	      IF	!FPUSH
      9  4270				  -	      pha
     10  4270					      ENDIF
   6285  4270				   FPULL      SET	1
   6286  4270				   FPUSH      SET	0
      0  4270					      pokeb_const_addr	#53270
      1  4270
      2  4270
      3  4270
      4  4270		       d0 16	   .ad	      EQU	#53270
      5  4270				  -	      IF	!FPULL
      6  4270				  -	      pla
      7  4270					      ENDIF
      8  4270		       8d 16 d0 	      sta	.ad
   6288  4273		       20 99 34 	      jsr	_Pmove_enemy_bullets
   6289  4273				   FPULL      SET	0
   6290  4273				   FPUSH      SET	1
      0  4276					      pbvar	_scroll_bottom_limit
      0  4276					      pbyte	_scroll_bottom_limit
      1  4276		       ad c1 4a 	      lda	_scroll_bottom_limit
      2  4279				  -	      IF	!FPUSH
      3  4279				  -	      pha
      4  4279					      ENDIF
   6292  4279				   FPULL      SET	1
   6293  4279				   FPUSH      SET	0
      0  4279					      watchc	53266
      1  4279				  -	      IF	!FPULL
      2  4279				  -	      pla
      3  4279					      ENDIF
      4  4279				   .again
      5  4279		       cd 12 d0 	      cmp	53266
      6  427c		       d0 fb		      bne	.again
   6295  427c				   FPULL      SET	0
   6296  427c				   FPUSH      SET	1
      0  427e					      pbyte	#200
      1  427e		       a9 c8		      lda	#200
      2  4280				  -	      IF	!FPUSH
      3  4280				  -	      pha
      4  4280					      ENDIF
   6298  4280				   FPULL      SET	1
   6299  4280				   FPUSH      SET	0
      0  4280					      pokeb_const_addr	#53270
      1  4280
      2  4280
      3  4280
      4  4280		       d0 16	   .ad	      EQU	#53270
      5  4280				  -	      IF	!FPULL
      6  4280				  -	      pla
      7  4280					      ENDIF
      8  4280		       8d 16 d0 	      sta	.ad
      0  4283					      incb	_framecount
      1  4283		       ee d7 4a 	      inc	_framecount
      0  4286					      incb	_framecount_shooting
      1  4286		       ee f2 4a 	      inc	_framecount_shooting
      0  4289					      pbyte_pbyte_cmpbgte_cond	_framecount, _speed, _EI_65551, _EL_65551
      1  4289
      2  4289
      3  4289		       ad d7 4a 	      lda	_framecount
      4  428c		       cd be 4a 	      cmp	_speed
      5  428f		       b0 03		      bcs	*+5
      6  4291					      IFCONST	_EL_65551
      7  4291		       4c 9a 42 	      jmp	_EL_65551
      8  4294				  -	      ELSE
      9  4294				  -	      jmp	_EI_65551
     10  4294					      ENDIF
   6304  4294		       20 61 17 	      jsr	_Pmove_enemies
   6305  4297		       4c 9d 42 	      jmp	_EI_65551
   6306  429a
   6307  429a
   6308  429a
   6309  429a
   6310  429a
   6311  429a
   6312  429a				   _EL_65551
   6313  429a		       20 03 40 	      jsr	_Plazy_routines
   6314  429d
   6315  429d
   6316  429d
   6317  429d
   6318  429d
   6319  429d
   6320  429d
   6321  429d				   _EI_65551
   6322  429d				   FPULL      SET	0
      0  429d					      pbyte_pbyte_cmpbeq	_enemy_posx, #12
      1  429d
      2  429d
      3  429d
      4  429d
      5  429d
      6  429d		       ad af 4a 	      lda	_enemy_posx
      7  42a0		       c9 0c		      cmp	#12
      8  42a2		       f0 06		      beq	.true
      0  42a4					      pzero
      1  42a4		       a9 00		      lda	#$00
      2  42a6					      IF	!FPUSH
      3  42a6		       48		      pha
      4  42a7					      ENDIF
     10  42a7					      IF	!FPUSH
     11  42a7		       4c ad 42 	      jmp	*+6
     12  42aa				  -	      ELSE
     13  42aa				  -	      jmp	*+5
     14  42aa					      ENDIF
     15  42aa				   .true
      0  42aa					      pone
      1  42aa		       a9 01		      lda	#$01
      2  42ac					      IF	!FPUSH
      3  42ac		       48		      pha
      4  42ad					      ENDIF
   6324  42ad				   FPUSH      SET	1
      0  42ad					      pbyte_pbyte_cmpbeq	_enemy_dir, #1
      1  42ad
      2  42ad
      3  42ad
      4  42ad
      5  42ad
      6  42ad		       ad b2 4a 	      lda	_enemy_dir
      7  42b0		       c9 01		      cmp	#1
      8  42b2		       f0 05		      beq	.true
      0  42b4					      pzero
      1  42b4		       a9 00		      lda	#$00
      2  42b6				  -	      IF	!FPUSH
      3  42b6				  -	      pha
      4  42b6					      ENDIF
     10  42b6				  -	      IF	!FPUSH
     11  42b6				  -	      jmp	*+6
     12  42b6					      ELSE
     13  42b6		       4c bb 42 	      jmp	*+5
     14  42b9					      ENDIF
     15  42b9				   .true
      0  42b9					      pone
      1  42b9		       a9 01		      lda	#$01
      2  42bb				  -	      IF	!FPUSH
      3  42bb				  -	      pha
      4  42bb					      ENDIF
   6326  42bb				   FPULL      SET	1
      0  42bb					      andb
      1  42bb				  -	      IF	!FPULL
      2  42bb				  -	      pla
      3  42bb					      ENDIF
      4  42bb		       85 fc		      sta	R1
      5  42bd		       68		      pla
      6  42be		       25 fc		      and	R1
      7  42c0				  -	      IF	!FPUSH
      8  42c0				  -	      pha
      9  42c0					      ENDIF
   6328  42c0				   FPUSH      SET	0
      0  42c0					      cond_stmt	_EI_30, _EL_30
      1  42c0				  -	      IF	!FPULL
      2  42c0				  -	      pla
      3  42c0					      ENDIF
      4  42c0		       d0 03		      bne	*+5
      5  42c2				  -	      IFCONST	_EL_30
      6  42c2				  -	      jmp	_EL_30
      7  42c2					      ELSE
      8  42c2		       4c e3 42 	      jmp	_EI_30
      9  42c5					      ENDIF
   6330  42c5		       20 a5 14 	      jsr	_Pdshift_enemies
      0  42c8					      incb	_enemy_posy
      1  42c8		       ee b0 4a 	      inc	_enemy_posy
      0  42cb					      incb	_bottom_row
      1  42cb		       ee b1 4a 	      inc	_bottom_row
      0  42ce					      pbyte_pbyte_cmpbeq_cond	_bottom_row, #24, _EI_65552, _EL_65552
      1  42ce
      2  42ce
      3  42ce		       ad b1 4a 	      lda	_bottom_row
      4  42d1		       c9 18		      cmp	#24
      5  42d3		       f0 03		      beq	*+5
      6  42d5				  -	      IFCONST	_EL_65552
      7  42d5				  -	      jmp	_EL_65552
      8  42d5					      ELSE
      9  42d5		       4c db 42 	      jmp	_EI_65552
     10  42d8					      ENDIF
   6334  42d8		       4c 56 46 	      jmp	_Lgame_over
   6335  42db
   6336  42db
   6337  42db
   6338  42db
   6339  42db
   6340  42db
   6341  42db				   _EI_65552
   6342  42db				   FPULL      SET	0
   6343  42db				   FPUSH      SET	1
      0  42db					      pbyte	#0
      1  42db		       a9 00		      lda	#0
      2  42dd				  -	      IF	!FPUSH
      3  42dd				  -	      pha
      4  42dd					      ENDIF
   6345  42dd				   FPULL      SET	1
   6346  42dd				   FPUSH      SET	0
      0  42dd					      plb2var	_enemy_dir
      1  42dd				  -	      IF	!FPULL
      2  42dd				  -	      pla
      3  42dd					      ENDIF
      4  42dd		       8d b2 4a 	      sta	_enemy_dir
   6348  42e0		       4c 26 43 	      jmp	_Leloop
   6349  42e3				   _EI_30
   6350  42e3				   FPULL      SET	0
      0  42e3					      pbyte_pbyte_cmpbeq	_enemy_posx, #3
      1  42e3
      2  42e3
      3  42e3
      4  42e3
      5  42e3
      6  42e3		       ad af 4a 	      lda	_enemy_posx
      7  42e6		       c9 03		      cmp	#3
      8  42e8		       f0 06		      beq	.true
      0  42ea					      pzero
      1  42ea		       a9 00		      lda	#$00
      2  42ec					      IF	!FPUSH
      3  42ec		       48		      pha
      4  42ed					      ENDIF
     10  42ed					      IF	!FPUSH
     11  42ed		       4c f3 42 	      jmp	*+6
     12  42f0				  -	      ELSE
     13  42f0				  -	      jmp	*+5
     14  42f0					      ENDIF
     15  42f0				   .true
      0  42f0					      pone
      1  42f0		       a9 01		      lda	#$01
      2  42f2					      IF	!FPUSH
      3  42f2		       48		      pha
      4  42f3					      ENDIF
   6352  42f3				   FPUSH      SET	1
      0  42f3					      pbyte_pbyte_cmpbeq	_enemy_dir, #0
      1  42f3
      2  42f3
      3  42f3
      4  42f3
      5  42f3
      6  42f3		       ad b2 4a 	      lda	_enemy_dir
      7  42f6		       c9 00		      cmp	#0
      8  42f8		       f0 05		      beq	.true
      0  42fa					      pzero
      1  42fa		       a9 00		      lda	#$00
      2  42fc				  -	      IF	!FPUSH
      3  42fc				  -	      pha
      4  42fc					      ENDIF
     10  42fc				  -	      IF	!FPUSH
     11  42fc				  -	      jmp	*+6
     12  42fc					      ELSE
     13  42fc		       4c 01 43 	      jmp	*+5
     14  42ff					      ENDIF
     15  42ff				   .true
      0  42ff					      pone
      1  42ff		       a9 01		      lda	#$01
      2  4301				  -	      IF	!FPUSH
      3  4301				  -	      pha
      4  4301					      ENDIF
   6354  4301				   FPULL      SET	1
      0  4301					      andb
      1  4301				  -	      IF	!FPULL
      2  4301				  -	      pla
      3  4301					      ENDIF
      4  4301		       85 fc		      sta	R1
      5  4303		       68		      pla
      6  4304		       25 fc		      and	R1
      7  4306				  -	      IF	!FPUSH
      8  4306				  -	      pha
      9  4306					      ENDIF
   6356  4306				   FPUSH      SET	0
      0  4306					      cond_stmt	_EI_31, _EL_31
      1  4306				  -	      IF	!FPULL
      2  4306				  -	      pla
      3  4306					      ENDIF
      4  4306		       d0 03		      bne	*+5
      5  4308				  -	      IFCONST	_EL_31
      6  4308				  -	      jmp	_EL_31
      7  4308					      ELSE
      8  4308		       4c 26 43 	      jmp	_EI_31
      9  430b					      ENDIF
   6358  430b		       20 a5 14 	      jsr	_Pdshift_enemies
      0  430e					      incb	_enemy_posy
      1  430e		       ee b0 4a 	      inc	_enemy_posy
      0  4311					      incb	_bottom_row
      1  4311		       ee b1 4a 	      inc	_bottom_row
      0  4314					      pbyte_pbyte_cmpbeq_cond	_bottom_row, #23, _EI_65553, _EL_65553
      1  4314
      2  4314
      3  4314		       ad b1 4a 	      lda	_bottom_row
      4  4317		       c9 17		      cmp	#23
      5  4319		       f0 03		      beq	*+5
      6  431b				  -	      IFCONST	_EL_65553
      7  431b				  -	      jmp	_EL_65553
      8  431b					      ELSE
      9  431b		       4c 21 43 	      jmp	_EI_65553
     10  431e					      ENDIF
   6362  431e		       4c 56 46 	      jmp	_Lgame_over
   6363  4321
   6364  4321
   6365  4321
   6366  4321
   6367  4321
   6368  4321
   6369  4321				   _EI_65553
   6370  4321				   FPULL      SET	0
   6371  4321				   FPUSH      SET	1
      0  4321					      pbyte	#1
      1  4321		       a9 01		      lda	#1
      2  4323				  -	      IF	!FPUSH
      3  4323				  -	      pha
      4  4323					      ENDIF
   6373  4323				   FPULL      SET	1
   6374  4323				   FPUSH      SET	0
      0  4323					      plb2var	_enemy_dir
      1  4323				  -	      IF	!FPULL
      2  4323				  -	      pla
      3  4323					      ENDIF
      4  4323		       8d b2 4a 	      sta	_enemy_dir
   6376  4326				   _EI_31
   6377  4326
   6378  4326
   6379  4326
   6380  4326
   6381  4326
   6382  4326
   6383  4326
   6384  4326				   _Leloop
      0  4326					      paddr	_event
      0  4326					      pword	_event
      1  4326					      IF	!FPUSH
      2  4326		       a9 f3		      lda	#<_event
      3  4328		       48		      pha
      4  4329		       a9 4a		      lda	#>_event
      5  432b		       48		      pha
      6  432c				  -	      ELSE
      7  432c				  -	      lda	#<_event
      8  432c				  -	      ldy	#>_event
      9  432c					      ENDIF
   6386  432c				   FPULL      SET	0
      0  432c					      plw2var	_detect_collisions.result_ptr
      1  432c					      IF	!FPULL
      2  432c		       68		      pla
      3  432d		       8d dd 4a 	      sta	_detect_collisions.result_ptr+1
      4  4330		       68		      pla
      5  4331		       8d dc 4a 	      sta	_detect_collisions.result_ptr
      6  4334				  -	      ELSE
      7  4334				  -	      sta	_detect_collisions.result_ptr
      8  4334				  -	      sty	_detect_collisions.result_ptr+1
      9  4334					      ENDIF
   6388  4334		       20 03 28 	      jsr	_Pdetect_collisions
   6389  4334				   FPUSH      SET	1
      0  4337					      pbvar	_event
      0  4337					      pbyte	_event
      1  4337		       ad f3 4a 	      lda	_event
      2  433a				  -	      IF	!FPUSH
      3  433a				  -	      pha
      4  433a					      ENDIF
   6391  433a				   FPULL      SET	1
   6392  433a				   FPUSH      SET	0
      0  433a					      ongoto	_On_LB4, _On_HB4
      1  433a				  -	      IF	!FPULL
      2  433a				  -	      pla
      3  433a					      ENDIF
      4  433a		       aa		      tax
      5  433b		       bd e2 49 	      lda.wx	_On_LB4
      6  433e		       8d 48 43 	      sta	.selfmod_code+1
      7  4341		       bd e5 49 	      lda.wx	_On_HB4
      8  4344		       8d 49 43 	      sta	.selfmod_code+2
      9  4347				   .selfmod_code
     10  4347		       4c 00 00 	      jmp	$0000
   6394  434a				   _Lskip
   6395  434a		       20 c5 2f 	      jsr	_Pmove_ship
      0  434d					      pbyte_pbyte_cmpbgte_cond	_framecount_shooting, _enemies_alive, _EI_65554, _EL_65554
      1  434d
      2  434d
      3  434d		       ad f2 4a 	      lda	_framecount_shooting
      4  4350		       cd c0 4a 	      cmp	_enemies_alive
      5  4353		       b0 03		      bcs	*+5
      6  4355				  -	      IFCONST	_EL_65554
      7  4355				  -	      jmp	_EL_65554
      8  4355					      ELSE
      9  4355		       4c 60 43 	      jmp	_EI_65554
     10  4358					      ENDIF
   6397  4358		       20 30 32 	      jsr	_Penemy_shooting
   6398  4358				   FPULL      SET	0
   6399  4358				   FPUSH      SET	1
      0  435b					      pbyte	#0
      1  435b		       a9 00		      lda	#0
      2  435d				  -	      IF	!FPUSH
      3  435d				  -	      pha
      4  435d					      ENDIF
   6401  435d				   FPULL      SET	1
   6402  435d				   FPUSH      SET	0
      0  435d					      plb2var	_framecount_shooting
      1  435d				  -	      IF	!FPULL
      2  435d				  -	      pla
      3  435d					      ENDIF
      4  435d		       8d f2 4a 	      sta	_framecount_shooting
   6404  4360				   _EI_65554
   6405  4360		       4c 55 42 	      jmp	_Lloop
   6406  4363
   6407  4363
   6408  4363
   6409  4363
   6410  4363
   6411  4363
   6412  4363
   6413  4363				   _Llive_lost
   6414  4363				   FPULL      SET	0
   6415  4363				   FPUSH      SET	1
      0  4363					      pbyte	#0
      1  4363		       a9 00		      lda	#0
      2  4365				  -	      IF	!FPUSH
      3  4365				  -	      pha
      4  4365					      ENDIF
   6417  4365				   FPULL      SET	1
   6418  4365				   FPUSH      SET	0
      0  4365					      plb2var	_i
      1  4365				  -	      IF	!FPULL
      2  4365				  -	      pla
      3  4365					      ENDIF
      4  4365		       8d f4 4a 	      sta	_i
   6420  4365				   FPULL      SET	0
      0  4368					      pbyte	#2
      1  4368		       a9 02		      lda	#2
      2  436a					      IF	!FPUSH
      3  436a		       48		      pha
      4  436b					      ENDIF
      0  436b					      for
      1  436b
      2  436b
      3  436b				   .addr
      4  436b		       a9 6b		      lda	#<.addr
      5  436d		       48		      pha
      6  436e		       a9 43		      lda	#>.addr
      7  4370		       48		      pha
      0  4371					      pbyte	#0
      1  4371		       a9 00		      lda	#0
      2  4373					      IF	!FPUSH
      3  4373		       48		      pha
      4  4374					      ENDIF
   6424  4374				   FPUSH      SET	1
      0  4374					      pbvar	_i
      0  4374					      pbyte	_i
      1  4374		       ad f4 4a 	      lda	_i
      2  4377				  -	      IF	!FPUSH
      3  4377				  -	      pha
      4  4377					      ENDIF
   6426  4377				   FPULL      SET	1
   6427  4377				   FPUSH      SET	0
      0  4377					      plbarray_fast	_enemy_bullet_on
      1  4377				  -	      IF	!FPULL
      2  4377				  -	      pla
      3  4377					      ENDIF
      4  4377		       aa		      tax
      5  4378		       68		      pla
      6  4379		       9d a2 4a 	      sta	_enemy_bullet_on,x
      0  437c					      nextb	_i
      1  437c
      2  437c		       ee f4 4a 	      inc	_i
      3  437f
      4  437f		       f0 15		      beq	.end
      5  4381				   .skip
      6  4381
      7  4381		       68		      pla
      8  4382		       8d 95 43 	      sta	.selfmod_code+2
      9  4385		       68		      pla
     10  4386		       8d 94 43 	      sta	.selfmod_code+1
     11  4389
     12  4389		       68		      pla
     13  438a		       cd f4 4a 	      cmp	_i
     14  438d		       b0 03		      bcs	.jump_back
     15  438f		       4c 96 43 	      jmp	.end
     16  4392				   .jump_back
     17  4392
     18  4392		       48		      pha
     19  4393				   .selfmod_code
     20  4393		       4c 00 00 	      jmp	$0000
     21  4396				   .end
   6430  4396				   FPULL      SET	0
      0  4396					      pbyte	#1
      1  4396		       a9 01		      lda	#1
      2  4398					      IF	!FPUSH
      3  4398		       48		      pha
      4  4399					      ENDIF
   6432  4399				   FPUSH      SET	1
      0  4399					      pword	#53269
      1  4399				  -	      IF	!FPUSH
      2  4399				  -	      lda	#<#53269
      3  4399				  -	      pha
      4  4399				  -	      lda	#>#53269
      5  4399				  -	      pha
      6  4399					      ELSE
      7  4399		       a9 15		      lda	#<#53269
      8  439b		       a0 d0		      ldy	#>#53269
      9  439d					      ENDIF
   6434  439d				   FPULL      SET	1
   6435  439d				   FPUSH      SET	0
      0  439d					      pokeb
      1  439d				  -	      IF	!FPULL
      2  439d				  -	      pla
      3  439d				  -	      sta	.selfmod_code+2
      4  439d				  -	      pla
      5  439d				  -	      sta	.selfmod_code+1
      6  439d					      ELSE
      7  439d		       8d a5 43 	      sta	.selfmod_code+1
      8  43a0		       8c a6 43 	      sty	.selfmod_code+2
      9  43a3					      ENDIF
     10  43a3		       68		      pla
     11  43a4				   .selfmod_code
     12  43a4		       8d 00 00 	      sta.w	$0000
   6437  43a4				   FPULL      SET	0
   6438  43a4				   FPUSH      SET	1
      0  43a7					      pbyte	#250
      1  43a7		       a9 fa		      lda	#250
      2  43a9				  -	      IF	!FPUSH
      3  43a9				  -	      pha
      4  43a9					      ENDIF
   6440  43a9				   FPULL      SET	1
   6441  43a9				   FPUSH      SET	0
      0  43a9					      plb2var	_i
      1  43a9				  -	      IF	!FPULL
      2  43a9				  -	      pla
      3  43a9					      ENDIF
      4  43a9		       8d f4 4a 	      sta	_i
   6443  43a9				   FPULL      SET	0
      0  43ac					      pbyte	#253
      1  43ac		       a9 fd		      lda	#253
      2  43ae					      IF	!FPUSH
      3  43ae		       48		      pha
      4  43af					      ENDIF
      0  43af					      for
      1  43af
      2  43af
      3  43af				   .addr
      4  43af		       a9 af		      lda	#<.addr
      5  43b1		       48		      pha
      6  43b2		       a9 43		      lda	#>.addr
      7  43b4		       48		      pha
      0  43b5					      pbvar	_i
      0  43b5					      pbyte	_i
      1  43b5		       ad f4 4a 	      lda	_i
      2  43b8					      IF	!FPUSH
      3  43b8		       48		      pha
      4  43b9					      ENDIF
   6447  43b9				   FPUSH      SET	1
      0  43b9					      pword	#2040
      1  43b9				  -	      IF	!FPUSH
      2  43b9				  -	      lda	#<#2040
      3  43b9				  -	      pha
      4  43b9				  -	      lda	#>#2040
      5  43b9				  -	      pha
      6  43b9					      ELSE
      7  43b9		       a9 f8		      lda	#<#2040
      8  43bb		       a0 07		      ldy	#>#2040
      9  43bd					      ENDIF
   6449  43bd				   FPULL      SET	1
   6450  43bd				   FPUSH      SET	0
      0  43bd					      pokeb
      1  43bd				  -	      IF	!FPULL
      2  43bd				  -	      pla
      3  43bd				  -	      sta	.selfmod_code+2
      4  43bd				  -	      pla
      5  43bd				  -	      sta	.selfmod_code+1
      6  43bd					      ELSE
      7  43bd		       8d c5 43 	      sta	.selfmod_code+1
      8  43c0		       8c c6 43 	      sty	.selfmod_code+2
      9  43c3					      ENDIF
     10  43c3		       68		      pla
     11  43c4				   .selfmod_code
     12  43c4		       8d 00 00 	      sta.w	$0000
   6452  43c4				   FPULL      SET	0
   6453  43c4				   FPUSH      SET	1
      0  43c7					      pbyte	#0
      1  43c7		       a9 00		      lda	#0
      2  43c9				  -	      IF	!FPUSH
      3  43c9				  -	      pha
      4  43c9					      ENDIF
   6455  43c9				   FPULL      SET	1
   6456  43c9				   FPUSH      SET	0
      0  43c9					      plb2var	_j
      1  43c9				  -	      IF	!FPULL
      2  43c9				  -	      pla
      3  43c9					      ENDIF
      4  43c9		       8d f5 4a 	      sta	_j
   6458  43c9				   FPULL      SET	0
      0  43cc					      pbyte	#25
      1  43cc		       a9 19		      lda	#25
      2  43ce					      IF	!FPUSH
      3  43ce		       48		      pha
      4  43cf					      ENDIF
      0  43cf					      for
      1  43cf
      2  43cf
      3  43cf				   .addr
      4  43cf		       a9 cf		      lda	#<.addr
      5  43d1		       48		      pha
      6  43d2		       a9 43		      lda	#>.addr
      7  43d4		       48		      pha
   6461  43d4				   FPUSH      SET	1
      0  43d5					      pbyte	#0
      1  43d5		       a9 00		      lda	#0
      2  43d7				  -	      IF	!FPUSH
      3  43d7				  -	      pha
      4  43d7					      ENDIF
   6463  43d7				   FPULL      SET	1
   6464  43d7				   FPUSH      SET	0
      0  43d7					      watchc	53266
      1  43d7				  -	      IF	!FPULL
      2  43d7				  -	      pla
      3  43d7					      ENDIF
      4  43d7				   .again
      5  43d7		       cd 12 d0 	      cmp	53266
      6  43da		       d0 fb		      bne	.again
      0  43dc					      nextb	_j
      1  43dc
      2  43dc		       ee f5 4a 	      inc	_j
      3  43df
      4  43df		       f0 15		      beq	.end
      5  43e1				   .skip
      6  43e1
      7  43e1		       68		      pla
      8  43e2		       8d f5 43 	      sta	.selfmod_code+2
      9  43e5		       68		      pla
     10  43e6		       8d f4 43 	      sta	.selfmod_code+1
     11  43e9
     12  43e9		       68		      pla
     13  43ea		       cd f5 4a 	      cmp	_j
     14  43ed		       b0 03		      bcs	.jump_back
     15  43ef		       4c f6 43 	      jmp	.end
     16  43f2				   .jump_back
     17  43f2
     18  43f2		       48		      pha
     19  43f3				   .selfmod_code
     20  43f3		       4c 00 00 	      jmp	$0000
     21  43f6				   .end
      0  43f6					      nextb	_i
      1  43f6
      2  43f6		       ee f4 4a 	      inc	_i
      3  43f9
      4  43f9		       f0 15		      beq	.end
      5  43fb				   .skip
      6  43fb
      7  43fb		       68		      pla
      8  43fc		       8d 0f 44 	      sta	.selfmod_code+2
      9  43ff		       68		      pla
     10  4400		       8d 0e 44 	      sta	.selfmod_code+1
     11  4403
     12  4403		       68		      pla
     13  4404		       cd f4 4a 	      cmp	_i
     14  4407		       b0 03		      bcs	.jump_back
     15  4409		       4c 10 44 	      jmp	.end
     16  440c				   .jump_back
     17  440c
     18  440c		       48		      pha
     19  440d				   .selfmod_code
     20  440d		       4c 00 00 	      jmp	$0000
     21  4410				   .end
      0  4410					      decb	_lives
      1  4410		       ce bd 4a 	      dec	_lives
   6469  4410				   FPULL      SET	0
      0  4413					      pbyte	#0
      1  4413		       a9 00		      lda	#0
      2  4415					      IF	!FPUSH
      3  4415		       48		      pha
      4  4416					      ENDIF
      0  4416					      btow
      1  4416		       a9 00		      lda	#$00
      2  4418		       48		      pha
   6472  4418				   FPUSH      SET	1
      0  4419					      pword	#40
      1  4419				  -	      IF	!FPUSH
      2  4419				  -	      lda	#<#40
      3  4419				  -	      pha
      4  4419				  -	      lda	#>#40
      5  4419				  -	      pha
      6  4419					      ELSE
      7  4419		       a9 28		      lda	#<#40
      8  441b		       a0 00		      ldy	#>#40
      9  441d					      ENDIF
   6474  441d				   FPULL      SET	1
   6475  441d				   FPUSH      SET	0
      0  441d					      mulw
      1  441d				  -	      IF	!FPULL
      2  441d				  -	      pla
      3  441d				  -	      sta	R1
      4  441d				  -	      pla
      5  441d				  -	      sta	R0
      6  441d					      ELSE
      7  441d		       85 fb		      sta	R0
      8  441f		       84 fc		      sty	R1
      9  4421					      ENDIF
     10  4421		       68		      pla
     11  4422		       85 fe		      sta	R3
     12  4424		       68		      pla
     13  4425		       85 fd		      sta	R2
     14  4427		       20 0d 08 	      jsr	NUCL_SMUL16
     15  442a					      IF	!FPUSH
     16  442a		       a5 fb		      lda	R0
     17  442c		       48		      pha
     18  442d		       a5 fc		      lda	R1
     19  442f		       48		      pha
     20  4430				  -	      ELSE
     21  4430				  -	      lda	R0
     22  4430				  -	      ldy	R1
     23  4430					      ENDIF
   6477  4430				   FPULL      SET	0
      0  4430					      pbyte	#38
      1  4430		       a9 26		      lda	#38
      2  4432					      IF	!FPUSH
      3  4432		       48		      pha
      4  4433					      ENDIF
      0  4433					      btow
      1  4433		       a9 00		      lda	#$00
      2  4435		       48		      pha
      0  4436					      addw
      1  4436		       ba		      tsx
      2  4437		       bd 02 01 	      lda.wx	stack+2
      3  443a		       18		      clc
      4  443b		       7d 04 01 	      adc.wx	stack+4
      5  443e		       9d 04 01 	      sta.wx	stack+4
      6  4441		       68		      pla
      7  4442		       7d 03 01 	      adc.wx	stack+3
      8  4445		       9d 03 01 	      sta.wx	stack+3
      9  4448		       68		      pla
      0  4449					      pword	#1024
      1  4449					      IF	!FPUSH
      2  4449		       a9 00		      lda	#<#1024
      3  444b		       48		      pha
      4  444c		       a9 04		      lda	#>#1024
      5  444e		       48		      pha
      6  444f				  -	      ELSE
      7  444f				  -	      lda	#<#1024
      8  444f				  -	      ldy	#>#1024
      9  444f					      ENDIF
      0  444f					      addw
      1  444f		       ba		      tsx
      2  4450		       bd 02 01 	      lda.wx	stack+2
      3  4453		       18		      clc
      4  4454		       7d 04 01 	      adc.wx	stack+4
      5  4457		       9d 04 01 	      sta.wx	stack+4
      6  445a		       68		      pla
      7  445b		       7d 03 01 	      adc.wx	stack+3
      8  445e		       9d 03 01 	      sta.wx	stack+3
      9  4461		       68		      pla
   6483  4461				   FPUSH      SET	1
      0  4462					      pbvar	_lives
      0  4462					      pbyte	_lives
      1  4462		       ad bd 4a 	      lda	_lives
      2  4465				  -	      IF	!FPUSH
      3  4465				  -	      pha
      4  4465					      ENDIF
   6485  4465
   6486  4465				   FPULL      SET	1
   6487  4465				   FPUSH      SET	0
      0  4465					      bat
      1  4465				  -	      IF	!FPULL
      2  4465				  -	      pla
      3  4465					      ENDIF
      4  4465		       aa		      tax
      5  4466		       68		      pla
      6  4467		       85 46		      sta	RB
      7  4469		       68		      pla
      8  446a		       85 45		      sta	RA
      9  446c		       8a		      txa
     10  446d		       20 6d 0a 	      jsr	STDLIB_OUTPUT_BYTE
      0  4470					      pbyte_pbyte_cmpbeq_cond	_lives, #0, _EI_65555, _EL_65555
      1  4470
      2  4470
      3  4470		       ad bd 4a 	      lda	_lives
      4  4473		       c9 00		      cmp	#0
      5  4475		       f0 03		      beq	*+5
      6  4477				  -	      IFCONST	_EL_65555
      7  4477				  -	      jmp	_EL_65555
      8  4477					      ELSE
      9  4477		       4c 7d 44 	      jmp	_EI_65555
     10  447a					      ENDIF
   6490  447a		       4c 56 46 	      jmp	_Lgame_over
   6491  447d
   6492  447d
   6493  447d
   6494  447d
   6495  447d
   6496  447d
   6497  447d
   6498  447d				   _EI_65555
      0  447d					      paddr	_S4
      0  447d					      pword	_S4
      1  447d					      IF	!FPUSH
      2  447d		       a9 e8		      lda	#<_S4
      3  447f		       48		      pha
      4  4480		       a9 49		      lda	#>_S4
      5  4482		       48		      pha
      6  4483				  -	      ELSE
      7  4483				  -	      lda	#<_S4
      8  4483				  -	      ldy	#>_S4
      9  4483					      ENDIF
   6500  4483				   FPULL      SET	0
      0  4483					      pbyte	#2
      1  4483		       a9 02		      lda	#2
      2  4485					      IF	!FPUSH
      3  4485		       48		      pha
      4  4486					      ENDIF
      0  4486					      btow
      1  4486		       a9 00		      lda	#$00
      2  4488		       48		      pha
   6503  4488				   FPUSH      SET	1
      0  4489					      pword	#40
      1  4489				  -	      IF	!FPUSH
      2  4489				  -	      lda	#<#40
      3  4489				  -	      pha
      4  4489				  -	      lda	#>#40
      5  4489				  -	      pha
      6  4489					      ELSE
      7  4489		       a9 28		      lda	#<#40
      8  448b		       a0 00		      ldy	#>#40
      9  448d					      ENDIF
   6505  448d				   FPULL      SET	1
   6506  448d				   FPUSH      SET	0
      0  448d					      mulw
      1  448d				  -	      IF	!FPULL
      2  448d				  -	      pla
      3  448d				  -	      sta	R1
      4  448d				  -	      pla
      5  448d				  -	      sta	R0
      6  448d					      ELSE
      7  448d		       85 fb		      sta	R0
      8  448f		       84 fc		      sty	R1
      9  4491					      ENDIF
     10  4491		       68		      pla
     11  4492		       85 fe		      sta	R3
     12  4494		       68		      pla
     13  4495		       85 fd		      sta	R2
     14  4497		       20 0d 08 	      jsr	NUCL_SMUL16
     15  449a					      IF	!FPUSH
     16  449a		       a5 fb		      lda	R0
     17  449c		       48		      pha
     18  449d		       a5 fc		      lda	R1
     19  449f		       48		      pha
     20  44a0				  -	      ELSE
     21  44a0				  -	      lda	R0
     22  44a0				  -	      ldy	R1
     23  44a0					      ENDIF
   6508  44a0				   FPULL      SET	0
      0  44a0					      pbyte	#4
      1  44a0		       a9 04		      lda	#4
      2  44a2					      IF	!FPUSH
      3  44a2		       48		      pha
      4  44a3					      ENDIF
      0  44a3					      btow
      1  44a3		       a9 00		      lda	#$00
      2  44a5		       48		      pha
      0  44a6					      addw
      1  44a6		       ba		      tsx
      2  44a7		       bd 02 01 	      lda.wx	stack+2
      3  44aa		       18		      clc
      4  44ab		       7d 04 01 	      adc.wx	stack+4
      5  44ae		       9d 04 01 	      sta.wx	stack+4
      6  44b1		       68		      pla
      7  44b2		       7d 03 01 	      adc.wx	stack+3
      8  44b5		       9d 03 01 	      sta.wx	stack+3
      9  44b8		       68		      pla
      0  44b9					      pword	#1024
      1  44b9					      IF	!FPUSH
      2  44b9		       a9 00		      lda	#<#1024
      3  44bb		       48		      pha
      4  44bc		       a9 04		      lda	#>#1024
      5  44be		       48		      pha
      6  44bf				  -	      ELSE
      7  44bf				  -	      lda	#<#1024
      8  44bf				  -	      ldy	#>#1024
      9  44bf					      ENDIF
      0  44bf					      addw
      1  44bf		       ba		      tsx
      2  44c0		       bd 02 01 	      lda.wx	stack+2
      3  44c3		       18		      clc
      4  44c4		       7d 04 01 	      adc.wx	stack+4
      5  44c7		       9d 04 01 	      sta.wx	stack+4
      6  44ca		       68		      pla
      7  44cb		       7d 03 01 	      adc.wx	stack+3
      8  44ce		       9d 03 01 	      sta.wx	stack+3
      9  44d1		       68		      pla
      0  44d2					      textat
      1  44d2					      IF	!FPULL
      2  44d2		       68		      pla
      3  44d3		       85 fe		      sta	R3
      4  44d5		       68		      pla
      5  44d6		       85 fd		      sta	R2
      6  44d8				  -	      ELSE
      7  44d8				  -	      sta	R2
      8  44d8				  -	      sty	R3
      9  44d8					      ENDIF
     10  44d8		       68		      pla
     11  44d9		       85 fc		      sta	R1
     12  44db		       68		      pla
     13  44dc		       85 fb		      sta	R0
     14  44de		       a0 00		      ldy	#$00
     15  44e0				   .loop
     16  44e0		       b1 fb		      lda	(R0),y
     17  44e2		       f0 06		      beq	.end
     18  44e4		       91 fd		      sta	(R2),y
     19  44e6		       c8		      iny
     20  44e7		       4c e0 44 	      jmp	.loop
     21  44ea				   .end
   6515  44ea		       20 3c 47 	      jsr	_Lwait_fire
      0  44ed					      pbyte	#32
      1  44ed		       a9 20		      lda	#32
      2  44ef					      IF	!FPUSH
      3  44ef		       48		      pha
      4  44f0					      ENDIF
      0  44f0					      pbyte	#40
      1  44f0		       a9 28		      lda	#40
      2  44f2					      IF	!FPUSH
      3  44f2		       48		      pha
      4  44f3					      ENDIF
      0  44f3					      btow
      1  44f3		       a9 00		      lda	#$00
      2  44f5		       48		      pha
      0  44f6					      pword	#1104
      1  44f6					      IF	!FPUSH
      2  44f6		       a9 50		      lda	#<#1104
      3  44f8		       48		      pha
      4  44f9		       a9 04		      lda	#>#1104
      5  44fb		       48		      pha
      6  44fc				  -	      ELSE
      7  44fc				  -	      lda	#<#1104
      8  44fc				  -	      ldy	#>#1104
      9  44fc					      ENDIF
      0  44fc					      memset
      1  44fc					      IF	!FPULL
      2  44fc		       68		      pla
      3  44fd		       85 fc		      sta	R1
      4  44ff		       68		      pla
      5  4500		       85 fb		      sta	R0
      6  4502				  -	      ELSE
      7  4502				  -	      sta	R0
      8  4502				  -	      sty	R1
      9  4502					      ENDIF
     10  4502		       68		      pla
     11  4503		       85 fe		      sta	R3
     12  4505		       68		      pla
     13  4506		       85 fd		      sta	R2
     14  4508		       68		      pla
     15  4509		       20 de 0a 	      jsr	mem_memset
      0  450c					      pbyte	#255
      1  450c		       a9 ff		      lda	#255
      2  450e					      IF	!FPUSH
      3  450e		       48		      pha
      4  450f					      ENDIF
   6522  450f				   FPUSH      SET	1
      0  450f					      pword	#2040
      1  450f				  -	      IF	!FPUSH
      2  450f				  -	      lda	#<#2040
      3  450f				  -	      pha
      4  450f				  -	      lda	#>#2040
      5  450f				  -	      pha
      6  450f					      ELSE
      7  450f		       a9 f8		      lda	#<#2040
      8  4511		       a0 07		      ldy	#>#2040
      9  4513					      ENDIF
   6524  4513				   FPULL      SET	1
   6525  4513				   FPUSH      SET	0
      0  4513					      pokeb
      1  4513				  -	      IF	!FPULL
      2  4513				  -	      pla
      3  4513				  -	      sta	.selfmod_code+2
      4  4513				  -	      pla
      5  4513				  -	      sta	.selfmod_code+1
      6  4513					      ELSE
      7  4513		       8d 1b 45 	      sta	.selfmod_code+1
      8  4516		       8c 1c 45 	      sty	.selfmod_code+2
      9  4519					      ENDIF
     10  4519		       68		      pla
     11  451a				   .selfmod_code
     12  451a		       8d 00 00 	      sta.w	$0000
   6527  451d		       4c 55 41 	      jmp	_Lgame
   6528  4520				   _Lgame_won
   6529  4520				   FPULL      SET	0
   6530  4520				   FPUSH      SET	1
      0  4520					      pbyte	#0
      1  4520		       a9 00		      lda	#0
      2  4522				  -	      IF	!FPUSH
      3  4522				  -	      pha
      4  4522					      ENDIF
   6532  4522				   FPULL      SET	1
   6533  4522				   FPUSH      SET	0
      0  4522					      plb2var	_i
      1  4522				  -	      IF	!FPULL
      2  4522				  -	      pla
      3  4522					      ENDIF
      4  4522		       8d f4 4a 	      sta	_i
   6535  4522				   FPULL      SET	0
      0  4525					      pbyte	#2
      1  4525		       a9 02		      lda	#2
      2  4527					      IF	!FPUSH
      3  4527		       48		      pha
      4  4528					      ENDIF
      0  4528					      for
      1  4528
      2  4528
      3  4528				   .addr
      4  4528		       a9 28		      lda	#<.addr
      5  452a		       48		      pha
      6  452b		       a9 45		      lda	#>.addr
      7  452d		       48		      pha
      0  452e					      pbyte	#0
      1  452e		       a9 00		      lda	#0
      2  4530					      IF	!FPUSH
      3  4530		       48		      pha
      4  4531					      ENDIF
   6539  4531				   FPUSH      SET	1
      0  4531					      pbvar	_i
      0  4531					      pbyte	_i
      1  4531		       ad f4 4a 	      lda	_i
      2  4534				  -	      IF	!FPUSH
      3  4534				  -	      pha
      4  4534					      ENDIF
   6541  4534				   FPULL      SET	1
   6542  4534				   FPUSH      SET	0
      0  4534					      plbarray_fast	_enemy_bullet_on
      1  4534				  -	      IF	!FPULL
      2  4534				  -	      pla
      3  4534					      ENDIF
      4  4534		       aa		      tax
      5  4535		       68		      pla
      6  4536		       9d a2 4a 	      sta	_enemy_bullet_on,x
      0  4539					      nextb	_i
      1  4539
      2  4539		       ee f4 4a 	      inc	_i
      3  453c
      4  453c		       f0 15		      beq	.end
      5  453e				   .skip
      6  453e
      7  453e		       68		      pla
      8  453f		       8d 52 45 	      sta	.selfmod_code+2
      9  4542		       68		      pla
     10  4543		       8d 51 45 	      sta	.selfmod_code+1
     11  4546
     12  4546		       68		      pla
     13  4547		       cd f4 4a 	      cmp	_i
     14  454a		       b0 03		      bcs	.jump_back
     15  454c		       4c 53 45 	      jmp	.end
     16  454f				   .jump_back
     17  454f
     18  454f		       48		      pha
     19  4550				   .selfmod_code
     20  4550		       4c 00 00 	      jmp	$0000
     21  4553				   .end
   6545  4553				   FPULL      SET	0
      0  4553					      pbyte	#1
      1  4553		       a9 01		      lda	#1
      2  4555					      IF	!FPUSH
      3  4555		       48		      pha
      4  4556					      ENDIF
   6547  4556				   FPUSH      SET	1
      0  4556					      pword	#53269
      1  4556				  -	      IF	!FPUSH
      2  4556				  -	      lda	#<#53269
      3  4556				  -	      pha
      4  4556				  -	      lda	#>#53269
      5  4556				  -	      pha
      6  4556					      ELSE
      7  4556		       a9 15		      lda	#<#53269
      8  4558		       a0 d0		      ldy	#>#53269
      9  455a					      ENDIF
   6549  455a				   FPULL      SET	1
   6550  455a				   FPUSH      SET	0
      0  455a					      pokeb
      1  455a				  -	      IF	!FPULL
      2  455a				  -	      pla
      3  455a				  -	      sta	.selfmod_code+2
      4  455a				  -	      pla
      5  455a				  -	      sta	.selfmod_code+1
      6  455a					      ELSE
      7  455a		       8d 62 45 	      sta	.selfmod_code+1
      8  455d		       8c 63 45 	      sty	.selfmod_code+2
      9  4560					      ENDIF
     10  4560		       68		      pla
     11  4561				   .selfmod_code
     12  4561		       8d 00 00 	      sta.w	$0000
      0  4564					      incb	_lives
      1  4564		       ee bd 4a 	      inc	_lives
   6553  4564				   FPULL      SET	0
      0  4567					      pbyte	#0
      1  4567		       a9 00		      lda	#0
      2  4569					      IF	!FPUSH
      3  4569		       48		      pha
      4  456a					      ENDIF
      0  456a					      btow
      1  456a		       a9 00		      lda	#$00
      2  456c		       48		      pha
   6556  456c				   FPUSH      SET	1
      0  456d					      pword	#40
      1  456d				  -	      IF	!FPUSH
      2  456d				  -	      lda	#<#40
      3  456d				  -	      pha
      4  456d				  -	      lda	#>#40
      5  456d				  -	      pha
      6  456d					      ELSE
      7  456d		       a9 28		      lda	#<#40
      8  456f		       a0 00		      ldy	#>#40
      9  4571					      ENDIF
   6558  4571				   FPULL      SET	1
   6559  4571				   FPUSH      SET	0
      0  4571					      mulw
      1  4571				  -	      IF	!FPULL
      2  4571				  -	      pla
      3  4571				  -	      sta	R1
      4  4571				  -	      pla
      5  4571				  -	      sta	R0
      6  4571					      ELSE
      7  4571		       85 fb		      sta	R0
      8  4573		       84 fc		      sty	R1
      9  4575					      ENDIF
     10  4575		       68		      pla
     11  4576		       85 fe		      sta	R3
     12  4578		       68		      pla
     13  4579		       85 fd		      sta	R2
     14  457b		       20 0d 08 	      jsr	NUCL_SMUL16
     15  457e					      IF	!FPUSH
     16  457e		       a5 fb		      lda	R0
     17  4580		       48		      pha
     18  4581		       a5 fc		      lda	R1
     19  4583		       48		      pha
     20  4584				  -	      ELSE
     21  4584				  -	      lda	R0
     22  4584				  -	      ldy	R1
     23  4584					      ENDIF
   6561  4584				   FPULL      SET	0
      0  4584					      pbyte	#38
      1  4584		       a9 26		      lda	#38
      2  4586					      IF	!FPUSH
      3  4586		       48		      pha
      4  4587					      ENDIF
      0  4587					      btow
      1  4587		       a9 00		      lda	#$00
      2  4589		       48		      pha
      0  458a					      addw
      1  458a		       ba		      tsx
      2  458b		       bd 02 01 	      lda.wx	stack+2
      3  458e		       18		      clc
      4  458f		       7d 04 01 	      adc.wx	stack+4
      5  4592		       9d 04 01 	      sta.wx	stack+4
      6  4595		       68		      pla
      7  4596		       7d 03 01 	      adc.wx	stack+3
      8  4599		       9d 03 01 	      sta.wx	stack+3
      9  459c		       68		      pla
      0  459d					      pword	#1024
      1  459d					      IF	!FPUSH
      2  459d		       a9 00		      lda	#<#1024
      3  459f		       48		      pha
      4  45a0		       a9 04		      lda	#>#1024
      5  45a2		       48		      pha
      6  45a3				  -	      ELSE
      7  45a3				  -	      lda	#<#1024
      8  45a3				  -	      ldy	#>#1024
      9  45a3					      ENDIF
      0  45a3					      addw
      1  45a3		       ba		      tsx
      2  45a4		       bd 02 01 	      lda.wx	stack+2
      3  45a7		       18		      clc
      4  45a8		       7d 04 01 	      adc.wx	stack+4
      5  45ab		       9d 04 01 	      sta.wx	stack+4
      6  45ae		       68		      pla
      7  45af		       7d 03 01 	      adc.wx	stack+3
      8  45b2		       9d 03 01 	      sta.wx	stack+3
      9  45b5		       68		      pla
   6567  45b5				   FPUSH      SET	1
      0  45b6					      pbvar	_lives
      0  45b6					      pbyte	_lives
      1  45b6		       ad bd 4a 	      lda	_lives
      2  45b9				  -	      IF	!FPUSH
      3  45b9				  -	      pha
      4  45b9					      ENDIF
   6569  45b9
   6570  45b9				   FPULL      SET	1
   6571  45b9				   FPUSH      SET	0
      0  45b9					      bat
      1  45b9				  -	      IF	!FPULL
      2  45b9				  -	      pla
      3  45b9					      ENDIF
      4  45b9		       aa		      tax
      5  45ba		       68		      pla
      6  45bb		       85 46		      sta	RB
      7  45bd		       68		      pla
      8  45be		       85 45		      sta	RA
      9  45c0		       8a		      txa
     10  45c1		       20 6d 0a 	      jsr	STDLIB_OUTPUT_BYTE
      0  45c4					      paddr	_S5
      0  45c4					      pword	_S5
      1  45c4					      IF	!FPUSH
      2  45c4		       a9 0a		      lda	#<_S5
      3  45c6		       48		      pha
      4  45c7		       a9 4a		      lda	#>_S5
      5  45c9		       48		      pha
      6  45ca				  -	      ELSE
      7  45ca				  -	      lda	#<_S5
      8  45ca				  -	      ldy	#>_S5
      9  45ca					      ENDIF
   6574  45ca				   FPULL      SET	0
      0  45ca					      pbyte	#2
      1  45ca		       a9 02		      lda	#2
      2  45cc					      IF	!FPUSH
      3  45cc		       48		      pha
      4  45cd					      ENDIF
      0  45cd					      btow
      1  45cd		       a9 00		      lda	#$00
      2  45cf		       48		      pha
   6577  45cf				   FPUSH      SET	1
      0  45d0					      pword	#40
      1  45d0				  -	      IF	!FPUSH
      2  45d0				  -	      lda	#<#40
      3  45d0				  -	      pha
      4  45d0				  -	      lda	#>#40
      5  45d0				  -	      pha
      6  45d0					      ELSE
      7  45d0		       a9 28		      lda	#<#40
      8  45d2		       a0 00		      ldy	#>#40
      9  45d4					      ENDIF
   6579  45d4				   FPULL      SET	1
   6580  45d4				   FPUSH      SET	0
      0  45d4					      mulw
      1  45d4				  -	      IF	!FPULL
      2  45d4				  -	      pla
      3  45d4				  -	      sta	R1
      4  45d4				  -	      pla
      5  45d4				  -	      sta	R0
      6  45d4					      ELSE
      7  45d4		       85 fb		      sta	R0
      8  45d6		       84 fc		      sty	R1
      9  45d8					      ENDIF
     10  45d8		       68		      pla
     11  45d9		       85 fe		      sta	R3
     12  45db		       68		      pla
     13  45dc		       85 fd		      sta	R2
     14  45de		       20 0d 08 	      jsr	NUCL_SMUL16
     15  45e1					      IF	!FPUSH
     16  45e1		       a5 fb		      lda	R0
     17  45e3		       48		      pha
     18  45e4		       a5 fc		      lda	R1
     19  45e6		       48		      pha
     20  45e7				  -	      ELSE
     21  45e7				  -	      lda	R0
     22  45e7				  -	      ldy	R1
     23  45e7					      ENDIF
   6582  45e7				   FPULL      SET	0
      0  45e7					      pbyte	#3
      1  45e7		       a9 03		      lda	#3
      2  45e9					      IF	!FPUSH
      3  45e9		       48		      pha
      4  45ea					      ENDIF
      0  45ea					      btow
      1  45ea		       a9 00		      lda	#$00
      2  45ec		       48		      pha
      0  45ed					      addw
      1  45ed		       ba		      tsx
      2  45ee		       bd 02 01 	      lda.wx	stack+2
      3  45f1		       18		      clc
      4  45f2		       7d 04 01 	      adc.wx	stack+4
      5  45f5		       9d 04 01 	      sta.wx	stack+4
      6  45f8		       68		      pla
      7  45f9		       7d 03 01 	      adc.wx	stack+3
      8  45fc		       9d 03 01 	      sta.wx	stack+3
      9  45ff		       68		      pla
      0  4600					      pword	#1024
      1  4600					      IF	!FPUSH
      2  4600		       a9 00		      lda	#<#1024
      3  4602		       48		      pha
      4  4603		       a9 04		      lda	#>#1024
      5  4605		       48		      pha
      6  4606				  -	      ELSE
      7  4606				  -	      lda	#<#1024
      8  4606				  -	      ldy	#>#1024
      9  4606					      ENDIF
      0  4606					      addw
      1  4606		       ba		      tsx
      2  4607		       bd 02 01 	      lda.wx	stack+2
      3  460a		       18		      clc
      4  460b		       7d 04 01 	      adc.wx	stack+4
      5  460e		       9d 04 01 	      sta.wx	stack+4
      6  4611		       68		      pla
      7  4612		       7d 03 01 	      adc.wx	stack+3
      8  4615		       9d 03 01 	      sta.wx	stack+3
      9  4618		       68		      pla
      0  4619					      textat
      1  4619					      IF	!FPULL
      2  4619		       68		      pla
      3  461a		       85 fe		      sta	R3
      4  461c		       68		      pla
      5  461d		       85 fd		      sta	R2
      6  461f				  -	      ELSE
      7  461f				  -	      sta	R2
      8  461f				  -	      sty	R3
      9  461f					      ENDIF
     10  461f		       68		      pla
     11  4620		       85 fc		      sta	R1
     12  4622		       68		      pla
     13  4623		       85 fb		      sta	R0
     14  4625		       a0 00		      ldy	#$00
     15  4627				   .loop
     16  4627		       b1 fb		      lda	(R0),y
     17  4629		       f0 06		      beq	.end
     18  462b		       91 fd		      sta	(R2),y
     19  462d		       c8		      iny
     20  462e		       4c 27 46 	      jmp	.loop
     21  4631				   .end
   6589  4631		       20 3c 47 	      jsr	_Lwait_fire
      0  4634					      pbyte	#32
      1  4634		       a9 20		      lda	#32
      2  4636					      IF	!FPUSH
      3  4636		       48		      pha
      4  4637					      ENDIF
      0  4637					      pbyte	#40
      1  4637		       a9 28		      lda	#40
      2  4639					      IF	!FPUSH
      3  4639		       48		      pha
      4  463a					      ENDIF
      0  463a					      btow
      1  463a		       a9 00		      lda	#$00
      2  463c		       48		      pha
      0  463d					      pword	#1104
      1  463d					      IF	!FPUSH
      2  463d		       a9 50		      lda	#<#1104
      3  463f		       48		      pha
      4  4640		       a9 04		      lda	#>#1104
      5  4642		       48		      pha
      6  4643				  -	      ELSE
      7  4643				  -	      lda	#<#1104
      8  4643				  -	      ldy	#>#1104
      9  4643					      ENDIF
      0  4643					      memset
      1  4643					      IF	!FPULL
      2  4643		       68		      pla
      3  4644		       85 fc		      sta	R1
      4  4646		       68		      pla
      5  4647		       85 fb		      sta	R0
      6  4649				  -	      ELSE
      7  4649				  -	      sta	R0
      8  4649				  -	      sty	R1
      9  4649					      ENDIF
     10  4649		       68		      pla
     11  464a		       85 fe		      sta	R3
     12  464c		       68		      pla
     13  464d		       85 fd		      sta	R2
     14  464f		       68		      pla
     15  4650		       20 de 0a 	      jsr	mem_memset
   6595  4653		       4c a5 40 	      jmp	_Llevel
   6596  4656				   _Lgame_over
      0  4656					      paddr	_S6
      0  4656					      pword	_S6
      1  4656					      IF	!FPUSH
      2  4656		       a9 2d		      lda	#<_S6
      3  4658		       48		      pha
      4  4659		       a9 4a		      lda	#>_S6
      5  465b		       48		      pha
      6  465c				  -	      ELSE
      7  465c				  -	      lda	#<_S6
      8  465c				  -	      ldy	#>_S6
      9  465c					      ENDIF
      0  465c					      pbyte	#2
      1  465c		       a9 02		      lda	#2
      2  465e					      IF	!FPUSH
      3  465e		       48		      pha
      4  465f					      ENDIF
      0  465f					      btow
      1  465f		       a9 00		      lda	#$00
      2  4661		       48		      pha
   6600  4661				   FPUSH      SET	1
      0  4662					      pword	#40
      1  4662				  -	      IF	!FPUSH
      2  4662				  -	      lda	#<#40
      3  4662				  -	      pha
      4  4662				  -	      lda	#>#40
      5  4662				  -	      pha
      6  4662					      ELSE
      7  4662		       a9 28		      lda	#<#40
      8  4664		       a0 00		      ldy	#>#40
      9  4666					      ENDIF
   6602  4666				   FPULL      SET	1
   6603  4666				   FPUSH      SET	0
      0  4666					      mulw
      1  4666				  -	      IF	!FPULL
      2  4666				  -	      pla
      3  4666				  -	      sta	R1
      4  4666				  -	      pla
      5  4666				  -	      sta	R0
      6  4666					      ELSE
      7  4666		       85 fb		      sta	R0
      8  4668		       84 fc		      sty	R1
      9  466a					      ENDIF
     10  466a		       68		      pla
     11  466b		       85 fe		      sta	R3
     12  466d		       68		      pla
     13  466e		       85 fd		      sta	R2
     14  4670		       20 0d 08 	      jsr	NUCL_SMUL16
     15  4673					      IF	!FPUSH
     16  4673		       a5 fb		      lda	R0
     17  4675		       48		      pha
     18  4676		       a5 fc		      lda	R1
     19  4678		       48		      pha
     20  4679				  -	      ELSE
     21  4679				  -	      lda	R0
     22  4679				  -	      ldy	R1
     23  4679					      ENDIF
   6605  4679				   FPULL      SET	0
      0  4679					      pbyte	#2
      1  4679		       a9 02		      lda	#2
      2  467b					      IF	!FPUSH
      3  467b		       48		      pha
      4  467c					      ENDIF
      0  467c					      btow
      1  467c		       a9 00		      lda	#$00
      2  467e		       48		      pha
      0  467f					      addw
      1  467f		       ba		      tsx
      2  4680		       bd 02 01 	      lda.wx	stack+2
      3  4683		       18		      clc
      4  4684		       7d 04 01 	      adc.wx	stack+4
      5  4687		       9d 04 01 	      sta.wx	stack+4
      6  468a		       68		      pla
      7  468b		       7d 03 01 	      adc.wx	stack+3
      8  468e		       9d 03 01 	      sta.wx	stack+3
      9  4691		       68		      pla
      0  4692					      pword	#1024
      1  4692					      IF	!FPUSH
      2  4692		       a9 00		      lda	#<#1024
      3  4694		       48		      pha
      4  4695		       a9 04		      lda	#>#1024
      5  4697		       48		      pha
      6  4698				  -	      ELSE
      7  4698				  -	      lda	#<#1024
      8  4698				  -	      ldy	#>#1024
      9  4698					      ENDIF
      0  4698					      addw
      1  4698		       ba		      tsx
      2  4699		       bd 02 01 	      lda.wx	stack+2
      3  469c		       18		      clc
      4  469d		       7d 04 01 	      adc.wx	stack+4
      5  46a0		       9d 04 01 	      sta.wx	stack+4
      6  46a3		       68		      pla
      7  46a4		       7d 03 01 	      adc.wx	stack+3
      8  46a7		       9d 03 01 	      sta.wx	stack+3
      9  46aa		       68		      pla
      0  46ab					      textat
      1  46ab					      IF	!FPULL
      2  46ab		       68		      pla
      3  46ac		       85 fe		      sta	R3
      4  46ae		       68		      pla
      5  46af		       85 fd		      sta	R2
      6  46b1				  -	      ELSE
      7  46b1				  -	      sta	R2
      8  46b1				  -	      sty	R3
      9  46b1					      ENDIF
     10  46b1		       68		      pla
     11  46b2		       85 fc		      sta	R1
     12  46b4		       68		      pla
     13  46b5		       85 fb		      sta	R0
     14  46b7		       a0 00		      ldy	#$00
     15  46b9				   .loop
     16  46b9		       b1 fb		      lda	(R0),y
     17  46bb		       f0 06		      beq	.end
     18  46bd		       91 fd		      sta	(R2),y
     19  46bf		       c8		      iny
     20  46c0		       4c b9 46 	      jmp	.loop
     21  46c3				   .end
   6612  46c3		       20 3c 47 	      jsr	_Lwait_fire
   6613  46c6		       4c 8d 40 	      jmp	_Lset
   6614  46c9				   _Lfirst_start
      0  46c9					      paddr	_S7
      0  46c9					      pword	_S7
      1  46c9					      IF	!FPUSH
      2  46c9		       a9 52		      lda	#<_S7
      3  46cb		       48		      pha
      4  46cc		       a9 4a		      lda	#>_S7
      5  46ce		       48		      pha
      6  46cf				  -	      ELSE
      7  46cf				  -	      lda	#<_S7
      8  46cf				  -	      ldy	#>_S7
      9  46cf					      ENDIF
      0  46cf					      pbyte	#2
      1  46cf		       a9 02		      lda	#2
      2  46d1					      IF	!FPUSH
      3  46d1		       48		      pha
      4  46d2					      ENDIF
      0  46d2					      btow
      1  46d2		       a9 00		      lda	#$00
      2  46d4		       48		      pha
   6618  46d4				   FPUSH      SET	1
      0  46d5					      pword	#40
      1  46d5				  -	      IF	!FPUSH
      2  46d5				  -	      lda	#<#40
      3  46d5				  -	      pha
      4  46d5				  -	      lda	#>#40
      5  46d5				  -	      pha
      6  46d5					      ELSE
      7  46d5		       a9 28		      lda	#<#40
      8  46d7		       a0 00		      ldy	#>#40
      9  46d9					      ENDIF
   6620  46d9				   FPULL      SET	1
   6621  46d9				   FPUSH      SET	0
      0  46d9					      mulw
      1  46d9				  -	      IF	!FPULL
      2  46d9				  -	      pla
      3  46d9				  -	      sta	R1
      4  46d9				  -	      pla
      5  46d9				  -	      sta	R0
      6  46d9					      ELSE
      7  46d9		       85 fb		      sta	R0
      8  46db		       84 fc		      sty	R1
      9  46dd					      ENDIF
     10  46dd		       68		      pla
     11  46de		       85 fe		      sta	R3
     12  46e0		       68		      pla
     13  46e1		       85 fd		      sta	R2
     14  46e3		       20 0d 08 	      jsr	NUCL_SMUL16
     15  46e6					      IF	!FPUSH
     16  46e6		       a5 fb		      lda	R0
     17  46e8		       48		      pha
     18  46e9		       a5 fc		      lda	R1
     19  46eb		       48		      pha
     20  46ec				  -	      ELSE
     21  46ec				  -	      lda	R0
     22  46ec				  -	      ldy	R1
     23  46ec					      ENDIF
   6623  46ec				   FPULL      SET	0
      0  46ec					      pbyte	#11
      1  46ec		       a9 0b		      lda	#11
      2  46ee					      IF	!FPUSH
      3  46ee		       48		      pha
      4  46ef					      ENDIF
      0  46ef					      btow
      1  46ef		       a9 00		      lda	#$00
      2  46f1		       48		      pha
      0  46f2					      addw
      1  46f2		       ba		      tsx
      2  46f3		       bd 02 01 	      lda.wx	stack+2
      3  46f6		       18		      clc
      4  46f7		       7d 04 01 	      adc.wx	stack+4
      5  46fa		       9d 04 01 	      sta.wx	stack+4
      6  46fd		       68		      pla
      7  46fe		       7d 03 01 	      adc.wx	stack+3
      8  4701		       9d 03 01 	      sta.wx	stack+3
      9  4704		       68		      pla
      0  4705					      pword	#1024
      1  4705					      IF	!FPUSH
      2  4705		       a9 00		      lda	#<#1024
      3  4707		       48		      pha
      4  4708		       a9 04		      lda	#>#1024
      5  470a		       48		      pha
      6  470b				  -	      ELSE
      7  470b				  -	      lda	#<#1024
      8  470b				  -	      ldy	#>#1024
      9  470b					      ENDIF
      0  470b					      addw
      1  470b		       ba		      tsx
      2  470c		       bd 02 01 	      lda.wx	stack+2
      3  470f		       18		      clc
      4  4710		       7d 04 01 	      adc.wx	stack+4
      5  4713		       9d 04 01 	      sta.wx	stack+4
      6  4716		       68		      pla
      7  4717		       7d 03 01 	      adc.wx	stack+3
      8  471a		       9d 03 01 	      sta.wx	stack+3
      9  471d		       68		      pla
      0  471e					      textat
      1  471e					      IF	!FPULL
      2  471e		       68		      pla
      3  471f		       85 fe		      sta	R3
      4  4721		       68		      pla
      5  4722		       85 fd		      sta	R2
      6  4724				  -	      ELSE
      7  4724				  -	      sta	R2
      8  4724				  -	      sty	R3
      9  4724					      ENDIF
     10  4724		       68		      pla
     11  4725		       85 fc		      sta	R1
     12  4727		       68		      pla
     13  4728		       85 fb		      sta	R0
     14  472a		       a0 00		      ldy	#$00
     15  472c				   .loop
     16  472c		       b1 fb		      lda	(R0),y
     17  472e		       f0 06		      beq	.end
     18  4730		       91 fd		      sta	(R2),y
     19  4732		       c8		      iny
     20  4733		       4c 2c 47 	      jmp	.loop
     21  4736				   .end
   6630  4736		       20 3c 47 	      jsr	_Lwait_fire
   6631  4739		       4c 8d 40 	      jmp	_Lset
   6632  473c				   _Lwait_fire
   6633  473c				   FPUSH      SET	1
      0  473c					      peekb_const_addr	#56320
      1  473c
      2  473c
      3  473c
      4  473c		       dc 00	   .ad	      EQU	#56320
      5  473c		       ad 00 dc 	      lda	.ad
      6  473f				  -	      IF	!FPUSH
      7  473f				  -	      pha
      8  473f					      ENDIF
   6635  473f				   FPULL      SET	1
   6636  473f				   FPUSH      SET	0
      0  473f					      plb2var	_joy
      1  473f				  -	      IF	!FPULL
      2  473f				  -	      pla
      3  473f					      ENDIF
      4  473f		       8d f6 4a 	      sta	_joy
   6638  473f				   FPULL      SET	0
      0  4742					      opt_pbyte_pbyte_and	_joy, #16
      1  4742
      2  4742
      3  4742
      4  4742
      5  4742
      6  4742		       ad f6 4a 	      lda	_joy
      7  4745		       29 10		      and	#16
      8  4747					      IF	!FPUSH
      9  4747		       48		      pha
     10  4748					      ENDIF
   6640  4748				   FPUSH      SET	1
      0  4748					      pbyte	#0
      1  4748		       a9 00		      lda	#0
      2  474a				  -	      IF	!FPUSH
      3  474a				  -	      pha
      4  474a					      ENDIF
   6642  474a				   FPULL      SET	1
      0  474a					      cmpbeq
      1  474a				  -	      IF	!FPULL
      2  474a				  -	      pla
      3  474a					      ENDIF
      4  474a		       85 fc		      sta	R1
      5  474c		       68		      pla
      6  474d		       c5 fc		      cmp	R1
      7  474f		       f0 05		      beq	.pht
      0  4751					      pzero
      1  4751		       a9 00		      lda	#$00
      2  4753				  -	      IF	!FPUSH
      3  4753				  -	      pha
      4  4753					      ENDIF
      9  4753				  -	      IF	!FPUSH
     10  4753				  -	      jmp	*+6
     11  4753					      ELSE
     12  4753		       4c 58 47 	      jmp	*+5
     13  4756					      ENDIF
      0  4756				   .pht       pone
      1  4756		       a9 01		      lda	#$01
      2  4758				  -	      IF	!FPUSH
      3  4758				  -	      pha
      4  4758					      ENDIF
   6644  4758				   FPUSH      SET	0
      0  4758					      cond_stmt	_EI_65556, _EL_65556
      1  4758				  -	      IF	!FPULL
      2  4758				  -	      pla
      3  4758					      ENDIF
      4  4758		       d0 03		      bne	*+5
      5  475a				  -	      IFCONST	_EL_65556
      6  475a				  -	      jmp	_EL_65556
      7  475a					      ELSE
      8  475a		       4c 5e 47 	      jmp	_EI_65556
      9  475d					      ENDIF
   6646  475d		       60		      rts
   6647  475e				   _EI_65556
   6648  475e		       4c 3c 47 	      jmp	_Lwait_fire
   6649  4761
   6650  4761
   6651  4761
   6652  4761
   6653  4761
   6654  4761
   6655  4761
   6656  4761
   6657  4761
   6658  4761
   6659  4761
   6660  4761				   prg_end
      0  4761					      halt
      0  4761					      basicin
      1  4761		       a5 01		      lda	$01
      2  4763		       09 01		      ora	#%00000001
      3  4765		       85 01		      sta	$01
      2  4767		       ae 85 09 	      ldx	RESERVED_STACK_POINTER
      3  476a		       9a		      txs
      4  476b		       60		      rts
 Code        : $b44 - $476b
   6662  476b					      ECHO	"Code	      :",prg_start,"-", *-1
   6663  476c				   data_start
   6664  476c		       58 5a 5a 5a*_draw_scene.shield_top DC.B	#88, #90, #90, #90, #89
   6665  4771		       52 54 54 50*_map1      DC.B	#82, #84, #84, #80, #80
   6666  4776		       00 00 00 00*_ship      DC.B	#0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0
   6667  4786		       00 00 00 00*	      DC.B	#0, #0, #0, #0, #0, #0, #0, #0, #0, #24, #0, #0, #60, #0, #0, #60
   6668  4796		       00 07 ff e0*	      DC.B	#0, #7, #255, #224, #15, #255, #240, #15, #255, #240, #15, #255, #240, #0, #0, #0
   6669  47a6		       00 00 00 00*	      DC.B	#0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0
   6670  47b5		       00 00 00 00*_shape_ship_hit DC.B	#0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0
   6671  47c5		       00 00 00 00*	      DC.B	#0, #0, #0, #0, #0, #0, #0, #0, #0, #64, #0, #0, #54, #32, #4, #60
   6672  47d5		       c0 07 ff e0*	      DC.B	#192, #7, #255, #224, #15, #255, #240, #15, #255, #240, #15, #255, #240, #0, #0, #0
   6673  47e5		       00 00 00 00*	      DC.B	#0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #3
   6674  47f5		       00 00 00 00*	      DC.B	#0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0
   6675  4805		       00 00 01 88*	      DC.B	#0, #0, #1, #136, #128, #0, #201, #0, #8, #83, #0, #12, #54, #56, #4, #36
   6676  4815		       c0 07 e7 e0*	      DC.B	#192, #7, #231, #224, #15, #239, #240, #15, #239, #240, #15, #255, #240, #0, #0, #0
   6677  4825		       00 00 00 00*	      DC.B	#0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #3
   6678  4835		       00 00 00 00*	      DC.B	#0, #0, #0, #0, #0, #0, #0, #0, #0, #2, #0, #0, #2, #4, #0, #3
   6679  4845		       04 40 01 80*	      DC.B	#4, #64, #1, #128, #192, #16, #129, #0, #24, #16, #12, #8, #52, #56, #0, #36
   6680  4855		       00 07 e3 e0*	      DC.B	#0, #7, #227, #224, #15, #195, #240, #15, #199, #240, #15, #255, #240, #0, #0, #0
   6681  4865		       00 00 00 00*	      DC.B	#0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #3
   6682  4875		       00 00 00 04*	      DC.B	#0, #0, #0, #4, #0, #0, #4, #2, #0, #6, #2, #0, #2, #0, #32, #2
   6683  4885		       00 60 20 00*	      DC.B	#0, #96, #32, #0, #64, #48, #0, #2, #16, #16, #12, #0, #52, #0, #0, #36
   6684  4895		       00 07 e3 e0*	      DC.B	#0, #7, #227, #224, #12, #192, #240, #15, #71, #240, #15, #255, #240, #0, #0, #0
   6685  48a5		       00 00 00 00*	      DC.B	#0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #3
   6686  48b5		       00 00 00 04*	      DC.B	#0, #0, #0, #4, #0, #0, #0, #2, #8, #6, #0, #8, #64, #0, #32, #0
   6687  48c5		       00 00 20 00*	      DC.B	#0, #0, #32, #0, #1, #0, #0, #2, #0, #0, #0, #0, #0, #0, #0, #36
   6688  48d5		       00 06 63 60*	      DC.B	#0, #6, #99, #96, #12, #192, #112, #8, #7, #144, #15, #255, #240, #0, #0, #0
   6689  48e5		       00 00 00 00*	      DC.B	#0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #3
   6690  48f5		       00 00 00 00*	      DC.B	#0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0
   6691  4905		       00 00 00 00*	      DC.B	#0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #36
   6692  4915		       00 02 63 40*	      DC.B	#0, #2, #99, #64, #8, #0, #112, #8, #7, #144, #15, #192, #240, #0, #0, #0
   6693  4925		       00 00 00 00*	      DC.B	#0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #3
   6694  4935		       03 c0 00 0f*_ufo_shape DC.B	#3, #192, #0, #15, #240, #0, #31, #248, #0, #53, #172, #0, #255, #255, #0, #56
   6695  4945		       1c 00 10 08*	      DC.B	#28, #0, #16, #8, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0
   6696  4955		       00 00 00 00*	      DC.B	#0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0
   6697  4965		       00 00 00 00*	      DC.B	#0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #3
   6698  4975		       f9 c7 00 0a*_ufo_shape_hit DC.B	#249, #199, #0, #10, #40, #128, #18, #105, #128, #50, #170, #128, #11, #44, #128, #138
   6699  4985		       28 80 71 c7*	      DC.B	#40, #128, #113, #199, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0
   6700  4995		       00 00 00 00*	      DC.B	#0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0
   6701  49a5		       00 00 00 00*	      DC.B	#0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #0, #3
   6702  49b5		       01 02 04 08*_bits      DC.B	#1, #2, #4, #8, #16, #32, #64, #128
   6703  49bd		       13 03 0f 12*_S1	      HEX	13 03 0F 12 05 00
   6704  49c3		       18 03 02 20*_S2	      HEX	18 03 02 20 09 0E 16 01 04 05 12 13 00
   6705  49d0		       13 08 09 10*_S3	      HEX	13 08 09 10 13 00
   6706  49d6		       85 fb	   _On_LB1    DC.B	<_Linit_charset.init_1, <_Linit_charset.init_2
   6707  49d8		       15 15	   _On_HB1    DC.B	>_Linit_charset.init_1, >_Linit_charset.init_2
   6708  49da		       f2 c9	   _On_LB2    DC.B	<_Lmove_enemies.move_left, <_Lmove_enemies.move_right
   6709  49dc		       17 17	   _On_HB2    DC.B	>_Lmove_enemies.move_left, >_Lmove_enemies.move_right
   6710  49de		       07 d8	   _On_LB3    DC.B	<_Lmove_ship.no_bullet, <_Lmove_ship.bullet
   6711  49e0		       30 2f	   _On_HB3    DC.B	>_Lmove_ship.no_bullet, >_Lmove_ship.bullet
   6712  49e2		       4a 63 20    _On_LB4    DC.B	<_Lskip, <_Llive_lost, <_Lgame_won
   6713  49e5		       43 43 45    _On_HB4    DC.B	>_Lskip, >_Llive_lost, >_Lgame_won
   6714  49e8		       13 08 09 10*_S4	      HEX	13 08 09 10 20 04 0F 17 0E 21 20 10 12 05 13 13
   6715  49f8		       20 06 09 12*	      HEX	20 06 09 12 05 20 14 0F 20 03 0F 0E 14 09 0E 15
   6716  4a08		       05 00		      HEX	05 00
   6717  4a0a		       05 18 14 12*_S5	      HEX	05 18 14 12 01 20 13 08 09 10 21 20 10 12 05 13
   6718  4a1a		       13 20 06 09*	      HEX	13 20 06 09 12 05 20 14 0F 20 03 0F 0E 14 09 0E
   6719  4a2a		       15 05 00 	      HEX	15 05 00
   6720  4a2d		       07 01 0d 05*_S6	      HEX	07 01 0D 05 20 0F 16 05 12 20 2D 20 10 12 05 13
   6721  4a3d		       13 20 06 09*	      HEX	13 20 06 09 12 05 20 14 0F 20 10 0C 01 19 20 01
   6722  4a4d		       07 01 09 0e*	      HEX	07 01 09 0E 00
   6723  4a52		       10 12 05 13*_S7	      HEX	10 12 05 13 13 20 06 09 12 05 20 14 0F 20 10 0C
   6724  4a62		       01 19 00 	      HEX	01 19 00
   6725  4a65				   data_end
 Data        : $476c - $4a64
   6726  4a65					      ECHO	"Data	      :",data_start,"-", *-1
   6727  4a65							;--------------
   6728 U4af7 ????				      SEG.U	variables
   6729 U4a66					      ORG	data_end+1
   6730 U4a66		       00 00 00 00*_enemy_map DS.B	60
   6731 U4aa2		       00 00 00    _enemy_bullet_on DS.B	3
   6732 U4aa5		       00 00 00 00*_enemy_bullet_posx DS.B	6
   6733 U4aab		       00 00 00    _enemy_bullet_posy DS.B	3
   6734 U4aae		       00	   _scroll    DS.B	1
   6735 U4aaf		       00	   _enemy_posx DS.B	1
   6736 U4ab0		       00	   _enemy_posy DS.B	1
   6737 U4ab1		       00	   _bottom_row DS.B	1
   6738 U4ab2		       00	   _enemy_dir DS.B	1
   6739 U4ab3		       00 00	   _ship_pos  DS.B	2
   6740 U4ab5		       00	   _bullet_on DS.B	1
   6741 U4ab6		       00 00	   _bullet_posx DS.B	2
   6742 U4ab8		       00	   _bullet_posy DS.B	1
   6743 U4ab9		       00 00	   _last_killed_enemy DS.B	2
   6744 U4abb		       00 00	   _score     DS.B	2
   6745 U4abd		       00	   _lives     DS.B	1
   6746 U4abe		       00	   _speed     DS.B	1
   6747 U4abf		       00	   _game_speed DS.B	1
   6748 U4ac0		       00	   _enemies_alive DS.B	1
   6749 U4ac1		       00	   _scroll_bottom_limit DS.B	1
   6750 U4ac2		       00 00	   _enemy_map_length DS.B	2
   6751 U4ac4		       00 00	   _spos      DS.B	2
   6752 U4ac6		       00	   _ufo_on    DS.B	1
   6753 U4ac7		       00 00	   _ufo_pos   DS.B	2
   6754 U4ac9		       00	   _ufo_hit   DS.B	1
   6755 U4aca		       00 00	   _framecount_ufo DS.B	2
   6756 U4acc		       00	   _load_level.i DS.B	1
   6757 U4acd		       00	   _load_level.j DS.B	1
   6758 U4ace		       00	   _draw_enemies.line_no DS.B	1
   6759 U4acf		       00	   _draw_enemies.offset DS.B	1
   6760 U4ad0		       00 00	   _draw_enemies.pos DS.B	2
   6761 U4ad2		       00	   _draw_enemies.map_offset DS.B	1
   6762 U4ad3		       00	   _draw_enemies.y DS.B	1
   6763 U4ad4		       00	   _draw_enemies.x DS.B	1
   6764 U4ad5		       00	   _draw_enemies.shape DS.B	1
   6765 U4ad6		       00	   _init_charset.animphase DS.B	1
   6766 U4ad7		       00	   _framecount DS.B	1
   6767 U4ad8		       00	   _update_enemy_map_bottom.row DS.B	1
   6768 U4ad9		       00	   _update_enemy_map_bottom.row_empty DS.B	1
   6769 U4ada		       00	   _update_enemy_map_bottom.col DS.B	1
   6770 U4adb		       00	   _update_enemy_map_bottom.row_offset DS.B	1
   6771 U4adc		       00 00	   _detect_collisions.result_ptr DS.B	2
   6772 U4ade		       00	   _detect_collisions.coll_state DS.B	1
   6773 U4adf		       00	   _detect_collisions.spr_coll_state DS.B	1
   6774 U4ae0		       00	   _detect_collisions.col DS.B	1
   6775 U4ae1		       00	   _detect_collisions.row DS.B	1
   6776 U4ae2		       00 00	   _detect_collisions.hit_position DS.B	2
   6777 U4ae4		       00	   _detect_collisions.char DS.B	1
   6778 U4ae5		       00	   _detect_collisions.bn DS.B	1
   6779 U4ae6		       00	   _detect_collisions.bullet_no DS.B	1
   6780 U4ae7		       00	   _move_ship.joy DS.B	1
   6781 U4ae8		       00	   _enemy_shooting.i DS.B	1
   6782 U4ae9		       00	   _enemy_shooting.col DS.B	1
   6783 U4aea		       00	   _enemy_shooting.row DS.B	1
   6784 U4aeb		       00 00	   _enemy_shooting.addr DS.B	2
   6785 U4aed		       00	   _enemy_shooting.bit DS.B	1
   6786 U4aee		       00	   _move_enemy_bullets.i DS.B	1
   6787 U4aef		       00 00	   _move_enemy_bullets.addr DS.B	2
   6788 U4af1		       00	   _move_enemy_bullets.bit DS.B	1
   6789 U4af2		       00	   _framecount_shooting DS.B	1
   6790 U4af3		       00	   _event     DS.B	1
   6791 U4af4		       00	   _i	      DS.B	1
   6792 U4af5		       00	   _j	      DS.B	1
   6793 U4af6		       00	   _joy       DS.B	1
 Variables*  : $4a65 - $4af7
   6794 U4af6					      ECHO	"Variables*  :",data_end,"-", *
 ===================
   6795 U4af6					      ECHO	"==================="
 *: uninitialized segment
   6796 U4af6					      ECHO	"*: uninitialized segment"
   6797 U4af7
